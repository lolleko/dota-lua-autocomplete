[{"displayText":"CBaseAnimating:GetAttachmentAngles","name":"GetAttachmentAngles","rightLabel":"Class-Function","type":"method","description":"Get the attachement id's angles as a p,y,r vector.","leftLabel":"Vector","snippet":"GetAttachmentAngles(${1:int iAttachment})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.GetAttachmentAngles"},{"displayText":"CBaseAnimating:GetAttachmentOrigin","name":"GetAttachmentOrigin","rightLabel":"Class-Function","type":"method","description":"Get the attachement id's origin vector.","leftLabel":"Vector","snippet":"GetAttachmentOrigin(${1:int iAttachment})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.GetAttachmentOrigin"},{"displayText":"CBaseAnimating:GetModelScale","name":"GetModelScale","rightLabel":"Class-Function","type":"method","description":"Get scale of entity's model.","leftLabel":"float","snippet":"GetModelScale()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.GetModelScale"},{"displayText":"CBaseAnimating:IsSequenceFinished","name":"IsSequenceFinished","rightLabel":"Class-Function","type":"method","description":"Ask whether the main sequence is done playing.","leftLabel":"bool","snippet":"IsSequenceFinished()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.IsSequenceFinished"},{"displayText":"CBaseAnimating:ScriptLookupAttachment","name":"ScriptLookupAttachment","rightLabel":"Class-Function","type":"method","description":"Get the named attachement id.","leftLabel":"int","snippet":"ScriptLookupAttachment(${1:string pAttachmentName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.ScriptLookupAttachment"},{"displayText":"CBaseAnimating:SetBodygroup","name":"SetBodygroup","rightLabel":"Class-Function","type":"method","description":"Sets a bodygroup.","leftLabel":"void","snippet":"SetBodygroup(${1:int iGroup},${2:int iValue})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.SetBodygroup"},{"displayText":"CBaseAnimating:SetBodygroupByName","name":"SetBodygroupByName","rightLabel":"Class-Function","type":"method","description":"Sets a bodygroup by name.","leftLabel":"void","snippet":"SetBodygroupByName(${1:string pName},${2:int iValue})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.SetBodygroupByName"},{"displayText":"CBaseAnimating:SetModelScale","name":"SetModelScale","rightLabel":"Class-Function","type":"method","description":"Set scale of entity's model.","leftLabel":"void","snippet":"SetModelScale(${1:float flScale})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.SetModelScale"},{"displayText":"CBaseAnimating:SetPoseParameter","name":"SetPoseParameter","rightLabel":"Class-Function","type":"method","description":"Set the specified pose parameter to the specified value.","leftLabel":"float","snippet":"SetPoseParameter(${1:string szName},${2:float fValue})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseAnimating.SetPoseParameter"},{"displayText":"CBaseCombatCharacter:GetEquippedWeapons","name":"GetEquippedWeapons","rightLabel":"Class-Function","type":"method","description":"GetEquippedWeapons() : Returns an array of all the equipped weapons","leftLabel":"table","snippet":"GetEquippedWeapons()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseCombatCharacter.GetEquippedWeapons"},{"displayText":"CBaseCombatCharacter:GetFaction","name":"GetFaction","rightLabel":"Class-Function","type":"method","description":"Get the combat character faction.","leftLabel":"int","snippet":"GetFaction()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseCombatCharacter.GetFaction"},{"displayText":"CBaseCombatCharacter:GetWeaponCount","name":"GetWeaponCount","rightLabel":"Class-Function","type":"method","description":"GetWeaponCount() : Gets the number of weapons currently equipped","leftLabel":"int","snippet":"GetWeaponCount()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseCombatCharacter.GetWeaponCount"},{"displayText":"CBaseCombatCharacter:ShootPosition","name":"ShootPosition","rightLabel":"Class-Function","type":"method","description":"Returns the shoot position eyes (or hand in VR).","leftLabel":"Vector","snippet":"ShootPosition(${1:int nHand})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseCombatCharacter.ShootPosition"},{"displayText":"CBaseEntity:AddEffects","name":"AddEffects","rightLabel":"Class-Function","type":"method","description":"AddEffects( int ): Adds the render effect flag.","leftLabel":"void","snippet":"AddEffects(${1:int nFlags})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.AddEffects"},{"displayText":"CBaseEntity:ApplyAbsVelocityImpulse","name":"ApplyAbsVelocityImpulse","rightLabel":"Class-Function","type":"method","description":"Apply a Velocity Impulse","leftLabel":"void","snippet":"ApplyAbsVelocityImpulse(${1:Vector vecImpulse})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.ApplyAbsVelocityImpulse"},{"displayText":"CBaseEntity:ApplyLocalAngularVelocityImpulse","name":"ApplyLocalAngularVelocityImpulse","rightLabel":"Class-Function","type":"method","description":"Apply an Ang Velocity Impulse","leftLabel":"void","snippet":"ApplyLocalAngularVelocityImpulse(${1:Vector angImpulse})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.ApplyLocalAngularVelocityImpulse"},{"displayText":"CBaseEntity:Attribute_GetFloatValue","name":"Attribute_GetFloatValue","rightLabel":"Class-Function","type":"method","description":"Get float value for an entity attribute.","leftLabel":"float","snippet":"Attribute_GetFloatValue(${1:string pName},${2:float flDefault})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.Attribute_GetFloatValue"},{"displayText":"CBaseEntity:Attribute_GetIntValue","name":"Attribute_GetIntValue","rightLabel":"Class-Function","type":"method","description":"Get int value for an entity attribute.","leftLabel":"float","snippet":"Attribute_GetIntValue(${1:string pName},${2:int nDefault})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.Attribute_GetIntValue"},{"displayText":"CBaseEntity:Attribute_SetFloatValue","name":"Attribute_SetFloatValue","rightLabel":"Class-Function","type":"method","description":"Set float value for an entity attribute.","leftLabel":"void","snippet":"Attribute_SetFloatValue(${1:string pName},${2:float flValue})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.Attribute_SetFloatValue"},{"displayText":"CBaseEntity:Attribute_SetIntValue","name":"Attribute_SetIntValue","rightLabel":"Class-Function","type":"method","description":"Set int value for an entity attribute.","leftLabel":"void","snippet":"Attribute_SetIntValue(${1:string pName},${2:int nValue})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.Attribute_SetIntValue"},{"displayText":"CBaseEntity:DeleteAttribute","name":"DeleteAttribute","rightLabel":"Class-Function","type":"method","description":"Delete an entity attribute.","leftLabel":"void","snippet":"DeleteAttribute(${1:string pName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.DeleteAttribute"},{"displayText":"CBaseEntity:EmitSound","name":"EmitSound","rightLabel":"Class-Function","type":"method","description":"Plays a sound from this entity.","leftLabel":"void","snippet":"EmitSound(${1:string soundname})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.EmitSound"},{"displayText":"CBaseEntity:EmitSoundParams","name":"EmitSoundParams","rightLabel":"Class-Function","type":"method","description":"Plays/modifies a sound from this entity. changes sound if nPitch and/or flVol or flSoundTime is > 0.","leftLabel":"void","snippet":"EmitSoundParams(${1:string soundname},${2:int nPitch},${3:float flVolume},${4:float flDelay})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.EmitSoundParams"},{"displayText":"CBaseEntity:EyeAngles","name":"EyeAngles","rightLabel":"Class-Function","type":"method","description":"Get the qangles that this entity is looking at.","leftLabel":"QAngle","snippet":"EyeAngles()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.EyeAngles"},{"displayText":"CBaseEntity:EyePosition","name":"EyePosition","rightLabel":"Class-Function","type":"method","description":"Get vector to eye position - absolute coords.","leftLabel":"Vector","snippet":"EyePosition()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.EyePosition"},{"displayText":"CBaseEntity:FirstMoveChild","name":"FirstMoveChild","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"handle","snippet":"FirstMoveChild()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.FirstMoveChild"},{"displayText":"CBaseEntity:FollowEntity","name":"FollowEntity","rightLabel":"Class-Function","type":"method","description":"hEntity to follow, bool bBoneMerge","leftLabel":"void","snippet":"FollowEntity(${1:handle hEnt},${2:bool bBoneMerge})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.FollowEntity"},{"displayText":"CBaseEntity:GatherCriteria","name":"GatherCriteria","rightLabel":"Class-Function","type":"method","description":"Returns a table containing the criteria that would be used for response queries on this entity. This is the same as the table that is passed to response rule script function callbacks.","leftLabel":"void","snippet":"GatherCriteria(${1:handle hResult})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GatherCriteria"},{"displayText":"CBaseEntity:GetAbsOrigin","name":"GetAbsOrigin","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"Vector","snippet":"GetAbsOrigin()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetAbsOrigin"},{"displayText":"CBaseEntity:GetAngles","name":"GetAngles","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"QAngle","snippet":"GetAngles()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetAngles"},{"displayText":"CBaseEntity:GetAnglesAsVector","name":"GetAnglesAsVector","rightLabel":"Class-Function","type":"method","description":"Get entity pitch, yaw, roll as a vector.","leftLabel":"Vector","snippet":"GetAnglesAsVector()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetAnglesAsVector"},{"displayText":"CBaseEntity:GetAngularVelocity","name":"GetAngularVelocity","rightLabel":"Class-Function","type":"method","description":"Get the local angular velocity - returns a vector of pitch,yaw,roll","leftLabel":"Vector","snippet":"GetAngularVelocity()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetAngularVelocity"},{"displayText":"CBaseEntity:GetBaseVelocity","name":"GetBaseVelocity","rightLabel":"Class-Function","type":"method","description":"Get Base? velocity.","leftLabel":"Vector","snippet":"GetBaseVelocity()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetBaseVelocity"},{"displayText":"CBaseEntity:GetBoundingMaxs","name":"GetBoundingMaxs","rightLabel":"Class-Function","type":"method","description":"Get a vector containing max bounds, centered on object.","leftLabel":"Vector","snippet":"GetBoundingMaxs()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetBoundingMaxs"},{"displayText":"CBaseEntity:GetBoundingMins","name":"GetBoundingMins","rightLabel":"Class-Function","type":"method","description":"Get a vector containing min bounds, centered on object.","leftLabel":"Vector","snippet":"GetBoundingMins()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetBoundingMins"},{"displayText":"CBaseEntity:GetBounds","name":"GetBounds","rightLabel":"Class-Function","type":"method","description":"Get a table containing the 'Mins' & 'Maxs' vector bounds, centered on object.","leftLabel":"table","snippet":"GetBounds()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetBounds"},{"displayText":"CBaseEntity:GetCenter","name":"GetCenter","rightLabel":"Class-Function","type":"method","description":"Get vector to center of object - absolute coords","leftLabel":"Vector","snippet":"GetCenter()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetCenter"},{"displayText":"CBaseEntity:GetChildren","name":"GetChildren","rightLabel":"Class-Function","type":"method","description":"Get the entities parented to this entity.","leftLabel":"handle","snippet":"GetChildren()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetChildren"},{"displayText":"CBaseEntity:GetContext","name":"GetContext","rightLabel":"Class-Function","type":"method","description":"GetContext( name ): looks up a context and returns it if available. May return string, float, or null (if the context isn't found).","leftLabel":"table","snippet":"GetContext(${1:string name})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetContext"},{"displayText":"CBaseEntity:GetForwardVector","name":"GetForwardVector","rightLabel":"Class-Function","type":"method","description":"Get the forward vector of the entity.","leftLabel":"Vector","snippet":"GetForwardVector()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetForwardVector"},{"displayText":"CBaseEntity:GetHealth","name":"GetHealth","rightLabel":"Class-Function","type":"method","description":"Get the health of this entity.","leftLabel":"int","snippet":"GetHealth()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetHealth"},{"displayText":"CBaseEntity:GetLocalAngularVelocity","name":"GetLocalAngularVelocity","rightLabel":"Class-Function","type":"method","description":"Maybe local angvel","leftLabel":"QAngle","snippet":"GetLocalAngularVelocity()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetLocalAngularVelocity"},{"displayText":"CBaseEntity:GetLocalVelocity","name":"GetLocalVelocity","rightLabel":"Class-Function","type":"method","description":"Get Entity relative velocity.","leftLabel":"Vector","snippet":"GetLocalVelocity()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetLocalVelocity"},{"displayText":"CBaseEntity:GetMaxHealth","name":"GetMaxHealth","rightLabel":"Class-Function","type":"method","description":"Get the maximum health of this entity.","leftLabel":"int","snippet":"GetMaxHealth()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetMaxHealth"},{"displayText":"CBaseEntity:GetModelName","name":"GetModelName","rightLabel":"Class-Function","type":"method","description":"Returns the name of the model.","leftLabel":"string","snippet":"GetModelName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetModelName"},{"displayText":"CBaseEntity:GetMoveParent","name":"GetMoveParent","rightLabel":"Class-Function","type":"method","description":"If in hierarchy, retrieves the entity's parent.","leftLabel":"handle","snippet":"GetMoveParent()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetMoveParent"},{"displayText":"CBaseEntity:GetOrigin","name":"GetOrigin","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"Vector","snippet":"GetOrigin()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetOrigin"},{"displayText":"CBaseEntity:GetOwner","name":"GetOwner","rightLabel":"Class-Function","type":"method","description":"Gets this entity's owner","leftLabel":"handle","snippet":"GetOwner()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetOwner"},{"displayText":"CBaseEntity:GetOwnerEntity","name":"GetOwnerEntity","rightLabel":"Class-Function","type":"method","description":"Get the owner entity, if there is one","leftLabel":"handle","snippet":"GetOwnerEntity()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetOwnerEntity"},{"displayText":"CBaseEntity:GetRightVector","name":"GetRightVector","rightLabel":"Class-Function","type":"method","description":"Get the right vector of the entity.","leftLabel":"Vector","snippet":"GetRightVector()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetRightVector"},{"displayText":"CBaseEntity:GetRootMoveParent","name":"GetRootMoveParent","rightLabel":"Class-Function","type":"method","description":"If in hierarchy, walks up the hierarchy to find the root parent.","leftLabel":"handle","snippet":"GetRootMoveParent()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetRootMoveParent"},{"displayText":"CBaseEntity:GetSoundDuration","name":"GetSoundDuration","rightLabel":"Class-Function","type":"method","description":"Returns float duration of the sound. Takes soundname and optional actormodelname.","leftLabel":"float","snippet":"GetSoundDuration(${1:string soundname},${2:string actormodel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetSoundDuration"},{"displayText":"CBaseEntity:GetTeam","name":"GetTeam","rightLabel":"Class-Function","type":"method","description":"Get the team number of this entity.","leftLabel":"int","snippet":"GetTeam()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetTeam"},{"displayText":"CBaseEntity:GetTeamNumber","name":"GetTeamNumber","rightLabel":"Class-Function","type":"method","description":"Get the team number of this entity.","leftLabel":"int","snippet":"GetTeamNumber()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetTeamNumber"},{"displayText":"CBaseEntity:GetUpVector","name":"GetUpVector","rightLabel":"Class-Function","type":"method","description":"Get the up vector of the entity.","leftLabel":"Vector","snippet":"GetUpVector()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetUpVector"},{"displayText":"CBaseEntity:GetVelocity","name":"GetVelocity","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"Vector","snippet":"GetVelocity()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetVelocity"},{"displayText":"CBaseEntity:HasAttribute","name":"HasAttribute","rightLabel":"Class-Function","type":"method","description":"See if an entity has a particular attribute.","leftLabel":"bool","snippet":"HasAttribute(${1:string pName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.HasAttribute"},{"displayText":"CBaseEntity:IsAlive","name":"IsAlive","rightLabel":"Class-Function","type":"method","description":"Is this entity alive?","leftLabel":"bool","snippet":"IsAlive()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.IsAlive"},{"displayText":"CBaseEntity:IsNPC","name":"IsNPC","rightLabel":"Class-Function","type":"method","description":"Is this entity an CAI_BaseNPC?","leftLabel":"bool","snippet":"IsNPC()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.IsNPC"},{"displayText":"CBaseEntity:IsPlayer","name":"IsPlayer","rightLabel":"Class-Function","type":"method","description":"Is this entity a player?","leftLabel":"bool","snippet":"IsPlayer()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.IsPlayer"},{"displayText":"CBaseEntity:Kill","name":"Kill","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"Kill()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.Kill"},{"displayText":"CBaseEntity:NextMovePeer","name":"NextMovePeer","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"handle","snippet":"NextMovePeer()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.NextMovePeer"},{"displayText":"CBaseEntity:OverrideFriction","name":"OverrideFriction","rightLabel":"Class-Function","type":"method","description":"Takes duration, value for a temporary override.","leftLabel":"void","snippet":"OverrideFriction(${1:float duration},${2:float friction})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.OverrideFriction"},{"displayText":"CBaseEntity:PrecacheScriptSound","name":"PrecacheScriptSound","rightLabel":"Class-Function","type":"method","description":"Precache a sound for later playing.","leftLabel":"void","snippet":"PrecacheScriptSound(${1:string soundname})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.PrecacheScriptSound"},{"displayText":"CBaseEntity:RemoveEffects","name":"RemoveEffects","rightLabel":"Class-Function","type":"method","description":"RemoveEffects( int ): Removes the render effect flag.","leftLabel":"void","snippet":"RemoveEffects(${1:int nFlags})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.RemoveEffects"},{"displayText":"CBaseEntity:SetAbsOrigin","name":"SetAbsOrigin","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetAbsOrigin(${1:Vector origin})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetAbsOrigin"},{"displayText":"CBaseEntity:SetAngles","name":"SetAngles","rightLabel":"Class-Function","type":"method","description":"Set entity pitch, yaw, roll.","leftLabel":"void","snippet":"SetAngles(${1:float fPitch},${2:float fYaw},${3:float fRoll})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetAngles"},{"displayText":"CBaseEntity:SetAngularVelocity","name":"SetAngularVelocity","rightLabel":"Class-Function","type":"method","description":"Set the local angular velocity - takes float pitch,yaw,roll velocities","leftLabel":"void","snippet":"SetAngularVelocity(${1:float pitchVel},${2:float yawVel},${3:float rollVel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetAngularVelocity"},{"displayText":"CBaseEntity:SetConstraint","name":"SetConstraint","rightLabel":"Class-Function","type":"method","description":"Set the position of the constraint.","leftLabel":"void","snippet":"SetConstraint(${1:Vector vPos})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetConstraint"},{"displayText":"CBaseEntity:SetContext","name":"SetContext","rightLabel":"Class-Function","type":"method","description":"SetContext( name , value, duration ): store any key/value pair in this entity's dialog contexts. Value must be a string. Will last for duration (set 0 to mean 'forever').","leftLabel":"void","snippet":"SetContext(${1:string pName},${2:string pValue},${3:float duration})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetContext"},{"displayText":"CBaseEntity:SetContextNum","name":"SetContextNum","rightLabel":"Class-Function","type":"method","description":"SetContextNum( name , value, duration ): store any key/value pair in this entity's dialog contexts. Value must be a number (int or float). Will last for duration (set 0 to mean 'forever').","leftLabel":"void","snippet":"SetContextNum(${1:string pName},${2:float fValue},${3:float duration})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetContextNum"},{"displayText":"CBaseEntity:SetContextThink","name":"SetContextThink","rightLabel":"Class-Function","type":"method","description":"Set a think function on this entity.","leftLabel":"void","snippet":"SetContextThink(${1:string pszContextName},${2:handle hThinkFunc},${3:float flInterval})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetContextThink"},{"displayText":"CBaseEntity:SetForwardVector","name":"SetForwardVector","rightLabel":"Class-Function","type":"method","description":"Set the orientation of the entity to have this forward vector.","leftLabel":"void","snippet":"SetForwardVector(${1:Vector v})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetForwardVector"},{"displayText":"CBaseEntity:SetFriction","name":"SetFriction","rightLabel":"Class-Function","type":"method","description":"Set PLAYER friction, ignored for objects.","leftLabel":"void","snippet":"SetFriction(${1:float flFriction})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetFriction"},{"displayText":"CBaseEntity:SetGravity","name":"SetGravity","rightLabel":"Class-Function","type":"method","description":"Set PLAYER gravity, ignored for objects.","leftLabel":"void","snippet":"SetGravity(${1:float flGravity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetGravity"},{"displayText":"CBaseEntity:SetHealth","name":"SetHealth","rightLabel":"Class-Function","type":"method","description":"Set the health of this entity.","leftLabel":"void","snippet":"SetHealth(${1:int nHealth})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetHealth"},{"displayText":"CBaseEntity:SetMaxHealth","name":"SetMaxHealth","rightLabel":"Class-Function","type":"method","description":"Set the maximum health of this entity.","leftLabel":"void","snippet":"SetMaxHealth(${1:int amt})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetMaxHealth"},{"displayText":"CBaseEntity:SetOrigin","name":"SetOrigin","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetOrigin(${1:Vector v})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetOrigin"},{"displayText":"CBaseEntity:SetOwner","name":"SetOwner","rightLabel":"Class-Function","type":"method","description":"Sets this entity's owner","leftLabel":"void","snippet":"SetOwner(${1:handle pOwner})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetOwner"},{"displayText":"CBaseEntity:SetParent","name":"SetParent","rightLabel":"Class-Function","type":"method","description":"Set the parent for this entity.","leftLabel":"void","snippet":"SetParent(${1:handle hParent},${2:string pAttachmentname})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetParent"},{"displayText":"CBaseEntity:SetTeam","name":"SetTeam","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetTeam(${1:int iTeamNum})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetTeam"},{"displayText":"CBaseEntity:SetVelocity","name":"SetVelocity","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetVelocity(${1:Vector vecVelocity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.SetVelocity"},{"displayText":"CBaseEntity:StopSound","name":"StopSound","rightLabel":"Class-Function","type":"method","description":"Stops a named sound playing from this entity.","leftLabel":"void","snippet":"StopSound(${1:string soundname})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.StopSound"},{"displayText":"CBaseEntity:TakeDamage","name":"TakeDamage","rightLabel":"Class-Function","type":"method","description":"Apply damage to this entity. Use CreateDamageInfo() to create a damageinfo object.","leftLabel":"int","snippet":"TakeDamage(${1:handle hInfo})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.TakeDamage"},{"displayText":"CBaseEntity:Trigger","name":"Trigger","rightLabel":"Class-Function","type":"method","description":"Fires off this entity's OnTrigger responses.","leftLabel":"void","snippet":"Trigger()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.Trigger"},{"displayText":"CBaseFlex:GetCurrentScene","name":"GetCurrentScene","rightLabel":"Class-Function","type":"method","description":"Returns the instance of the oldest active scene entity (if any).","leftLabel":"handle","snippet":"GetCurrentScene()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseFlex.GetCurrentScene"},{"displayText":"CBaseFlex:GetSceneByIndex","name":"GetSceneByIndex","rightLabel":"Class-Function","type":"method","description":"Returns the instance of the scene entity at the specified index.","leftLabel":"handle","snippet":"GetSceneByIndex(${1:int index})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseFlex.GetSceneByIndex"},{"displayText":"CBaseFlex:ScriptPlayScene","name":"ScriptPlayScene","rightLabel":"Class-Function","type":"method","description":"( vcd file, delay ) - play specified vcd file","leftLabel":"float","snippet":"ScriptPlayScene(${1:string pszScene},${2:float flDelay})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseFlex.ScriptPlayScene"},{"displayText":"CBaseModelEntity:GetRenderAlpha","name":"GetRenderAlpha","rightLabel":"Class-Function","type":"method","description":"GetRenderAlpha(): Get the alpha modulation of this entity.","leftLabel":"int","snippet":"GetRenderAlpha()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseModelEntity.GetRenderAlpha"},{"displayText":"CBaseModelEntity:SetLightGroup","name":"SetLightGroup","rightLabel":"Class-Function","type":"method","description":"SetLightGroup( string ): Sets the light group of the entity.","leftLabel":"void","snippet":"SetLightGroup(${1:string pLightGroup})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseModelEntity.SetLightGroup"},{"displayText":"CBaseModelEntity:SetModel","name":"SetModel","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetModel(${1:string pModelName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseModelEntity.SetModel"},{"displayText":"CBaseModelEntity:SetRenderAlpha","name":"SetRenderAlpha","rightLabel":"Class-Function","type":"method","description":"SetRenderAlpha( int ): Set the alpha modulation of this entity.","leftLabel":"void","snippet":"SetRenderAlpha(${1:int nAlpha})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseModelEntity.SetRenderAlpha"},{"displayText":"CBaseModelEntity:SetRenderColor","name":"SetRenderColor","rightLabel":"Class-Function","type":"method","description":"SetRenderColor( r, g, b ): Sets the render color of the entity.","leftLabel":"void","snippet":"SetRenderColor(${1:int r},${2:int g},${3:int b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseModelEntity.SetRenderColor"},{"displayText":"CBaseModelEntity:SetRenderMode","name":"SetRenderMode","rightLabel":"Class-Function","type":"method","description":"SetRenderMode( int ): Sets the render mode of the entity.","leftLabel":"void","snippet":"SetRenderMode(${1:int nMode})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseModelEntity.SetRenderMode"},{"displayText":"CBaseModelEntity:SetSize","name":"SetSize","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetSize(${1:Vector mins},${2:Vector maxs})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseModelEntity.SetSize"},{"displayText":"CBasePlayer:GetHMDAnchor","name":"GetHMDAnchor","rightLabel":"Class-Function","type":"method","description":"Returns the HMD anchor entity for this player if it exists.","leftLabel":"handle","snippet":"GetHMDAnchor()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBasePlayer.GetHMDAnchor"},{"displayText":"CBasePlayer:GetHMDAvatar","name":"GetHMDAvatar","rightLabel":"Class-Function","type":"method","description":"Returns the HMD Avatar entity for this player if it exists.","leftLabel":"handle","snippet":"GetHMDAvatar()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBasePlayer.GetHMDAvatar"},{"displayText":"CBasePlayer:GetUserID","name":"GetUserID","rightLabel":"Class-Function","type":"method","description":"Returns the player's user id.","leftLabel":"int","snippet":"GetUserID()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBasePlayer.GetUserID"},{"displayText":"CBasePlayer:IsNoclipping","name":"IsNoclipping","rightLabel":"Class-Function","type":"method","description":"Returns true if the player is in noclip mode.","leftLabel":"bool","snippet":"IsNoclipping()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBasePlayer.IsNoclipping"},{"displayText":"CBasePlayer:IsUsePressed","name":"IsUsePressed","rightLabel":"Class-Function","type":"method","description":"Returns true if the use key is pressed.","leftLabel":"bool","snippet":"IsUsePressed()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBasePlayer.IsUsePressed"},{"displayText":"CBasePlayer:IsVRControllerButtonPressed","name":"IsVRControllerButtonPressed","rightLabel":"Class-Function","type":"method","description":"Returns true if the controller button is pressed.","leftLabel":"bool","snippet":"IsVRControllerButtonPressed(${1:int nButton})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBasePlayer.IsVRControllerButtonPressed"},{"displayText":"CBasePlayer:Quit","name":"Quit","rightLabel":"Class-Function","type":"method","description":"Quit the game from script.","leftLabel":"void","snippet":"Quit()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBasePlayer.Quit"},{"displayText":"CBaseTrigger:Disable","name":"Disable","rightLabel":"Class-Function","type":"method","description":"Disable's the trigger","leftLabel":"void","snippet":"Disable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseTrigger.Disable"},{"displayText":"CBaseTrigger:Enable","name":"Enable","rightLabel":"Class-Function","type":"method","description":"Enable the trigger","leftLabel":"void","snippet":"Enable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseTrigger.Enable"},{"displayText":"CBaseTrigger:IsTouching","name":"IsTouching","rightLabel":"Class-Function","type":"method","description":"Checks whether the passed entity is touching the trigger.","leftLabel":"bool","snippet":"IsTouching(${1:handle hEnt})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseTrigger.IsTouching"},{"displayText":"CBodyComponent:AddImpulseAtPosition","name":"AddImpulseAtPosition","rightLabel":"Class-Function","type":"method","description":"Apply an impulse at a worldspace position to the physics","leftLabel":"void","snippet":"AddImpulseAtPosition(${1:Vector Vector_1},${2:Vector Vector_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.AddImpulseAtPosition"},{"displayText":"CBodyComponent:AddVelocity","name":"AddVelocity","rightLabel":"Class-Function","type":"method","description":"Add linear and angular velocity to the physics object","leftLabel":"void","snippet":"AddVelocity(${1:Vector Vector_1},${2:Vector Vector_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.AddVelocity"},{"displayText":"CBodyComponent:DetachFromParent","name":"DetachFromParent","rightLabel":"Class-Function","type":"method","description":"Detach from its parent","leftLabel":"void","snippet":"DetachFromParent()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.DetachFromParent"},{"displayText":"CBodyComponent:GetSequence","name":"GetSequence","rightLabel":"Class-Function","type":"method","description":"Returns the active sequence","leftLabel":"<unknown>","snippet":"GetSequence()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.GetSequence"},{"displayText":"CBodyComponent:IsAttachedToParent","name":"IsAttachedToParent","rightLabel":"Class-Function","type":"method","description":"Is attached to parent","leftLabel":"bool","snippet":"IsAttachedToParent()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.IsAttachedToParent"},{"displayText":"CBodyComponent:LookupSequence","name":"LookupSequence","rightLabel":"Class-Function","type":"method","description":"Returns a sequence id given a name","leftLabel":"<unknown>","snippet":"LookupSequence(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.LookupSequence"},{"displayText":"CBodyComponent:SequenceDuration","name":"SequenceDuration","rightLabel":"Class-Function","type":"method","description":"Returns the duration in seconds of the specified sequence","leftLabel":"float","snippet":"SequenceDuration(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.SequenceDuration"},{"displayText":"CBodyComponent:SetAngularVelocity","name":"SetAngularVelocity","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetAngularVelocity(${1:Vector Vector_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.SetAngularVelocity"},{"displayText":"CBodyComponent:SetAnimation","name":"SetAnimation","rightLabel":"Class-Function","type":"method","description":"Pass string for the animation to play on this model","leftLabel":"void","snippet":"SetAnimation(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.SetAnimation"},{"displayText":"CBodyComponent:SetBodyGroup","name":"SetBodyGroup","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetBodyGroup(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.SetBodyGroup"},{"displayText":"CBodyComponent:SetMaterialGroup","name":"SetMaterialGroup","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetMaterialGroup(${1:utlstringtoken utlstringtoken_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.SetMaterialGroup"},{"displayText":"CBodyComponent:SetVelocity","name":"SetVelocity","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetVelocity(${1:Vector Vector_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBodyComponent.SetVelocity"},{"displayText":"CDOTABaseAbility:CanAbilityBeUpgraded","name":"CanAbilityBeUpgraded","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"<unknown>","snippet":"CanAbilityBeUpgraded()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.CanAbilityBeUpgraded"},{"displayText":"CDOTABaseAbility:CastAbility","name":"CastAbility","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"CastAbility()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.CastAbility"},{"displayText":"CDOTABaseAbility:ContinueCasting","name":"ContinueCasting","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"ContinueCasting()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.ContinueCasting"},{"displayText":"CDOTABaseAbility:CreateVisibilityNode","name":"CreateVisibilityNode","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"CreateVisibilityNode(${1:Vector vLocation},${2:float fRadius},${3:float fDuration})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.CreateVisibilityNode"},{"displayText":"CDOTABaseAbility:DecrementModifierRefCount","name":"DecrementModifierRefCount","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"DecrementModifierRefCount()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.DecrementModifierRefCount"},{"displayText":"CDOTABaseAbility:EndChannel","name":"EndChannel","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"EndChannel(${1:bool bInterrupted})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.EndChannel"},{"displayText":"CDOTABaseAbility:EndCooldown","name":"EndCooldown","rightLabel":"Class-Function","type":"method","description":"Clear the cooldown remaining on this ability.","leftLabel":"void","snippet":"EndCooldown()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.EndCooldown"},{"displayText":"CDOTABaseAbility:GetAbilityDamage","name":"GetAbilityDamage","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetAbilityDamage()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityDamage"},{"displayText":"CDOTABaseAbility:GetAbilityDamageType","name":"GetAbilityDamageType","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetAbilityDamageType()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityDamageType"},{"displayText":"CDOTABaseAbility:GetAbilityIndex","name":"GetAbilityIndex","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetAbilityIndex()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityIndex"},{"displayText":"CDOTABaseAbility:GetAbilityKeyValues","name":"GetAbilityKeyValues","rightLabel":"Class-Function","type":"method","description":"Gets the key values definition for this ability.","leftLabel":"table","snippet":"GetAbilityKeyValues()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityKeyValues"},{"displayText":"CDOTABaseAbility:GetAbilityName","name":"GetAbilityName","rightLabel":"Class-Function","type":"method","description":"Returns the name of this ability.","leftLabel":"string","snippet":"GetAbilityName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityName"},{"displayText":"CDOTABaseAbility:GetAbilityTargetFlags","name":"GetAbilityTargetFlags","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetAbilityTargetFlags()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityTargetFlags"},{"displayText":"CDOTABaseAbility:GetAbilityTargetTeam","name":"GetAbilityTargetTeam","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetAbilityTargetTeam()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityTargetTeam"},{"displayText":"CDOTABaseAbility:GetAbilityTargetType","name":"GetAbilityTargetType","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetAbilityTargetType()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityTargetType"},{"displayText":"CDOTABaseAbility:GetAbilityType","name":"GetAbilityType","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetAbilityType()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAbilityType"},{"displayText":"CDOTABaseAbility:GetAnimationIgnoresModelScale","name":"GetAnimationIgnoresModelScale","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"GetAnimationIgnoresModelScale()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAnimationIgnoresModelScale"},{"displayText":"CDOTABaseAbility:GetAssociatedPrimaryAbilities","name":"GetAssociatedPrimaryAbilities","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"string","snippet":"GetAssociatedPrimaryAbilities()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAssociatedPrimaryAbilities"},{"displayText":"CDOTABaseAbility:GetAssociatedSecondaryAbilities","name":"GetAssociatedSecondaryAbilities","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"string","snippet":"GetAssociatedSecondaryAbilities()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAssociatedSecondaryAbilities"},{"displayText":"CDOTABaseAbility:GetAutoCastState","name":"GetAutoCastState","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"GetAutoCastState()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetAutoCastState"},{"displayText":"CDOTABaseAbility:GetBackswingTime","name":"GetBackswingTime","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetBackswingTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetBackswingTime"},{"displayText":"CDOTABaseAbility:GetBehavior","name":"GetBehavior","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetBehavior()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetBehavior"},{"displayText":"CDOTABaseAbility:GetCastPoint","name":"GetCastPoint","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetCastPoint()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCastPoint"},{"displayText":"CDOTABaseAbility:GetCastRange","name":"GetCastRange","rightLabel":"Class-Function","type":"method","description":"Gets the cast range of the ability.","leftLabel":"int","snippet":"GetCastRange(${1:Vector vLocation},${2:handle hTarget})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCastRange"},{"displayText":"CDOTABaseAbility:GetCaster","name":"GetCaster","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"handle","snippet":"GetCaster()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCaster"},{"displayText":"CDOTABaseAbility:GetChannelStartTime","name":"GetChannelStartTime","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetChannelStartTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetChannelStartTime"},{"displayText":"CDOTABaseAbility:GetChannelTime","name":"GetChannelTime","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetChannelTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetChannelTime"},{"displayText":"CDOTABaseAbility:GetChannelledManaCostPerSecond","name":"GetChannelledManaCostPerSecond","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetChannelledManaCostPerSecond(${1:int iLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetChannelledManaCostPerSecond"},{"displayText":"CDOTABaseAbility:GetCloneSource","name":"GetCloneSource","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"handle","snippet":"GetCloneSource()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCloneSource"},{"displayText":"CDOTABaseAbility:GetConceptRecipientType","name":"GetConceptRecipientType","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetConceptRecipientType()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetConceptRecipientType"},{"displayText":"CDOTABaseAbility:GetCooldown","name":"GetCooldown","rightLabel":"Class-Function","type":"method","description":"Get the cooldown duration for this ability at a given level, not the amount of cooldown actually left.","leftLabel":"float","snippet":"GetCooldown(${1:int iLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCooldown"},{"displayText":"CDOTABaseAbility:GetCooldownTime","name":"GetCooldownTime","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetCooldownTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCooldownTime"},{"displayText":"CDOTABaseAbility:GetCooldownTimeRemaining","name":"GetCooldownTimeRemaining","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetCooldownTimeRemaining()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCooldownTimeRemaining"},{"displayText":"CDOTABaseAbility:GetCursorPosition","name":"GetCursorPosition","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"Vector","snippet":"GetCursorPosition()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCursorPosition"},{"displayText":"CDOTABaseAbility:GetCursorTarget","name":"GetCursorTarget","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"handle","snippet":"GetCursorTarget()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCursorTarget"},{"displayText":"CDOTABaseAbility:GetCursorTargetingNothing","name":"GetCursorTargetingNothing","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"GetCursorTargetingNothing()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetCursorTargetingNothing"},{"displayText":"CDOTABaseAbility:GetDuration","name":"GetDuration","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetDuration()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetDuration"},{"displayText":"CDOTABaseAbility:GetGoldCost","name":"GetGoldCost","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetGoldCost(${1:int iLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetGoldCost"},{"displayText":"CDOTABaseAbility:GetGoldCostForUpgrade","name":"GetGoldCostForUpgrade","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetGoldCostForUpgrade(${1:int iLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetGoldCostForUpgrade"},{"displayText":"CDOTABaseAbility:GetHeroLevelRequiredToUpgrade","name":"GetHeroLevelRequiredToUpgrade","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetHeroLevelRequiredToUpgrade()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetHeroLevelRequiredToUpgrade"},{"displayText":"CDOTABaseAbility:GetIntrinsicModifierName","name":"GetIntrinsicModifierName","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"string","snippet":"GetIntrinsicModifierName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetIntrinsicModifierName"},{"displayText":"CDOTABaseAbility:GetLevel","name":"GetLevel","rightLabel":"Class-Function","type":"method","description":"Get the current level of the ability.","leftLabel":"int","snippet":"GetLevel()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetLevel"},{"displayText":"CDOTABaseAbility:GetLevelSpecialValueFor","name":"GetLevelSpecialValueFor","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"table","snippet":"GetLevelSpecialValueFor(${1:string szName},${2:int nLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetLevelSpecialValueFor"},{"displayText":"CDOTABaseAbility:GetManaCost","name":"GetManaCost","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetManaCost(${1:int iLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetManaCost"},{"displayText":"CDOTABaseAbility:GetMaxLevel","name":"GetMaxLevel","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetMaxLevel()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetMaxLevel"},{"displayText":"CDOTABaseAbility:GetModifierValue","name":"GetModifierValue","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetModifierValue()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetModifierValue"},{"displayText":"CDOTABaseAbility:GetModifierValueBonus","name":"GetModifierValueBonus","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetModifierValueBonus()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetModifierValueBonus"},{"displayText":"CDOTABaseAbility:GetPlaybackRateOverride","name":"GetPlaybackRateOverride","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetPlaybackRateOverride()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetPlaybackRateOverride"},{"displayText":"CDOTABaseAbility:GetSharedCooldownName","name":"GetSharedCooldownName","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"string","snippet":"GetSharedCooldownName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetSharedCooldownName"},{"displayText":"CDOTABaseAbility:GetSpecialValueFor","name":"GetSpecialValueFor","rightLabel":"Class-Function","type":"method","description":"Gets a value from this ability's special value block for its current level.","leftLabel":"table","snippet":"GetSpecialValueFor(${1:string szName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetSpecialValueFor"},{"displayText":"CDOTABaseAbility:GetStolenActivityModifier","name":"GetStolenActivityModifier","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"string","snippet":"GetStolenActivityModifier()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetStolenActivityModifier"},{"displayText":"CDOTABaseAbility:GetToggleState","name":"GetToggleState","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"GetToggleState()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.GetToggleState"},{"displayText":"CDOTABaseAbility:HeroXPChange","name":"HeroXPChange","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"HeroXPChange(${1:float flXP})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.HeroXPChange"},{"displayText":"CDOTABaseAbility:IncrementModifierRefCount","name":"IncrementModifierRefCount","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"IncrementModifierRefCount()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IncrementModifierRefCount"},{"displayText":"CDOTABaseAbility:IsActivated","name":"IsActivated","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsActivated()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsActivated"},{"displayText":"CDOTABaseAbility:IsAttributeBonus","name":"IsAttributeBonus","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsAttributeBonus()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsAttributeBonus"},{"displayText":"CDOTABaseAbility:IsChanneling","name":"IsChanneling","rightLabel":"Class-Function","type":"method","description":"Returns whether the ability is currently channeling.","leftLabel":"bool","snippet":"IsChanneling()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsChanneling"},{"displayText":"CDOTABaseAbility:IsCooldownReady","name":"IsCooldownReady","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsCooldownReady()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsCooldownReady"},{"displayText":"CDOTABaseAbility:IsCosmetic","name":"IsCosmetic","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsCosmetic(${1:handle hEntity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsCosmetic"},{"displayText":"CDOTABaseAbility:IsFullyCastable","name":"IsFullyCastable","rightLabel":"Class-Function","type":"method","description":"Returns whether the ability can be cast.","leftLabel":"bool","snippet":"IsFullyCastable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsFullyCastable"},{"displayText":"CDOTABaseAbility:IsHidden","name":"IsHidden","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsHidden()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsHidden"},{"displayText":"CDOTABaseAbility:IsHiddenWhenStolen","name":"IsHiddenWhenStolen","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsHiddenWhenStolen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsHiddenWhenStolen"},{"displayText":"CDOTABaseAbility:IsInAbilityPhase","name":"IsInAbilityPhase","rightLabel":"Class-Function","type":"method","description":"Returns whether the ability is currently casting.","leftLabel":"bool","snippet":"IsInAbilityPhase()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsInAbilityPhase"},{"displayText":"CDOTABaseAbility:IsItem","name":"IsItem","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsItem()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsItem"},{"displayText":"CDOTABaseAbility:IsOwnersGoldEnough","name":"IsOwnersGoldEnough","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsOwnersGoldEnough(${1:int nIssuerPlayerID})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsOwnersGoldEnough"},{"displayText":"CDOTABaseAbility:IsOwnersGoldEnoughForUpgrade","name":"IsOwnersGoldEnoughForUpgrade","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsOwnersGoldEnoughForUpgrade()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsOwnersGoldEnoughForUpgrade"},{"displayText":"CDOTABaseAbility:IsOwnersManaEnough","name":"IsOwnersManaEnough","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsOwnersManaEnough()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsOwnersManaEnough"},{"displayText":"CDOTABaseAbility:IsPassive","name":"IsPassive","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsPassive()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsPassive"},{"displayText":"CDOTABaseAbility:IsSharedWithTeammates","name":"IsSharedWithTeammates","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsSharedWithTeammates()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsSharedWithTeammates"},{"displayText":"CDOTABaseAbility:IsStealable","name":"IsStealable","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsStealable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsStealable"},{"displayText":"CDOTABaseAbility:IsStolen","name":"IsStolen","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsStolen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsStolen"},{"displayText":"CDOTABaseAbility:IsToggle","name":"IsToggle","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsToggle()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsToggle"},{"displayText":"CDOTABaseAbility:IsTrained","name":"IsTrained","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsTrained()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.IsTrained"},{"displayText":"CDOTABaseAbility:MarkAbilityButtonDirty","name":"MarkAbilityButtonDirty","rightLabel":"Class-Function","type":"method","description":"Mark the ability button for this ability as needing a refresh.","leftLabel":"void","snippet":"MarkAbilityButtonDirty()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.MarkAbilityButtonDirty"},{"displayText":"CDOTABaseAbility:NumModifiersUsingAbility","name":"NumModifiersUsingAbility","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"NumModifiersUsingAbility()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.NumModifiersUsingAbility"},{"displayText":"CDOTABaseAbility:OnAbilityPhaseInterrupted","name":"OnAbilityPhaseInterrupted","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"OnAbilityPhaseInterrupted()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnAbilityPhaseInterrupted"},{"displayText":"CDOTABaseAbility:OnAbilityPhaseStart","name":"OnAbilityPhaseStart","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"OnAbilityPhaseStart()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnAbilityPhaseStart"},{"displayText":"CDOTABaseAbility:OnAbilityPinged","name":"OnAbilityPinged","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"OnAbilityPinged(${1:int nPlayerID})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnAbilityPinged"},{"displayText":"CDOTABaseAbility:OnChannelFinish","name":"OnChannelFinish","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"OnChannelFinish(${1:bool bInterrupted})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnChannelFinish"},{"displayText":"CDOTABaseAbility:OnChannelThink","name":"OnChannelThink","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"OnChannelThink(${1:float flInterval})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnChannelThink"},{"displayText":"CDOTABaseAbility:OnHeroCalculateStatBonus","name":"OnHeroCalculateStatBonus","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"OnHeroCalculateStatBonus()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnHeroCalculateStatBonus"},{"displayText":"CDOTABaseAbility:OnHeroLevelUp","name":"OnHeroLevelUp","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"OnHeroLevelUp()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnHeroLevelUp"},{"displayText":"CDOTABaseAbility:OnOwnerDied","name":"OnOwnerDied","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"OnOwnerDied()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnOwnerDied"},{"displayText":"CDOTABaseAbility:OnOwnerSpawned","name":"OnOwnerSpawned","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"OnOwnerSpawned()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnOwnerSpawned"},{"displayText":"CDOTABaseAbility:OnSpellStart","name":"OnSpellStart","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"OnSpellStart()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnSpellStart"},{"displayText":"CDOTABaseAbility:OnToggle","name":"OnToggle","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"OnToggle()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnToggle"},{"displayText":"CDOTABaseAbility:OnUpgrade","name":"OnUpgrade","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"OnUpgrade()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.OnUpgrade"},{"displayText":"CDOTABaseAbility:PayGoldCost","name":"PayGoldCost","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"PayGoldCost()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.PayGoldCost"},{"displayText":"CDOTABaseAbility:PayGoldCostForUpgrade","name":"PayGoldCostForUpgrade","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"PayGoldCostForUpgrade()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.PayGoldCostForUpgrade"},{"displayText":"CDOTABaseAbility:PayManaCost","name":"PayManaCost","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"PayManaCost()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.PayManaCost"},{"displayText":"CDOTABaseAbility:PlaysDefaultAnimWhenStolen","name":"PlaysDefaultAnimWhenStolen","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"PlaysDefaultAnimWhenStolen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.PlaysDefaultAnimWhenStolen"},{"displayText":"CDOTABaseAbility:ProcsMagicStick","name":"ProcsMagicStick","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"ProcsMagicStick()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.ProcsMagicStick"},{"displayText":"CDOTABaseAbility:RefCountsModifiers","name":"RefCountsModifiers","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"RefCountsModifiers()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.RefCountsModifiers"},{"displayText":"CDOTABaseAbility:RefundManaCost","name":"RefundManaCost","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"RefundManaCost()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.RefundManaCost"},{"displayText":"CDOTABaseAbility:ResetToggleOnRespawn","name":"ResetToggleOnRespawn","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"ResetToggleOnRespawn()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.ResetToggleOnRespawn"},{"displayText":"CDOTABaseAbility:SetAbilityIndex","name":"SetAbilityIndex","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetAbilityIndex(${1:int iIndex})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetAbilityIndex"},{"displayText":"CDOTABaseAbility:SetActivated","name":"SetActivated","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetActivated(${1:bool bActivated})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetActivated"},{"displayText":"CDOTABaseAbility:SetChanneling","name":"SetChanneling","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetChanneling(${1:bool bChanneling})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetChanneling"},{"displayText":"CDOTABaseAbility:SetHidden","name":"SetHidden","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetHidden(${1:bool bHidden})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetHidden"},{"displayText":"CDOTABaseAbility:SetInAbilityPhase","name":"SetInAbilityPhase","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetInAbilityPhase(${1:bool bInAbilityPhase})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetInAbilityPhase"},{"displayText":"CDOTABaseAbility:SetLevel","name":"SetLevel","rightLabel":"Class-Function","type":"method","description":"Sets the level of this ability.","leftLabel":"void","snippet":"SetLevel(${1:int iLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetLevel"},{"displayText":"CDOTABaseAbility:SetOverrideCastPoint","name":"SetOverrideCastPoint","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetOverrideCastPoint(${1:float flCastPoint})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetOverrideCastPoint"},{"displayText":"CDOTABaseAbility:SetRefCountsModifiers","name":"SetRefCountsModifiers","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetRefCountsModifiers(${1:bool bRefCounts})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetRefCountsModifiers"},{"displayText":"CDOTABaseAbility:SetStolen","name":"SetStolen","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetStolen(${1:bool bStolen})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SetStolen"},{"displayText":"CDOTABaseAbility:ShouldUseResources","name":"ShouldUseResources","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"ShouldUseResources()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.ShouldUseResources"},{"displayText":"CDOTABaseAbility:SpeakAbilityConcept","name":"SpeakAbilityConcept","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SpeakAbilityConcept(${1:int iConcept})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SpeakAbilityConcept"},{"displayText":"CDOTABaseAbility:SpeakTrigger","name":"SpeakTrigger","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"<unknown>","snippet":"SpeakTrigger()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.SpeakTrigger"},{"displayText":"CDOTABaseAbility:StartCooldown","name":"StartCooldown","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"StartCooldown(${1:float flCooldown})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.StartCooldown"},{"displayText":"CDOTABaseAbility:ToggleAbility","name":"ToggleAbility","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"ToggleAbility()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.ToggleAbility"},{"displayText":"CDOTABaseAbility:ToggleAutoCast","name":"ToggleAutoCast","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"ToggleAutoCast()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.ToggleAutoCast"},{"displayText":"CDOTABaseAbility:UpgradeAbility","name":"UpgradeAbility","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"UpgradeAbility(${1:bool bSupressSpeech})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.UpgradeAbility"},{"displayText":"CDOTABaseAbility:UseResources","name":"UseResources","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"UseResources(${1:bool bMana},${2:bool bGold},${3:bool bCooldown})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseAbility.UseResources"},{"displayText":"CDOTABaseGameMode:AreWeatherEffectsDisabled","name":"AreWeatherEffectsDisabled","rightLabel":"Class-Function","type":"method","description":"Get if weather effects are disabled on the client.","leftLabel":"bool","snippet":"AreWeatherEffectsDisabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.AreWeatherEffectsDisabled"},{"displayText":"CDOTABaseGameMode:ClearBountyRunePickupFilter","name":"ClearBountyRunePickupFilter","rightLabel":"Class-Function","type":"method","description":"Clear the script filter that controls bounty rune pickup behavior.","leftLabel":"void","snippet":"ClearBountyRunePickupFilter()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.ClearBountyRunePickupFilter"},{"displayText":"CDOTABaseGameMode:ClearDamageFilter","name":"ClearDamageFilter","rightLabel":"Class-Function","type":"method","description":"Clear the script filter that controls how a unit takes damage.","leftLabel":"void","snippet":"ClearDamageFilter()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.ClearDamageFilter"},{"displayText":"CDOTABaseGameMode:ClearExecuteOrderFilter","name":"ClearExecuteOrderFilter","rightLabel":"Class-Function","type":"method","description":"Clear the script filter that controls when a unit picks up an item.","leftLabel":"void","snippet":"ClearExecuteOrderFilter()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.ClearExecuteOrderFilter"},{"displayText":"CDOTABaseGameMode:ClearItemAddedToInventoryFilter","name":"ClearItemAddedToInventoryFilter","rightLabel":"Class-Function","type":"method","description":"Clear the script filter that controls the item added to inventory filter.","leftLabel":"void","snippet":"ClearItemAddedToInventoryFilter()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.ClearItemAddedToInventoryFilter"},{"displayText":"CDOTABaseGameMode:ClearModifierGainedFilter","name":"ClearModifierGainedFilter","rightLabel":"Class-Function","type":"method","description":"Clear the script filter that controls the modifier filter.","leftLabel":"void","snippet":"ClearModifierGainedFilter()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.ClearModifierGainedFilter"},{"displayText":"CDOTABaseGameMode:ClearModifyExperienceFilter","name":"ClearModifyExperienceFilter","rightLabel":"Class-Function","type":"method","description":"Clear the script filter that controls how hero experience is modified.","leftLabel":"void","snippet":"ClearModifyExperienceFilter()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.ClearModifyExperienceFilter"},{"displayText":"CDOTABaseGameMode:ClearModifyGoldFilter","name":"ClearModifyGoldFilter","rightLabel":"Class-Function","type":"method","description":"Clear the script filter that controls how hero gold is modified.","leftLabel":"void","snippet":"ClearModifyGoldFilter()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.ClearModifyGoldFilter"},{"displayText":"CDOTABaseGameMode:ClearRuneSpawnFilter","name":"ClearRuneSpawnFilter","rightLabel":"Class-Function","type":"method","description":"Clear the script filter that controls what rune spawns.","leftLabel":"void","snippet":"ClearRuneSpawnFilter()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.ClearRuneSpawnFilter"},{"displayText":"CDOTABaseGameMode:ClearTrackingProjectileFilter","name":"ClearTrackingProjectileFilter","rightLabel":"Class-Function","type":"method","description":"Clear the script filter that controls when tracking projectiles are launched.","leftLabel":"void","snippet":"ClearTrackingProjectileFilter()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.ClearTrackingProjectileFilter"},{"displayText":"CDOTABaseGameMode:GetAlwaysShowPlayerInventory","name":"GetAlwaysShowPlayerInventory","rightLabel":"Class-Function","type":"method","description":"Show the player hero's inventory in the HUD, regardless of what unit is selected.","leftLabel":"bool","snippet":"GetAlwaysShowPlayerInventory()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetAlwaysShowPlayerInventory"},{"displayText":"CDOTABaseGameMode:GetAlwaysShowPlayerNames","name":"GetAlwaysShowPlayerNames","rightLabel":"Class-Function","type":"method","description":"Get whether player names are always shown, regardless of client setting.","leftLabel":"bool","snippet":"GetAlwaysShowPlayerNames()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetAlwaysShowPlayerNames"},{"displayText":"CDOTABaseGameMode:GetAnnouncerDisabled","name":"GetAnnouncerDisabled","rightLabel":"Class-Function","type":"method","description":"Are in-game announcers disabled?","leftLabel":"bool","snippet":"GetAnnouncerDisabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetAnnouncerDisabled"},{"displayText":"CDOTABaseGameMode:GetCameraDistanceOverride","name":"GetCameraDistanceOverride","rightLabel":"Class-Function","type":"method","description":"Set a different camera distance; dota default is 1134.","leftLabel":"float","snippet":"GetCameraDistanceOverride()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetCameraDistanceOverride"},{"displayText":"CDOTABaseGameMode:GetCustomBuybackCooldownEnabled","name":"GetCustomBuybackCooldownEnabled","rightLabel":"Class-Function","type":"method","description":"Turns on capability to define custom buyback cooldowns.","leftLabel":"bool","snippet":"GetCustomBuybackCooldownEnabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetCustomBuybackCooldownEnabled"},{"displayText":"CDOTABaseGameMode:GetCustomBuybackCostEnabled","name":"GetCustomBuybackCostEnabled","rightLabel":"Class-Function","type":"method","description":"Turns on capability to define custom buyback costs.","leftLabel":"bool","snippet":"GetCustomBuybackCostEnabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetCustomBuybackCostEnabled"},{"displayText":"CDOTABaseGameMode:GetCustomHeroMaxLevel","name":"GetCustomHeroMaxLevel","rightLabel":"Class-Function","type":"method","description":"Allows definition of the max level heroes can achieve (default is 25).","leftLabel":"int","snippet":"GetCustomHeroMaxLevel()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetCustomHeroMaxLevel"},{"displayText":"CDOTABaseGameMode:GetFixedRespawnTime","name":"GetFixedRespawnTime","rightLabel":"Class-Function","type":"method","description":"Gets the fixed respawn time.","leftLabel":"float","snippet":"GetFixedRespawnTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetFixedRespawnTime"},{"displayText":"CDOTABaseGameMode:GetFogOfWarDisabled","name":"GetFogOfWarDisabled","rightLabel":"Class-Function","type":"method","description":"Turn the fog of war on or off.","leftLabel":"bool","snippet":"GetFogOfWarDisabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetFogOfWarDisabled"},{"displayText":"CDOTABaseGameMode:GetGoldSoundDisabled","name":"GetGoldSoundDisabled","rightLabel":"Class-Function","type":"method","description":"Turn the sound when gold is acquired off/on.","leftLabel":"bool","snippet":"GetGoldSoundDisabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetGoldSoundDisabled"},{"displayText":"CDOTABaseGameMode:GetMaximumAttackSpeed","name":"GetMaximumAttackSpeed","rightLabel":"Class-Function","type":"method","description":"Get the maximum attack speed for units.","leftLabel":"int","snippet":"GetMaximumAttackSpeed()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetMaximumAttackSpeed"},{"displayText":"CDOTABaseGameMode:GetMinimumAttackSpeed","name":"GetMinimumAttackSpeed","rightLabel":"Class-Function","type":"method","description":"Get the minimum attack speed for units.","leftLabel":"int","snippet":"GetMinimumAttackSpeed()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetMinimumAttackSpeed"},{"displayText":"CDOTABaseGameMode:GetRecommendedItemsDisabled","name":"GetRecommendedItemsDisabled","rightLabel":"Class-Function","type":"method","description":"Turn the panel for showing recommended items at the shop off/on.","leftLabel":"bool","snippet":"GetRecommendedItemsDisabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetRecommendedItemsDisabled"},{"displayText":"CDOTABaseGameMode:GetStashPurchasingDisabled","name":"GetStashPurchasingDisabled","rightLabel":"Class-Function","type":"method","description":"Turn purchasing items to the stash off/on. If purchasing to the stash is off the player must be at a shop to purchase items.","leftLabel":"bool","snippet":"GetStashPurchasingDisabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetStashPurchasingDisabled"},{"displayText":"CDOTABaseGameMode:GetStickyItemDisabled","name":"GetStickyItemDisabled","rightLabel":"Class-Function","type":"method","description":"Hide the sticky item in the quickbuy.","leftLabel":"bool","snippet":"GetStickyItemDisabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetStickyItemDisabled"},{"displayText":"CDOTABaseGameMode:GetTopBarTeamValuesOverride","name":"GetTopBarTeamValuesOverride","rightLabel":"Class-Function","type":"method","description":"Override the values of the team values on the top game bar.","leftLabel":"bool","snippet":"GetTopBarTeamValuesOverride()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetTopBarTeamValuesOverride"},{"displayText":"CDOTABaseGameMode:GetTopBarTeamValuesVisible","name":"GetTopBarTeamValuesVisible","rightLabel":"Class-Function","type":"method","description":"Turning on/off the team values on the top game bar.","leftLabel":"bool","snippet":"GetTopBarTeamValuesVisible()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetTopBarTeamValuesVisible"},{"displayText":"CDOTABaseGameMode:GetTowerBackdoorProtectionEnabled","name":"GetTowerBackdoorProtectionEnabled","rightLabel":"Class-Function","type":"method","description":"Enables/Disables tower backdoor protection.","leftLabel":"bool","snippet":"GetTowerBackdoorProtectionEnabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetTowerBackdoorProtectionEnabled"},{"displayText":"CDOTABaseGameMode:GetUseCustomHeroLevels","name":"GetUseCustomHeroLevels","rightLabel":"Class-Function","type":"method","description":"Are custom-defined XP values for hero level ups in use?","leftLabel":"bool","snippet":"GetUseCustomHeroLevels()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.GetUseCustomHeroLevels"},{"displayText":"CDOTABaseGameMode:IsBuybackEnabled","name":"IsBuybackEnabled","rightLabel":"Class-Function","type":"method","description":"Enables or disables buyback completely.","leftLabel":"bool","snippet":"IsBuybackEnabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.IsBuybackEnabled"},{"displayText":"CDOTABaseGameMode:IsDaynightCycleDisabled","name":"IsDaynightCycleDisabled","rightLabel":"Class-Function","type":"method","description":"Is the day/night cycle disabled?","leftLabel":"bool","snippet":"IsDaynightCycleDisabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.IsDaynightCycleDisabled"},{"displayText":"CDOTABaseGameMode:SetAbilityTuningValueFilter","name":"SetAbilityTuningValueFilter","rightLabel":"Class-Function","type":"method","description":"Set a filter function to control the tuning values that abilities use. (Modify the table and Return true to use new values, return false to use the old values)","leftLabel":"void","snippet":"SetAbilityTuningValueFilter(${1:handle hFunction},${2:handle hContext})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetAbilityTuningValueFilter"},{"displayText":"CDOTABaseGameMode:SetAlwaysShowPlayerInventory","name":"SetAlwaysShowPlayerInventory","rightLabel":"Class-Function","type":"method","description":"Show the player hero's inventory in the HUD, regardless of what unit is selected.","leftLabel":"void","snippet":"SetAlwaysShowPlayerInventory(${1:bool bAlwaysShow})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetAlwaysShowPlayerInventory"},{"displayText":"CDOTABaseGameMode:SetAlwaysShowPlayerNames","name":"SetAlwaysShowPlayerNames","rightLabel":"Class-Function","type":"method","description":"Set whether player names are always shown, regardless of client setting.","leftLabel":"void","snippet":"SetAlwaysShowPlayerNames(${1:bool bEnabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetAlwaysShowPlayerNames"},{"displayText":"CDOTABaseGameMode:SetAnnouncerDisabled","name":"SetAnnouncerDisabled","rightLabel":"Class-Function","type":"method","description":"Mutes the in-game announcer.","leftLabel":"void","snippet":"SetAnnouncerDisabled(${1:bool bDisabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetAnnouncerDisabled"},{"displayText":"CDOTABaseGameMode:SetBotThinkingEnabled","name":"SetBotThinkingEnabled","rightLabel":"Class-Function","type":"method","description":"Enables/Disables bots in custom games. Note: this will only work with default heroes in the dota map.","leftLabel":"void","snippet":"SetBotThinkingEnabled(${1:bool bEnabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetBotThinkingEnabled"},{"displayText":"CDOTABaseGameMode:SetBotsAlwaysPushWithHuman","name":"SetBotsAlwaysPushWithHuman","rightLabel":"Class-Function","type":"method","description":"Set if the bots should try their best to push with a human player.","leftLabel":"void","snippet":"SetBotsAlwaysPushWithHuman(${1:bool bAlwaysPush})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetBotsAlwaysPushWithHuman"},{"displayText":"CDOTABaseGameMode:SetBotsInLateGame","name":"SetBotsInLateGame","rightLabel":"Class-Function","type":"method","description":"Set if bots should enable their late game behavior.","leftLabel":"void","snippet":"SetBotsInLateGame(${1:bool bLateGame})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetBotsInLateGame"},{"displayText":"CDOTABaseGameMode:SetBotsMaxPushTier","name":"SetBotsMaxPushTier","rightLabel":"Class-Function","type":"method","description":"Set the max tier of tower that bots want to push. (-1 to disable)","leftLabel":"void","snippet":"SetBotsMaxPushTier(${1:int nMaxTier})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetBotsMaxPushTier"},{"displayText":"CDOTABaseGameMode:SetBountyRunePickupFilter","name":"SetBountyRunePickupFilter","rightLabel":"Class-Function","type":"method","description":"Set a filter function to control the behavior when a bounty rune is picked up. (Modify the table and Return true to use new values, return false to cancel the event)","leftLabel":"void","snippet":"SetBountyRunePickupFilter(${1:handle hFunction},${2:handle hContext})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetBountyRunePickupFilter"},{"displayText":"CDOTABaseGameMode:SetBuybackEnabled","name":"SetBuybackEnabled","rightLabel":"Class-Function","type":"method","description":"Enables or disables buyback completely.","leftLabel":"void","snippet":"SetBuybackEnabled(${1:bool bEnabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetBuybackEnabled"},{"displayText":"CDOTABaseGameMode:SetCameraDistanceOverride","name":"SetCameraDistanceOverride","rightLabel":"Class-Function","type":"method","description":"Set a different camera distance; dota default is 1134.","leftLabel":"void","snippet":"SetCameraDistanceOverride(${1:float flCameraDistanceOverride})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetCameraDistanceOverride"},{"displayText":"CDOTABaseGameMode:SetCustomBuybackCooldownEnabled","name":"SetCustomBuybackCooldownEnabled","rightLabel":"Class-Function","type":"method","description":"Turns on capability to define custom buyback cooldowns.","leftLabel":"void","snippet":"SetCustomBuybackCooldownEnabled(${1:bool bEnabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetCustomBuybackCooldownEnabled"},{"displayText":"CDOTABaseGameMode:SetCustomBuybackCostEnabled","name":"SetCustomBuybackCostEnabled","rightLabel":"Class-Function","type":"method","description":"Turns on capability to define custom buyback costs.","leftLabel":"void","snippet":"SetCustomBuybackCostEnabled(${1:bool bEnabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetCustomBuybackCostEnabled"},{"displayText":"CDOTABaseGameMode:SetCustomGameForceHero","name":"SetCustomGameForceHero","rightLabel":"Class-Function","type":"method","description":"Force all players to use the specified hero and disable the normal hero selection process. Must be used before hero selection.","leftLabel":"void","snippet":"SetCustomGameForceHero(${1:string pHeroName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetCustomGameForceHero"},{"displayText":"CDOTABaseGameMode:SetCustomHeroMaxLevel","name":"SetCustomHeroMaxLevel","rightLabel":"Class-Function","type":"method","description":"Allows definition of the max level heroes can achieve (default is 25).","leftLabel":"void","snippet":"SetCustomHeroMaxLevel(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetCustomHeroMaxLevel"},{"displayText":"CDOTABaseGameMode:SetCustomXPRequiredToReachNextLevel","name":"SetCustomXPRequiredToReachNextLevel","rightLabel":"Class-Function","type":"method","description":"Allows definition of a table of hero XP values.","leftLabel":"void","snippet":"SetCustomXPRequiredToReachNextLevel(${1:handle hTable})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetCustomXPRequiredToReachNextLevel"},{"displayText":"CDOTABaseGameMode:SetDamageFilter","name":"SetDamageFilter","rightLabel":"Class-Function","type":"method","description":"Set a filter function to control the behavior when a unit takes damage. (Modify the table and Return true to use new values, return false to cancel the event)","leftLabel":"void","snippet":"SetDamageFilter(${1:handle hFunction},${2:handle hContext})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetDamageFilter"},{"displayText":"CDOTABaseGameMode:SetDaynightCycleDisabled","name":"SetDaynightCycleDisabled","rightLabel":"Class-Function","type":"method","description":"Enable or disable the day/night cycle.","leftLabel":"void","snippet":"SetDaynightCycleDisabled(${1:bool bDisable})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetDaynightCycleDisabled"},{"displayText":"CDOTABaseGameMode:SetExecuteOrderFilter","name":"SetExecuteOrderFilter","rightLabel":"Class-Function","type":"method","description":"Set a filter function to control the behavior when a unit picks up an item. (Modify the table and Return true to use new values, return false to cancel the event)","leftLabel":"void","snippet":"SetExecuteOrderFilter(${1:handle hFunction},${2:handle hContext})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetExecuteOrderFilter"},{"displayText":"CDOTABaseGameMode:SetFixedRespawnTime","name":"SetFixedRespawnTime","rightLabel":"Class-Function","type":"method","description":"Set a fixed delay for all players to respawn after.","leftLabel":"void","snippet":"SetFixedRespawnTime(${1:float flFixedRespawnTime})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetFixedRespawnTime"},{"displayText":"CDOTABaseGameMode:SetFogOfWarDisabled","name":"SetFogOfWarDisabled","rightLabel":"Class-Function","type":"method","description":"Turn the fog of war on or off.","leftLabel":"void","snippet":"SetFogOfWarDisabled(${1:bool bDisabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetFogOfWarDisabled"},{"displayText":"CDOTABaseGameMode:SetFountainConstantManaRegen","name":"SetFountainConstantManaRegen","rightLabel":"Class-Function","type":"method","description":"Set the constant rate that the fountain will regen mana. (-1 for default)","leftLabel":"void","snippet":"SetFountainConstantManaRegen(${1:float flConstantManaRegen})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetFountainConstantManaRegen"},{"displayText":"CDOTABaseGameMode:SetFountainPercentageHealthRegen","name":"SetFountainPercentageHealthRegen","rightLabel":"Class-Function","type":"method","description":"Set the percentage rate that the fountain will regen health. (-1 for default)","leftLabel":"void","snippet":"SetFountainPercentageHealthRegen(${1:float flPercentageHealthRegen})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetFountainPercentageHealthRegen"},{"displayText":"CDOTABaseGameMode:SetFountainPercentageManaRegen","name":"SetFountainPercentageManaRegen","rightLabel":"Class-Function","type":"method","description":"Set the percentage rate that the fountain will regen mana. (-1 for default)","leftLabel":"void","snippet":"SetFountainPercentageManaRegen(${1:float flPercentageManaRegen})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetFountainPercentageManaRegen"},{"displayText":"CDOTABaseGameMode:SetGoldSoundDisabled","name":"SetGoldSoundDisabled","rightLabel":"Class-Function","type":"method","description":"Turn the sound when gold is acquired off/on.","leftLabel":"void","snippet":"SetGoldSoundDisabled(${1:bool bDisabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetGoldSoundDisabled"},{"displayText":"CDOTABaseGameMode:SetHUDVisible","name":"SetHUDVisible","rightLabel":"Class-Function","type":"method","description":"Set the HUD element visibility.","leftLabel":"void","snippet":"SetHUDVisible(${1:int iHUDElement},${2:bool bVisible})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetHUDVisible"},{"displayText":"CDOTABaseGameMode:SetItemAddedToInventoryFilter","name":"SetItemAddedToInventoryFilter","rightLabel":"Class-Function","type":"method","description":"Set a filter function to control what happens to items that are added to an inventory, return false to cancel the event","leftLabel":"void","snippet":"SetItemAddedToInventoryFilter(${1:handle hFunction},${2:handle hContext})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetItemAddedToInventoryFilter"},{"displayText":"CDOTABaseGameMode:SetKillingSpreeAnnouncerDisabled","name":"SetKillingSpreeAnnouncerDisabled","rightLabel":"Class-Function","type":"method","description":"Mutes the in-game killing spree announcer.","leftLabel":"void","snippet":"SetKillingSpreeAnnouncerDisabled(${1:bool bDisabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetKillingSpreeAnnouncerDisabled"},{"displayText":"CDOTABaseGameMode:SetLoseGoldOnDeath","name":"SetLoseGoldOnDeath","rightLabel":"Class-Function","type":"method","description":"Use to disable gold loss on death.","leftLabel":"void","snippet":"SetLoseGoldOnDeath(${1:bool bEnabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetLoseGoldOnDeath"},{"displayText":"CDOTABaseGameMode:SetMaximumAttackSpeed","name":"SetMaximumAttackSpeed","rightLabel":"Class-Function","type":"method","description":"Set the maximum attack speed for units.","leftLabel":"void","snippet":"SetMaximumAttackSpeed(${1:int nMaxSpeed})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetMaximumAttackSpeed"},{"displayText":"CDOTABaseGameMode:SetMinimumAttackSpeed","name":"SetMinimumAttackSpeed","rightLabel":"Class-Function","type":"method","description":"Set the minimum attack speed for units.","leftLabel":"void","snippet":"SetMinimumAttackSpeed(${1:int nMinSpeed})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetMinimumAttackSpeed"},{"displayText":"CDOTABaseGameMode:SetModifierGainedFilter","name":"SetModifierGainedFilter","rightLabel":"Class-Function","type":"method","description":"Set a filter function to control modifiers that are gained, return false to destroy modifier.","leftLabel":"void","snippet":"SetModifierGainedFilter(${1:handle hFunction},${2:handle hContext})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetModifierGainedFilter"},{"displayText":"CDOTABaseGameMode:SetModifyExperienceFilter","name":"SetModifyExperienceFilter","rightLabel":"Class-Function","type":"method","description":"Set a filter function to control the behavior when a hero's experience is modified. (Modify the table and Return true to use new values, return false to cancel the event)","leftLabel":"void","snippet":"SetModifyExperienceFilter(${1:handle hFunction},${2:handle hContext})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetModifyExperienceFilter"},{"displayText":"CDOTABaseGameMode:SetModifyGoldFilter","name":"SetModifyGoldFilter","rightLabel":"Class-Function","type":"method","description":"Set a filter function to control the behavior when a hero's gold is modified. (Modify the table and Return true to use new values, return false to cancel the event)","leftLabel":"void","snippet":"SetModifyGoldFilter(${1:handle hFunction},${2:handle hContext})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetModifyGoldFilter"},{"displayText":"CDOTABaseGameMode:SetOverrideSelectionEntity","name":"SetOverrideSelectionEntity","rightLabel":"Class-Function","type":"method","description":"Set an override for the default selection entity, instead of each player's hero.","leftLabel":"void","snippet":"SetOverrideSelectionEntity(${1:handle hOverrideEntity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetOverrideSelectionEntity"},{"displayText":"CDOTABaseGameMode:SetRecommendedItemsDisabled","name":"SetRecommendedItemsDisabled","rightLabel":"Class-Function","type":"method","description":"Turn the panel for showing recommended items at the shop off/on.","leftLabel":"void","snippet":"SetRecommendedItemsDisabled(${1:bool bDisabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetRecommendedItemsDisabled"},{"displayText":"CDOTABaseGameMode:SetRemoveIllusionsOnDeath","name":"SetRemoveIllusionsOnDeath","rightLabel":"Class-Function","type":"method","description":"Make it so illusions are immediately removed upon death, rather than sticking around for a few seconds.","leftLabel":"void","snippet":"SetRemoveIllusionsOnDeath(${1:bool bRemove})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetRemoveIllusionsOnDeath"},{"displayText":"CDOTABaseGameMode:SetRuneEnabled","name":"SetRuneEnabled","rightLabel":"Class-Function","type":"method","description":"Set if a given type of rune is enabled.","leftLabel":"void","snippet":"SetRuneEnabled(${1:int nRune},${2:bool bEnabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetRuneEnabled"},{"displayText":"CDOTABaseGameMode:SetRuneSpawnFilter","name":"SetRuneSpawnFilter","rightLabel":"Class-Function","type":"method","description":"Set a filter function to control what rune spawns. (Modify the table and Return true to use new values, return false to cancel the event)","leftLabel":"void","snippet":"SetRuneSpawnFilter(${1:handle hFunction},${2:handle hContext})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetRuneSpawnFilter"},{"displayText":"CDOTABaseGameMode:SetStashPurchasingDisabled","name":"SetStashPurchasingDisabled","rightLabel":"Class-Function","type":"method","description":"Turn purchasing items to the stash off/on. If purchasing to the stash is off the player must be at a shop to purchase items.","leftLabel":"void","snippet":"SetStashPurchasingDisabled(${1:bool bDisabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetStashPurchasingDisabled"},{"displayText":"CDOTABaseGameMode:SetStickyItemDisabled","name":"SetStickyItemDisabled","rightLabel":"Class-Function","type":"method","description":"Hide the sticky item in the quickbuy.","leftLabel":"void","snippet":"SetStickyItemDisabled(${1:bool bDisabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetStickyItemDisabled"},{"displayText":"CDOTABaseGameMode:SetTopBarTeamValue","name":"SetTopBarTeamValue","rightLabel":"Class-Function","type":"method","description":"Set the team values on the top game bar.","leftLabel":"void","snippet":"SetTopBarTeamValue(${1:int iTeam},${2:int nValue})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetTopBarTeamValue"},{"displayText":"CDOTABaseGameMode:SetTopBarTeamValuesOverride","name":"SetTopBarTeamValuesOverride","rightLabel":"Class-Function","type":"method","description":"Override the values of the team values on the top game bar.","leftLabel":"void","snippet":"SetTopBarTeamValuesOverride(${1:bool bOverride})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetTopBarTeamValuesOverride"},{"displayText":"CDOTABaseGameMode:SetTopBarTeamValuesVisible","name":"SetTopBarTeamValuesVisible","rightLabel":"Class-Function","type":"method","description":"Turning on/off the team values on the top game bar.","leftLabel":"void","snippet":"SetTopBarTeamValuesVisible(${1:bool bVisible})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetTopBarTeamValuesVisible"},{"displayText":"CDOTABaseGameMode:SetTowerBackdoorProtectionEnabled","name":"SetTowerBackdoorProtectionEnabled","rightLabel":"Class-Function","type":"method","description":"Enables/Disables tower backdoor protection.","leftLabel":"void","snippet":"SetTowerBackdoorProtectionEnabled(${1:bool bEnabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetTowerBackdoorProtectionEnabled"},{"displayText":"CDOTABaseGameMode:SetTrackingProjectileFilter","name":"SetTrackingProjectileFilter","rightLabel":"Class-Function","type":"method","description":"Set a filter function to control when tracking projectiles are launched. (Modify the table and Return true to use new values, return false to cancel the event)","leftLabel":"void","snippet":"SetTrackingProjectileFilter(${1:handle hFunction},${2:handle hContext})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetTrackingProjectileFilter"},{"displayText":"CDOTABaseGameMode:SetUnseenFogOfWarEnabled","name":"SetUnseenFogOfWarEnabled","rightLabel":"Class-Function","type":"method","description":"Enable or disable unseen fog of war. When enabled parts of the map the player has never seen will be completely hidden by fog of war.","leftLabel":"void","snippet":"SetUnseenFogOfWarEnabled(${1:bool bEnabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetUnseenFogOfWarEnabled"},{"displayText":"CDOTABaseGameMode:SetUseCustomHeroLevels","name":"SetUseCustomHeroLevels","rightLabel":"Class-Function","type":"method","description":"Turn on custom-defined XP values for hero level ups.  The table should be defined before switching this on.","leftLabel":"void","snippet":"SetUseCustomHeroLevels(${1:bool bEnabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetUseCustomHeroLevels"},{"displayText":"CDOTABaseGameMode:SetWeatherEffectsDisabled","name":"SetWeatherEffectsDisabled","rightLabel":"Class-Function","type":"method","description":"Set if weather effects are disabled.","leftLabel":"void","snippet":"SetWeatherEffectsDisabled(${1:bool bDisable})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTABaseGameMode.SetWeatherEffectsDisabled"},{"displayText":"CDOTAGameManager:GetHeroDataByName_Script","name":"GetHeroDataByName_Script","rightLabel":"Class-Function","type":"method","description":"Get the hero unit","leftLabel":"table","snippet":"GetHeroDataByName_Script(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGameManager.GetHeroDataByName_Script"},{"displayText":"CDOTAGameManager:GetHeroIDByName","name":"GetHeroIDByName","rightLabel":"Class-Function","type":"method","description":"Get the hero ID given the hero name.","leftLabel":"int","snippet":"GetHeroIDByName(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGameManager.GetHeroIDByName"},{"displayText":"CDOTAGameManager:GetHeroNameByID","name":"GetHeroNameByID","rightLabel":"Class-Function","type":"method","description":"Get the hero name given a hero ID.","leftLabel":"string","snippet":"GetHeroNameByID(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGameManager.GetHeroNameByID"},{"displayText":"CDOTAGameManager:GetHeroNameForUnitName","name":"GetHeroNameForUnitName","rightLabel":"Class-Function","type":"method","description":"Get the hero name given a unit name.","leftLabel":"string","snippet":"GetHeroNameForUnitName(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGameManager.GetHeroNameForUnitName"},{"displayText":"CDOTAGameManager:GetHeroUnitNameByID","name":"GetHeroUnitNameByID","rightLabel":"Class-Function","type":"method","description":"Get the hero unit name given the hero ID.","leftLabel":"string","snippet":"GetHeroUnitNameByID(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAGameManager.GetHeroUnitNameByID"},{"displayText":"CDOTAPlayer:GetAssignedHero","name":"GetAssignedHero","rightLabel":"Class-Function","type":"method","description":"Get the player's hero.","leftLabel":"handle","snippet":"GetAssignedHero()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAPlayer.GetAssignedHero"},{"displayText":"CDOTAPlayer:GetPlayerID","name":"GetPlayerID","rightLabel":"Class-Function","type":"method","description":"Get the player's official PlayerID; notably is -1 when the player isn't yet on a team.","leftLabel":"int","snippet":"GetPlayerID()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAPlayer.GetPlayerID"},{"displayText":"CDOTAPlayer:MakeRandomHeroSelection","name":"MakeRandomHeroSelection","rightLabel":"Class-Function","type":"method","description":"Randoms this player's hero.","leftLabel":"void","snippet":"MakeRandomHeroSelection()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAPlayer.MakeRandomHeroSelection"},{"displayText":"CDOTAPlayer:SetKillCamUnit","name":"SetKillCamUnit","rightLabel":"Class-Function","type":"method","description":"Set the kill cam unit for this hero.","leftLabel":"void","snippet":"SetKillCamUnit(${1:handle hEntity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAPlayer.SetKillCamUnit"},{"displayText":"CDOTAPlayer:SetMusicStatus","name":"SetMusicStatus","rightLabel":"Class-Function","type":"method","description":"(nMusicStatus, flIntensity) - Set the music status for this player, note this will only really apply if dota_music_battle_enable is off.","leftLabel":"void","snippet":"SetMusicStatus(${1:int nMusicStatus},${2:float flIntensity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAPlayer.SetMusicStatus"},{"displayText":"CDOTAVoteSystem:StartVote","name":"StartVote","rightLabel":"Class-Function","type":"method","description":"Starts a vote, based upon a table of parameters","leftLabel":"void","snippet":"StartVote(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTAVoteSystem.StartVote"},{"displayText":"CDOTA_Ability_Animation_Attack:SetPlaybackRate","name":"SetPlaybackRate","rightLabel":"Class-Function","type":"method","description":"Override playbackrate","leftLabel":"void","snippet":"SetPlaybackRate(${1:float flRate})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Animation_Attack.SetPlaybackRate"},{"displayText":"CDOTA_Ability_Animation_TailSpin:SetPlaybackRate","name":"SetPlaybackRate","rightLabel":"Class-Function","type":"method","description":"Override playbackrate","leftLabel":"void","snippet":"SetPlaybackRate(${1:float flRate})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Animation_TailSpin.SetPlaybackRate"},{"displayText":"CDOTA_Ability_DataDriven:ApplyDataDrivenModifier","name":"ApplyDataDrivenModifier","rightLabel":"Class-Function","type":"method","description":"Applies a data driven modifier to the target","leftLabel":"handle","snippet":"ApplyDataDrivenModifier(${1:handle hCaster},${2:handle hTarget},${3:string pszModifierName},${4:handle hModifierTable})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_DataDriven.ApplyDataDrivenModifier"},{"displayText":"CDOTA_Ability_DataDriven:ApplyDataDrivenThinker","name":"ApplyDataDrivenThinker","rightLabel":"Class-Function","type":"method","description":"Applies a data driven thinker at the location","leftLabel":"handle","snippet":"ApplyDataDrivenThinker(${1:handle hCaster},${2:Vector vLocation},${3:string pszModifierName},${4:handle hModifierTable})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_DataDriven.ApplyDataDrivenThinker"},{"displayText":"CDOTA_Ability_Lua:CastFilterResult","name":"CastFilterResult","rightLabel":"Class-Function","type":"method","description":"Determine whether an issued command with no target is valid.","leftLabel":"int","snippet":"CastFilterResult()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.CastFilterResult"},{"displayText":"CDOTA_Ability_Lua:CastFilterResultLocation","name":"CastFilterResultLocation","rightLabel":"Class-Function","type":"method","description":"(Vector vLocation) Determine whether an issued command on a location is valid.","leftLabel":"int","snippet":"CastFilterResultLocation(${1:Vector vLocation})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.CastFilterResultLocation"},{"displayText":"CDOTA_Ability_Lua:CastFilterResultTarget","name":"CastFilterResultTarget","rightLabel":"Class-Function","type":"method","description":"(HSCRIPT hTarget) Determine whether an issued command on a target is valid.","leftLabel":"int","snippet":"CastFilterResultTarget(${1:handle hTarget})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.CastFilterResultTarget"},{"displayText":"CDOTA_Ability_Lua:GetAssociatedPrimaryAbilities","name":"GetAssociatedPrimaryAbilities","rightLabel":"Class-Function","type":"method","description":"Returns abilities that are stolen simultaneously, or otherwise related in functionality.","leftLabel":"string","snippet":"GetAssociatedPrimaryAbilities()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetAssociatedPrimaryAbilities"},{"displayText":"CDOTA_Ability_Lua:GetAssociatedSecondaryAbilities","name":"GetAssociatedSecondaryAbilities","rightLabel":"Class-Function","type":"method","description":"Returns other abilities that are stolen simultaneously, or otherwise related in functionality.  Generally hidden abilities.","leftLabel":"string","snippet":"GetAssociatedSecondaryAbilities()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetAssociatedSecondaryAbilities"},{"displayText":"CDOTA_Ability_Lua:GetBehavior","name":"GetBehavior","rightLabel":"Class-Function","type":"method","description":"Return cast behavior type of this ability.","leftLabel":"int","snippet":"GetBehavior()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetBehavior"},{"displayText":"CDOTA_Ability_Lua:GetCastAnimation","name":"GetCastAnimation","rightLabel":"Class-Function","type":"method","description":"Return casting animation of this ability.","leftLabel":"int","snippet":"GetCastAnimation()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetCastAnimation"},{"displayText":"CDOTA_Ability_Lua:GetCastRange","name":"GetCastRange","rightLabel":"Class-Function","type":"method","description":"Return cast range of this ability.","leftLabel":"int","snippet":"GetCastRange(${1:Vector vLocation},${2:handle hTarget})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetCastRange"},{"displayText":"CDOTA_Ability_Lua:GetChannelAnimation","name":"GetChannelAnimation","rightLabel":"Class-Function","type":"method","description":"Return channel animation of this ability.","leftLabel":"int","snippet":"GetChannelAnimation()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetChannelAnimation"},{"displayText":"CDOTA_Ability_Lua:GetChannelTime","name":"GetChannelTime","rightLabel":"Class-Function","type":"method","description":"Return the channel time of this ability.","leftLabel":"float","snippet":"GetChannelTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetChannelTime"},{"displayText":"CDOTA_Ability_Lua:GetChannelledManaCostPerSecond","name":"GetChannelledManaCostPerSecond","rightLabel":"Class-Function","type":"method","description":"Return mana cost at the given level per second while channeling (-1 is current).","leftLabel":"int","snippet":"GetChannelledManaCostPerSecond(${1:int iLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetChannelledManaCostPerSecond"},{"displayText":"CDOTA_Ability_Lua:GetConceptRecipientType","name":"GetConceptRecipientType","rightLabel":"Class-Function","type":"method","description":"Return who hears speech when this spell is cast.","leftLabel":"int","snippet":"GetConceptRecipientType()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetConceptRecipientType"},{"displayText":"CDOTA_Ability_Lua:GetCooldown","name":"GetCooldown","rightLabel":"Class-Function","type":"method","description":"Return cooldown of this ability.","leftLabel":"float","snippet":"GetCooldown(${1:int iLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetCooldown"},{"displayText":"CDOTA_Ability_Lua:GetCustomCastError","name":"GetCustomCastError","rightLabel":"Class-Function","type":"method","description":"Return the error string of a failed command with no target.","leftLabel":"string","snippet":"GetCustomCastError()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetCustomCastError"},{"displayText":"CDOTA_Ability_Lua:GetCustomCastErrorLocation","name":"GetCustomCastErrorLocation","rightLabel":"Class-Function","type":"method","description":"(Vector vLocation) Return the error string of a failed command on a location.","leftLabel":"string","snippet":"GetCustomCastErrorLocation(${1:Vector vLocation})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetCustomCastErrorLocation"},{"displayText":"CDOTA_Ability_Lua:GetCustomCastErrorTarget","name":"GetCustomCastErrorTarget","rightLabel":"Class-Function","type":"method","description":"(HSCRIPT hTarget) Return the error string of a failed command on a target.","leftLabel":"string","snippet":"GetCustomCastErrorTarget(${1:handle hTarget})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetCustomCastErrorTarget"},{"displayText":"CDOTA_Ability_Lua:GetGoldCost","name":"GetGoldCost","rightLabel":"Class-Function","type":"method","description":"Return gold cost at the given level (-1 is current).","leftLabel":"int","snippet":"GetGoldCost(${1:int iLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetGoldCost"},{"displayText":"CDOTA_Ability_Lua:GetIntrinsicModifierName","name":"GetIntrinsicModifierName","rightLabel":"Class-Function","type":"method","description":"Returns the name of the modifier applied passively by this ability.","leftLabel":"string","snippet":"GetIntrinsicModifierName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetIntrinsicModifierName"},{"displayText":"CDOTA_Ability_Lua:GetManaCost","name":"GetManaCost","rightLabel":"Class-Function","type":"method","description":"Return mana cost at the given level (-1 is current).","leftLabel":"int","snippet":"GetManaCost(${1:int iLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetManaCost"},{"displayText":"CDOTA_Ability_Lua:GetPlaybackRateOverride","name":"GetPlaybackRateOverride","rightLabel":"Class-Function","type":"method","description":"Return the animation rate of the cast animation.","leftLabel":"float","snippet":"GetPlaybackRateOverride()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.GetPlaybackRateOverride"},{"displayText":"CDOTA_Ability_Lua:IsHiddenAbilityCastable","name":"IsHiddenAbilityCastable","rightLabel":"Class-Function","type":"method","description":"Returns true if this ability can be used when not on the action panel.","leftLabel":"bool","snippet":"IsHiddenAbilityCastable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.IsHiddenAbilityCastable"},{"displayText":"CDOTA_Ability_Lua:IsHiddenWhenStolen","name":"IsHiddenWhenStolen","rightLabel":"Class-Function","type":"method","description":"Returns true if this ability is hidden when stolen by Spell Steal.","leftLabel":"bool","snippet":"IsHiddenWhenStolen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.IsHiddenWhenStolen"},{"displayText":"CDOTA_Ability_Lua:IsRefreshable","name":"IsRefreshable","rightLabel":"Class-Function","type":"method","description":"Returns true if this ability is refreshed by Refresher Orb.","leftLabel":"bool","snippet":"IsRefreshable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.IsRefreshable"},{"displayText":"CDOTA_Ability_Lua:IsStealable","name":"IsStealable","rightLabel":"Class-Function","type":"method","description":"Returns true if this ability can be stolen by Spell Steal.","leftLabel":"bool","snippet":"IsStealable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.IsStealable"},{"displayText":"CDOTA_Ability_Lua:OnAbilityPhaseInterrupted","name":"OnAbilityPhaseInterrupted","rightLabel":"Class-Function","type":"method","description":"Cast time did not complete successfully.","leftLabel":"void","snippet":"OnAbilityPhaseInterrupted()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnAbilityPhaseInterrupted"},{"displayText":"CDOTA_Ability_Lua:OnAbilityPhaseStart","name":"OnAbilityPhaseStart","rightLabel":"Class-Function","type":"method","description":"Cast time begins (return true for successful cast).","leftLabel":"bool","snippet":"OnAbilityPhaseStart()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnAbilityPhaseStart"},{"displayText":"CDOTA_Ability_Lua:OnChannelFinish","name":"OnChannelFinish","rightLabel":"Class-Function","type":"method","description":"(bool bInterrupted) Channel finished.","leftLabel":"void","snippet":"OnChannelFinish(${1:bool bInterrupted})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnChannelFinish"},{"displayText":"CDOTA_Ability_Lua:OnChannelThink","name":"OnChannelThink","rightLabel":"Class-Function","type":"method","description":"(float flInterval) Channeling is taking place.","leftLabel":"void","snippet":"OnChannelThink(${1:float flInterval})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnChannelThink"},{"displayText":"CDOTA_Ability_Lua:OnHeroCalculateStatBonus","name":"OnHeroCalculateStatBonus","rightLabel":"Class-Function","type":"method","description":"Caster (hero only) gained a level, skilled an ability, or received a new stat bonus.","leftLabel":"void","snippet":"OnHeroCalculateStatBonus()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnHeroCalculateStatBonus"},{"displayText":"CDOTA_Ability_Lua:OnHeroDiedNearby","name":"OnHeroDiedNearby","rightLabel":"Class-Function","type":"method","description":"A hero has died in the vicinity (ie Urn), takes table of params.","leftLabel":"void","snippet":"OnHeroDiedNearby(${1:handle unit},${2:handle attacker},${3:handle table})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnHeroDiedNearby"},{"displayText":"CDOTA_Ability_Lua:OnHeroLevelUp","name":"OnHeroLevelUp","rightLabel":"Class-Function","type":"method","description":"Caster gained a level.","leftLabel":"void","snippet":"OnHeroLevelUp()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnHeroLevelUp"},{"displayText":"CDOTA_Ability_Lua:OnInventoryContentsChanged","name":"OnInventoryContentsChanged","rightLabel":"Class-Function","type":"method","description":"Caster inventory changed.","leftLabel":"void","snippet":"OnInventoryContentsChanged()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnInventoryContentsChanged"},{"displayText":"CDOTA_Ability_Lua:OnItemEquipped","name":"OnItemEquipped","rightLabel":"Class-Function","type":"method","description":"( HSCRIPT hItem ) Caster equipped item.","leftLabel":"void","snippet":"OnItemEquipped(${1:handle hItem})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnItemEquipped"},{"displayText":"CDOTA_Ability_Lua:OnOwnerDied","name":"OnOwnerDied","rightLabel":"Class-Function","type":"method","description":"Caster died.","leftLabel":"void","snippet":"OnOwnerDied()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnOwnerDied"},{"displayText":"CDOTA_Ability_Lua:OnOwnerSpawned","name":"OnOwnerSpawned","rightLabel":"Class-Function","type":"method","description":"Caster respawned or spawned for the first time.","leftLabel":"void","snippet":"OnOwnerSpawned()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnOwnerSpawned"},{"displayText":"CDOTA_Ability_Lua:OnProjectileHit","name":"OnProjectileHit","rightLabel":"Class-Function","type":"method","description":"(HSCRIPT hTarget, Vector vLocation) Projectile has collided with a given target or reached its destination (target is invalid).","leftLabel":"bool","snippet":"OnProjectileHit(${1:handle hTarget},${2:Vector vLocation})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnProjectileHit"},{"displayText":"CDOTA_Ability_Lua:OnProjectileHit_ExtraData","name":"OnProjectileHit_ExtraData","rightLabel":"Class-Function","type":"method","description":"(HSCRIPT hTarget, Vector vLocation, table kv) Projectile has collided with a given target or reached its destination (target is invalid).","leftLabel":"bool","snippet":"OnProjectileHit_ExtraData(${1:handle hTarget},${2:Vector vLocation},${3:handle table})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnProjectileHit_ExtraData"},{"displayText":"CDOTA_Ability_Lua:OnProjectileThink","name":"OnProjectileThink","rightLabel":"Class-Function","type":"method","description":"(Vector vLocation) Projectile is actively moving.","leftLabel":"void","snippet":"OnProjectileThink(${1:Vector vLocation})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnProjectileThink"},{"displayText":"CDOTA_Ability_Lua:OnProjectileThink_ExtraData","name":"OnProjectileThink_ExtraData","rightLabel":"Class-Function","type":"method","description":"(Vector vLocation, table kv ) Projectile is actively moving.","leftLabel":"void","snippet":"OnProjectileThink_ExtraData(${1:Vector vLocation},${2:handle table})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnProjectileThink_ExtraData"},{"displayText":"CDOTA_Ability_Lua:OnSpellStart","name":"OnSpellStart","rightLabel":"Class-Function","type":"method","description":"Cast time finished, spell effects begin.","leftLabel":"void","snippet":"OnSpellStart()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnSpellStart"},{"displayText":"CDOTA_Ability_Lua:OnStolen","name":"OnStolen","rightLabel":"Class-Function","type":"method","description":"( HSCRIPT hAbility ) Special behavior when stolen by Spell Steal.","leftLabel":"void","snippet":"OnStolen(${1:handle hSourceAbility})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnStolen"},{"displayText":"CDOTA_Ability_Lua:OnToggle","name":"OnToggle","rightLabel":"Class-Function","type":"method","description":"Ability is toggled on/off.","leftLabel":"void","snippet":"OnToggle()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnToggle"},{"displayText":"CDOTA_Ability_Lua:OnUnStolen","name":"OnUnStolen","rightLabel":"Class-Function","type":"method","description":"Special behavior when lost by Spell Steal.","leftLabel":"void","snippet":"OnUnStolen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnUnStolen"},{"displayText":"CDOTA_Ability_Lua:OnUpgrade","name":"OnUpgrade","rightLabel":"Class-Function","type":"method","description":"Ability gained a level.","leftLabel":"void","snippet":"OnUpgrade()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.OnUpgrade"},{"displayText":"CDOTA_Ability_Lua:ProcsMagicStick","name":"ProcsMagicStick","rightLabel":"Class-Function","type":"method","description":"Returns true if this ability will generate magic stick charges for nearby enemies.","leftLabel":"bool","snippet":"ProcsMagicStick()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.ProcsMagicStick"},{"displayText":"CDOTA_Ability_Lua:SpeakTrigger","name":"SpeakTrigger","rightLabel":"Class-Function","type":"method","description":"Return the type of speech used.","leftLabel":"int","snippet":"SpeakTrigger()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Lua.SpeakTrigger"},{"displayText":"CDOTA_Ability_Nian_Dive:SetPlaybackRate","name":"SetPlaybackRate","rightLabel":"Class-Function","type":"method","description":"Override playbackrate","leftLabel":"void","snippet":"SetPlaybackRate(${1:float flRate})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Nian_Dive.SetPlaybackRate"},{"displayText":"CDOTA_Ability_Nian_Leap:SetPlaybackRate","name":"SetPlaybackRate","rightLabel":"Class-Function","type":"method","description":"Override playbackrate","leftLabel":"void","snippet":"SetPlaybackRate(${1:float flRate})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Nian_Leap.SetPlaybackRate"},{"displayText":"CDOTA_Ability_Nian_Roar:GetCastCount","name":"GetCastCount","rightLabel":"Class-Function","type":"method","description":"Number of times Nian has used the roar","leftLabel":"int","snippet":"GetCastCount()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Ability_Nian_Roar.GetCastCount"},{"displayText":"CDOTA_BaseNPC:AddAbility","name":"AddAbility","rightLabel":"Class-Function","type":"method","description":"Add an ability to this unit by name.","leftLabel":"handle","snippet":"AddAbility(${1:string pszAbilityName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AddAbility"},{"displayText":"CDOTA_BaseNPC:AddItem","name":"AddItem","rightLabel":"Class-Function","type":"method","description":"Add an item to this unit's inventory.","leftLabel":"handle","snippet":"AddItem(${1:handle hItem})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AddItem"},{"displayText":"CDOTA_BaseNPC:AddItemByName","name":"AddItemByName","rightLabel":"Class-Function","type":"method","description":"Add an item to this unit's inventory.","leftLabel":"handle","snippet":"AddItemByName(${1:string pszItemName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AddItemByName"},{"displayText":"CDOTA_BaseNPC:AddNewModifier","name":"AddNewModifier","rightLabel":"Class-Function","type":"method","description":"Add a modifier to this unit.","leftLabel":"handle","snippet":"AddNewModifier(${1:handle hCaster},${2:handle hAbility},${3:string pszScriptName},${4:handle hModifierTable})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AddNewModifier"},{"displayText":"CDOTA_BaseNPC:AddNoDraw","name":"AddNoDraw","rightLabel":"Class-Function","type":"method","description":"Adds the no draw flag.","leftLabel":"void","snippet":"AddNoDraw()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AddNoDraw"},{"displayText":"CDOTA_BaseNPC:AddSpeechBubble","name":"AddSpeechBubble","rightLabel":"Class-Function","type":"method","description":"Add a speech bubble(1-4 live at a time) to this NPC.","leftLabel":"void","snippet":"AddSpeechBubble(${1:int iBubble},${2:string pszSpeech},${3:float flDuration},${4:unsigned unOffsetX},${5:unsigned unOffsetY})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AddSpeechBubble"},{"displayText":"CDOTA_BaseNPC:AlertNearbyUnits","name":"AlertNearbyUnits","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"AlertNearbyUnits(${1:handle hAttacker},${2:handle hAbility})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AlertNearbyUnits"},{"displayText":"CDOTA_BaseNPC:AngerNearbyUnits","name":"AngerNearbyUnits","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"AngerNearbyUnits()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AngerNearbyUnits"},{"displayText":"CDOTA_BaseNPC:AttackNoEarlierThan","name":"AttackNoEarlierThan","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"AttackNoEarlierThan(${1:float flTime})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AttackNoEarlierThan"},{"displayText":"CDOTA_BaseNPC:AttackReady","name":"AttackReady","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"AttackReady()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.AttackReady"},{"displayText":"CDOTA_BaseNPC:BoundingRadius2D","name":"BoundingRadius2D","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"BoundingRadius2D()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.BoundingRadius2D"},{"displayText":"CDOTA_BaseNPC:CanEntityBeSeenByMyTeam","name":"CanEntityBeSeenByMyTeam","rightLabel":"Class-Function","type":"method","description":"Check FoW to see if an entity is visible.","leftLabel":"bool","snippet":"CanEntityBeSeenByMyTeam(${1:handle hEntity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.CanEntityBeSeenByMyTeam"},{"displayText":"CDOTA_BaseNPC:CanSellItems","name":"CanSellItems","rightLabel":"Class-Function","type":"method","description":"Query if this unit can sell items.","leftLabel":"bool","snippet":"CanSellItems()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.CanSellItems"},{"displayText":"CDOTA_BaseNPC:CastAbilityImmediately","name":"CastAbilityImmediately","rightLabel":"Class-Function","type":"method","description":"Cast an ability immediately.","leftLabel":"void","snippet":"CastAbilityImmediately(${1:handle hAbility},${2:int iPlayerIndex})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.CastAbilityImmediately"},{"displayText":"CDOTA_BaseNPC:CastAbilityNoTarget","name":"CastAbilityNoTarget","rightLabel":"Class-Function","type":"method","description":"Cast an ability with no target.","leftLabel":"void","snippet":"CastAbilityNoTarget(${1:handle hAbility},${2:int iPlayerIndex})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.CastAbilityNoTarget"},{"displayText":"CDOTA_BaseNPC:CastAbilityOnPosition","name":"CastAbilityOnPosition","rightLabel":"Class-Function","type":"method","description":"Cast an ability on a position.","leftLabel":"void","snippet":"CastAbilityOnPosition(${1:Vector vPosition},${2:handle hAbility},${3:int iPlayerIndex})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.CastAbilityOnPosition"},{"displayText":"CDOTA_BaseNPC:CastAbilityOnTarget","name":"CastAbilityOnTarget","rightLabel":"Class-Function","type":"method","description":"Cast an ability on a target entity.","leftLabel":"void","snippet":"CastAbilityOnTarget(${1:handle hTarget},${2:handle hAbility},${3:int iPlayerIndex})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.CastAbilityOnTarget"},{"displayText":"CDOTA_BaseNPC:CastAbilityToggle","name":"CastAbilityToggle","rightLabel":"Class-Function","type":"method","description":"Toggle an ability.","leftLabel":"void","snippet":"CastAbilityToggle(${1:handle hAbility},${2:int iPlayerIndex})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.CastAbilityToggle"},{"displayText":"CDOTA_BaseNPC:DestroyAllSpeechBubbles","name":"DestroyAllSpeechBubbles","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"DestroyAllSpeechBubbles()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.DestroyAllSpeechBubbles"},{"displayText":"CDOTA_BaseNPC:DisassembleItem","name":"DisassembleItem","rightLabel":"Class-Function","type":"method","description":"Disassemble the passed item in this unit's inventory.","leftLabel":"void","snippet":"DisassembleItem(${1:handle hItem})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.DisassembleItem"},{"displayText":"CDOTA_BaseNPC:DropItemAtPosition","name":"DropItemAtPosition","rightLabel":"Class-Function","type":"method","description":"Drop an item at a given point.","leftLabel":"void","snippet":"DropItemAtPosition(${1:Vector vDest},${2:handle hItem})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.DropItemAtPosition"},{"displayText":"CDOTA_BaseNPC:DropItemAtPositionImmediate","name":"DropItemAtPositionImmediate","rightLabel":"Class-Function","type":"method","description":"Immediately drop a carried item at a given position.","leftLabel":"void","snippet":"DropItemAtPositionImmediate(${1:handle hItem},${2:Vector vPosition})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.DropItemAtPositionImmediate"},{"displayText":"CDOTA_BaseNPC:EjectItemFromStash","name":"EjectItemFromStash","rightLabel":"Class-Function","type":"method","description":"Drops the selected item out of this unit's stash.","leftLabel":"void","snippet":"EjectItemFromStash(${1:handle hItem})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.EjectItemFromStash"},{"displayText":"CDOTA_BaseNPC:FadeGesture","name":"FadeGesture","rightLabel":"Class-Function","type":"method","description":"Fade and remove the given gesture activity.","leftLabel":"void","snippet":"FadeGesture(${1:int nActivity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.FadeGesture"},{"displayText":"CDOTA_BaseNPC:FindAbilityByName","name":"FindAbilityByName","rightLabel":"Class-Function","type":"method","description":"Retrieve an ability by name from the unit.","leftLabel":"handle","snippet":"FindAbilityByName(${1:string pAbilityName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.FindAbilityByName"},{"displayText":"CDOTA_BaseNPC:FindAllModifiers","name":"FindAllModifiers","rightLabel":"Class-Function","type":"method","description":"Returns a table of all of the modifiers on the NPC.","leftLabel":"table","snippet":"FindAllModifiers()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.FindAllModifiers"},{"displayText":"CDOTA_BaseNPC:FindAllModifiersByName","name":"FindAllModifiersByName","rightLabel":"Class-Function","type":"method","description":"Returns a table of all of the modifiers on the NPC with the passed name (modifierName)","leftLabel":"table","snippet":"FindAllModifiersByName(${1:string pszScriptName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.FindAllModifiersByName"},{"displayText":"CDOTA_BaseNPC:FindModifierByName","name":"FindModifierByName","rightLabel":"Class-Function","type":"method","description":"Return a handle to the modifier of the given name if found, else nil (string Name )","leftLabel":"handle","snippet":"FindModifierByName(${1:string pszScriptName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.FindModifierByName"},{"displayText":"CDOTA_BaseNPC:FindModifierByNameAndCaster","name":"FindModifierByNameAndCaster","rightLabel":"Class-Function","type":"method","description":"Return a handle to the modifier of the given name from the passed caster if found, else nil ( string Name, hCaster )","leftLabel":"handle","snippet":"FindModifierByNameAndCaster(${1:string pszScriptName},${2:handle hCaster})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.FindModifierByNameAndCaster"},{"displayText":"CDOTA_BaseNPC:ForceKill","name":"ForceKill","rightLabel":"Class-Function","type":"method","description":"Kill this unit immediately.","leftLabel":"void","snippet":"ForceKill(${1:bool bReincarnate})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.ForceKill"},{"displayText":"CDOTA_BaseNPC:ForcePlayActivityOnce","name":"ForcePlayActivityOnce","rightLabel":"Class-Function","type":"method","description":"Play an activity once, and then go back to idle.","leftLabel":"void","snippet":"ForcePlayActivityOnce(${1:int nActivity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.ForcePlayActivityOnce"},{"displayText":"CDOTA_BaseNPC:GetAbilityByIndex","name":"GetAbilityByIndex","rightLabel":"Class-Function","type":"method","description":"Retrieve an ability by index from the unit.","leftLabel":"handle","snippet":"GetAbilityByIndex(${1:int iIndex})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAbilityByIndex"},{"displayText":"CDOTA_BaseNPC:GetAbilityCount","name":"GetAbilityCount","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetAbilityCount()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAbilityCount"},{"displayText":"CDOTA_BaseNPC:GetAcquisitionRange","name":"GetAcquisitionRange","rightLabel":"Class-Function","type":"method","description":"Gets the range at which this unit will auto-acquire.","leftLabel":"float","snippet":"GetAcquisitionRange()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAcquisitionRange"},{"displayText":"CDOTA_BaseNPC:GetAdditionalBattleMusicWeight","name":"GetAdditionalBattleMusicWeight","rightLabel":"Class-Function","type":"method","description":"Combat involving this creature will have this weight added to the music calcuations.","leftLabel":"float","snippet":"GetAdditionalBattleMusicWeight()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAdditionalBattleMusicWeight"},{"displayText":"CDOTA_BaseNPC:GetAggroTarget","name":"GetAggroTarget","rightLabel":"Class-Function","type":"method","description":"Returns this unit's aggro target.","leftLabel":"handle","snippet":"GetAggroTarget()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAggroTarget"},{"displayText":"CDOTA_BaseNPC:GetAttackAnimationPoint","name":"GetAttackAnimationPoint","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetAttackAnimationPoint()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttackAnimationPoint"},{"displayText":"CDOTA_BaseNPC:GetAttackCapability","name":"GetAttackCapability","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetAttackCapability()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttackCapability"},{"displayText":"CDOTA_BaseNPC:GetAttackDamage","name":"GetAttackDamage","rightLabel":"Class-Function","type":"method","description":"Returns a random integer between the minimum and maximum base damage of the unit.","leftLabel":"int","snippet":"GetAttackDamage()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttackDamage"},{"displayText":"CDOTA_BaseNPC:GetAttackRange","name":"GetAttackRange","rightLabel":"Class-Function","type":"method","description":"Gets this unit's attack range after all modifiers.","leftLabel":"float","snippet":"GetAttackRange()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttackRange"},{"displayText":"CDOTA_BaseNPC:GetAttackRangeBuffer","name":"GetAttackRangeBuffer","rightLabel":"Class-Function","type":"method","description":"Gets the attack range buffer.","leftLabel":"float","snippet":"GetAttackRangeBuffer()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttackRangeBuffer"},{"displayText":"CDOTA_BaseNPC:GetAttackSpeed","name":"GetAttackSpeed","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetAttackSpeed()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttackSpeed"},{"displayText":"CDOTA_BaseNPC:GetAttackTarget","name":"GetAttackTarget","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"handle","snippet":"GetAttackTarget()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttackTarget"},{"displayText":"CDOTA_BaseNPC:GetAttacksPerSecond","name":"GetAttacksPerSecond","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetAttacksPerSecond()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAttacksPerSecond"},{"displayText":"CDOTA_BaseNPC:GetAverageTrueAttackDamage","name":"GetAverageTrueAttackDamage","rightLabel":"Class-Function","type":"method","description":"Returns the average value of the minimum and maximum damage values.","leftLabel":"int","snippet":"GetAverageTrueAttackDamage(${1:handle hTarget})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetAverageTrueAttackDamage"},{"displayText":"CDOTA_BaseNPC:GetBaseAttackTime","name":"GetBaseAttackTime","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetBaseAttackTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseAttackTime"},{"displayText":"CDOTA_BaseNPC:GetBaseDamageMax","name":"GetBaseDamageMax","rightLabel":"Class-Function","type":"method","description":"Get the maximum attack damage of this unit.","leftLabel":"int","snippet":"GetBaseDamageMax()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseDamageMax"},{"displayText":"CDOTA_BaseNPC:GetBaseDamageMin","name":"GetBaseDamageMin","rightLabel":"Class-Function","type":"method","description":"Get the minimum attack damage of this unit.","leftLabel":"int","snippet":"GetBaseDamageMin()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseDamageMin"},{"displayText":"CDOTA_BaseNPC:GetBaseDayTimeVisionRange","name":"GetBaseDayTimeVisionRange","rightLabel":"Class-Function","type":"method","description":"Returns the vision range before modifiers.","leftLabel":"int","snippet":"GetBaseDayTimeVisionRange()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseDayTimeVisionRange"},{"displayText":"CDOTA_BaseNPC:GetBaseHealthRegen","name":"GetBaseHealthRegen","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetBaseHealthRegen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseHealthRegen"},{"displayText":"CDOTA_BaseNPC:GetBaseMagicalResistanceValue","name":"GetBaseMagicalResistanceValue","rightLabel":"Class-Function","type":"method","description":"Returns base magical armor value.","leftLabel":"float","snippet":"GetBaseMagicalResistanceValue()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseMagicalResistanceValue"},{"displayText":"CDOTA_BaseNPC:GetBaseMaxHealth","name":"GetBaseMaxHealth","rightLabel":"Class-Function","type":"method","description":"Gets the base max health value.","leftLabel":"float","snippet":"GetBaseMaxHealth()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseMaxHealth"},{"displayText":"CDOTA_BaseNPC:GetBaseMoveSpeed","name":"GetBaseMoveSpeed","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetBaseMoveSpeed()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseMoveSpeed"},{"displayText":"CDOTA_BaseNPC:GetBaseNightTimeVisionRange","name":"GetBaseNightTimeVisionRange","rightLabel":"Class-Function","type":"method","description":"Returns the vision range after modifiers.","leftLabel":"int","snippet":"GetBaseNightTimeVisionRange()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetBaseNightTimeVisionRange"},{"displayText":"CDOTA_BaseNPC:GetCastPoint","name":"GetCastPoint","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetCastPoint(${1:bool bAttack})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCastPoint"},{"displayText":"CDOTA_BaseNPC:GetCloneSource","name":"GetCloneSource","rightLabel":"Class-Function","type":"method","description":"Get clone source (Meepo Prime, if this is a Meepo)","leftLabel":"handle","snippet":"GetCloneSource()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCloneSource"},{"displayText":"CDOTA_BaseNPC:GetCollisionPadding","name":"GetCollisionPadding","rightLabel":"Class-Function","type":"method","description":"Returns the size of the collision padding around the hull.","leftLabel":"float","snippet":"GetCollisionPadding()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCollisionPadding"},{"displayText":"CDOTA_BaseNPC:GetConstantBasedManaRegen","name":"GetConstantBasedManaRegen","rightLabel":"Class-Function","type":"method","description":"This Mana regen is derived from constant bonuses like Basilius.","leftLabel":"float","snippet":"GetConstantBasedManaRegen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetConstantBasedManaRegen"},{"displayText":"CDOTA_BaseNPC:GetCreationTime","name":"GetCreationTime","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetCreationTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCreationTime"},{"displayText":"CDOTA_BaseNPC:GetCurrentActiveAbility","name":"GetCurrentActiveAbility","rightLabel":"Class-Function","type":"method","description":"Get the ability this unit is currently casting.","leftLabel":"handle","snippet":"GetCurrentActiveAbility()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCurrentActiveAbility"},{"displayText":"CDOTA_BaseNPC:GetCurrentVisionRange","name":"GetCurrentVisionRange","rightLabel":"Class-Function","type":"method","description":"Gets the current vision range.","leftLabel":"int","snippet":"GetCurrentVisionRange()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCurrentVisionRange"},{"displayText":"CDOTA_BaseNPC:GetCursorCastTarget","name":"GetCursorCastTarget","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"handle","snippet":"GetCursorCastTarget()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCursorCastTarget"},{"displayText":"CDOTA_BaseNPC:GetCursorPosition","name":"GetCursorPosition","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"Vector","snippet":"GetCursorPosition()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCursorPosition"},{"displayText":"CDOTA_BaseNPC:GetCursorTargetingNothing","name":"GetCursorTargetingNothing","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"GetCursorTargetingNothing()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetCursorTargetingNothing"},{"displayText":"CDOTA_BaseNPC:GetDayTimeVisionRange","name":"GetDayTimeVisionRange","rightLabel":"Class-Function","type":"method","description":"Returns the vision range after modifiers.","leftLabel":"int","snippet":"GetDayTimeVisionRange()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetDayTimeVisionRange"},{"displayText":"CDOTA_BaseNPC:GetDeathXP","name":"GetDeathXP","rightLabel":"Class-Function","type":"method","description":"Get the XP bounty on this unit.","leftLabel":"int","snippet":"GetDeathXP()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetDeathXP"},{"displayText":"CDOTA_BaseNPC:GetForceAttackTarget","name":"GetForceAttackTarget","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"handle","snippet":"GetForceAttackTarget()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetForceAttackTarget"},{"displayText":"CDOTA_BaseNPC:GetGoldBounty","name":"GetGoldBounty","rightLabel":"Class-Function","type":"method","description":"Get the gold bounty on this unit.","leftLabel":"int","snippet":"GetGoldBounty()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetGoldBounty"},{"displayText":"CDOTA_BaseNPC:GetHasteFactor","name":"GetHasteFactor","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetHasteFactor()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetHasteFactor"},{"displayText":"CDOTA_BaseNPC:GetHealthDeficit","name":"GetHealthDeficit","rightLabel":"Class-Function","type":"method","description":"Returns integer amount of health missing from max.","leftLabel":"int","snippet":"GetHealthDeficit()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetHealthDeficit"},{"displayText":"CDOTA_BaseNPC:GetHealthPercent","name":"GetHealthPercent","rightLabel":"Class-Function","type":"method","description":"Get the current health percent of the unit.","leftLabel":"int","snippet":"GetHealthPercent()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetHealthPercent"},{"displayText":"CDOTA_BaseNPC:GetHealthRegen","name":"GetHealthRegen","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetHealthRegen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetHealthRegen"},{"displayText":"CDOTA_BaseNPC:GetHullRadius","name":"GetHullRadius","rightLabel":"Class-Function","type":"method","description":"Get the collision hull radius of this NPC.","leftLabel":"float","snippet":"GetHullRadius()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetHullRadius"},{"displayText":"CDOTA_BaseNPC:GetIdealSpeed","name":"GetIdealSpeed","rightLabel":"Class-Function","type":"method","description":"Returns speed after all modifiers.","leftLabel":"float","snippet":"GetIdealSpeed()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetIdealSpeed"},{"displayText":"CDOTA_BaseNPC:GetIncreasedAttackSpeed","name":"GetIncreasedAttackSpeed","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetIncreasedAttackSpeed()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetIncreasedAttackSpeed"},{"displayText":"CDOTA_BaseNPC:GetInitialGoalEntity","name":"GetInitialGoalEntity","rightLabel":"Class-Function","type":"method","description":"Returns the initial waypoint goal for this NPC.","leftLabel":"handle","snippet":"GetInitialGoalEntity()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetInitialGoalEntity"},{"displayText":"CDOTA_BaseNPC:GetItemInSlot","name":"GetItemInSlot","rightLabel":"Class-Function","type":"method","description":"Returns nth item in inventory slot (index is zero based).","leftLabel":"handle","snippet":"GetItemInSlot(${1:int i})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetItemInSlot"},{"displayText":"CDOTA_BaseNPC:GetLastAttackTime","name":"GetLastAttackTime","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetLastAttackTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetLastAttackTime"},{"displayText":"CDOTA_BaseNPC:GetLastIdleChangeTime","name":"GetLastIdleChangeTime","rightLabel":"Class-Function","type":"method","description":"Get the last game time that this unit switched to/from idle state.","leftLabel":"float","snippet":"GetLastIdleChangeTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetLastIdleChangeTime"},{"displayText":"CDOTA_BaseNPC:GetLevel","name":"GetLevel","rightLabel":"Class-Function","type":"method","description":"Returns the level of this unit.","leftLabel":"int","snippet":"GetLevel()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetLevel"},{"displayText":"CDOTA_BaseNPC:GetMagicalArmorValue","name":"GetMagicalArmorValue","rightLabel":"Class-Function","type":"method","description":"Returns current magical armor value.","leftLabel":"float","snippet":"GetMagicalArmorValue()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMagicalArmorValue"},{"displayText":"CDOTA_BaseNPC:GetMainControllingPlayer","name":"GetMainControllingPlayer","rightLabel":"Class-Function","type":"method","description":"Returns the player ID of the controlling player.","leftLabel":"int","snippet":"GetMainControllingPlayer()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMainControllingPlayer"},{"displayText":"CDOTA_BaseNPC:GetMana","name":"GetMana","rightLabel":"Class-Function","type":"method","description":"Get the mana on this unit.","leftLabel":"float","snippet":"GetMana()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMana"},{"displayText":"CDOTA_BaseNPC:GetManaPercent","name":"GetManaPercent","rightLabel":"Class-Function","type":"method","description":"Get the percent of mana remaining.","leftLabel":"int","snippet":"GetManaPercent()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetManaPercent"},{"displayText":"CDOTA_BaseNPC:GetManaRegen","name":"GetManaRegen","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetManaRegen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetManaRegen"},{"displayText":"CDOTA_BaseNPC:GetMaxMana","name":"GetMaxMana","rightLabel":"Class-Function","type":"method","description":"Get the maximum mana of this unit.","leftLabel":"float","snippet":"GetMaxMana()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMaxMana"},{"displayText":"CDOTA_BaseNPC:GetMaximumGoldBounty","name":"GetMaximumGoldBounty","rightLabel":"Class-Function","type":"method","description":"Get the maximum gold bounty for this unit.","leftLabel":"int","snippet":"GetMaximumGoldBounty()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMaximumGoldBounty"},{"displayText":"CDOTA_BaseNPC:GetMinimumGoldBounty","name":"GetMinimumGoldBounty","rightLabel":"Class-Function","type":"method","description":"Get the minimum gold bounty for this unit.","leftLabel":"int","snippet":"GetMinimumGoldBounty()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMinimumGoldBounty"},{"displayText":"CDOTA_BaseNPC:GetModelRadius","name":"GetModelRadius","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetModelRadius()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetModelRadius"},{"displayText":"CDOTA_BaseNPC:GetModifierCount","name":"GetModifierCount","rightLabel":"Class-Function","type":"method","description":"How many modifiers does this unit have?","leftLabel":"int","snippet":"GetModifierCount()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetModifierCount"},{"displayText":"CDOTA_BaseNPC:GetModifierNameByIndex","name":"GetModifierNameByIndex","rightLabel":"Class-Function","type":"method","description":"Get a modifier name by index.","leftLabel":"string","snippet":"GetModifierNameByIndex(${1:int nIndex})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetModifierNameByIndex"},{"displayText":"CDOTA_BaseNPC:GetModifierStackCount","name":"GetModifierStackCount","rightLabel":"Class-Function","type":"method","description":"Gets the stack count of a given modifier.","leftLabel":"int","snippet":"GetModifierStackCount(${1:string pszScriptName},${2:handle hCaster})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetModifierStackCount"},{"displayText":"CDOTA_BaseNPC:GetMoveSpeedModifier","name":"GetMoveSpeedModifier","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetMoveSpeedModifier(${1:float flBaseSpeed})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMoveSpeedModifier"},{"displayText":"CDOTA_BaseNPC:GetMustReachEachGoalEntity","name":"GetMustReachEachGoalEntity","rightLabel":"Class-Function","type":"method","description":"Set whether this NPC is required to reach each goal entity, rather than being allowed to unkink their path.","leftLabel":"bool","snippet":"GetMustReachEachGoalEntity()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetMustReachEachGoalEntity"},{"displayText":"CDOTA_BaseNPC:GetNeverMoveToClearSpace","name":"GetNeverMoveToClearSpace","rightLabel":"Class-Function","type":"method","description":"If set to true, we will never attempt to move this unit to clear space, even when it unphases.","leftLabel":"bool","snippet":"GetNeverMoveToClearSpace()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetNeverMoveToClearSpace"},{"displayText":"CDOTA_BaseNPC:GetNightTimeVisionRange","name":"GetNightTimeVisionRange","rightLabel":"Class-Function","type":"method","description":"Returns the vision range after modifiers.","leftLabel":"int","snippet":"GetNightTimeVisionRange()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetNightTimeVisionRange"},{"displayText":"CDOTA_BaseNPC:GetOpposingTeamNumber","name":"GetOpposingTeamNumber","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetOpposingTeamNumber()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetOpposingTeamNumber"},{"displayText":"CDOTA_BaseNPC:GetPaddedCollisionRadius","name":"GetPaddedCollisionRadius","rightLabel":"Class-Function","type":"method","description":"Get the collision hull radius (including padding) of this NPC.","leftLabel":"float","snippet":"GetPaddedCollisionRadius()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetPaddedCollisionRadius"},{"displayText":"CDOTA_BaseNPC:GetPercentageBasedManaRegen","name":"GetPercentageBasedManaRegen","rightLabel":"Class-Function","type":"method","description":"This Mana regen is derived from % bonuses (from items like Void Stone).","leftLabel":"float","snippet":"GetPercentageBasedManaRegen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetPercentageBasedManaRegen"},{"displayText":"CDOTA_BaseNPC:GetPhysicalArmorBaseValue","name":"GetPhysicalArmorBaseValue","rightLabel":"Class-Function","type":"method","description":"Returns base physical armor value.","leftLabel":"float","snippet":"GetPhysicalArmorBaseValue()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetPhysicalArmorBaseValue"},{"displayText":"CDOTA_BaseNPC:GetPhysicalArmorValue","name":"GetPhysicalArmorValue","rightLabel":"Class-Function","type":"method","description":"Returns current physical armor value.","leftLabel":"float","snippet":"GetPhysicalArmorValue()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetPhysicalArmorValue"},{"displayText":"CDOTA_BaseNPC:GetPlayerOwner","name":"GetPlayerOwner","rightLabel":"Class-Function","type":"method","description":"Returns the player that owns this unit.","leftLabel":"handle","snippet":"GetPlayerOwner()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetPlayerOwner"},{"displayText":"CDOTA_BaseNPC:GetPlayerOwnerID","name":"GetPlayerOwnerID","rightLabel":"Class-Function","type":"method","description":"Get the owner player ID for this unit.","leftLabel":"int","snippet":"GetPlayerOwnerID()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetPlayerOwnerID"},{"displayText":"CDOTA_BaseNPC:GetProjectileSpeed","name":"GetProjectileSpeed","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetProjectileSpeed()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetProjectileSpeed"},{"displayText":"CDOTA_BaseNPC:GetRangeToUnit","name":"GetRangeToUnit","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetRangeToUnit(${1:handle hNPC})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetRangeToUnit"},{"displayText":"CDOTA_BaseNPC:GetSecondsPerAttack","name":"GetSecondsPerAttack","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetSecondsPerAttack()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetSecondsPerAttack"},{"displayText":"CDOTA_BaseNPC:GetStatsBasedManaRegen","name":"GetStatsBasedManaRegen","rightLabel":"Class-Function","type":"method","description":"Returns mana regen rate per intelligence.","leftLabel":"float","snippet":"GetStatsBasedManaRegen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetStatsBasedManaRegen"},{"displayText":"CDOTA_BaseNPC:GetTotalPurchasedUpgradeGoldCost","name":"GetTotalPurchasedUpgradeGoldCost","rightLabel":"Class-Function","type":"method","description":"Get how much gold has been spent on ability upgrades.","leftLabel":"int","snippet":"GetTotalPurchasedUpgradeGoldCost()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetTotalPurchasedUpgradeGoldCost"},{"displayText":"CDOTA_BaseNPC:GetUnitLabel","name":"GetUnitLabel","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"string","snippet":"GetUnitLabel()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetUnitLabel"},{"displayText":"CDOTA_BaseNPC:GetUnitName","name":"GetUnitName","rightLabel":"Class-Function","type":"method","description":"Get the name of this unit.","leftLabel":"string","snippet":"GetUnitName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GetUnitName"},{"displayText":"CDOTA_BaseNPC:GiveMana","name":"GiveMana","rightLabel":"Class-Function","type":"method","description":"Give mana to this unit, this can be used for mana gained by abilities or item usage.","leftLabel":"void","snippet":"GiveMana(${1:float flMana})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.GiveMana"},{"displayText":"CDOTA_BaseNPC:HasAbility","name":"HasAbility","rightLabel":"Class-Function","type":"method","description":"See whether this unit has an ability by name.","leftLabel":"bool","snippet":"HasAbility(${1:string pszAbilityName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasAbility"},{"displayText":"CDOTA_BaseNPC:HasAnyActiveAbilities","name":"HasAnyActiveAbilities","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"HasAnyActiveAbilities()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasAnyActiveAbilities"},{"displayText":"CDOTA_BaseNPC:HasAttackCapability","name":"HasAttackCapability","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"HasAttackCapability()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasAttackCapability"},{"displayText":"CDOTA_BaseNPC:HasFlyMovementCapability","name":"HasFlyMovementCapability","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"HasFlyMovementCapability()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasFlyMovementCapability"},{"displayText":"CDOTA_BaseNPC:HasFlyingVision","name":"HasFlyingVision","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"HasFlyingVision()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasFlyingVision"},{"displayText":"CDOTA_BaseNPC:HasGroundMovementCapability","name":"HasGroundMovementCapability","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"HasGroundMovementCapability()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasGroundMovementCapability"},{"displayText":"CDOTA_BaseNPC:HasInventory","name":"HasInventory","rightLabel":"Class-Function","type":"method","description":"Does this unit have an inventory.","leftLabel":"bool","snippet":"HasInventory()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasInventory"},{"displayText":"CDOTA_BaseNPC:HasItemInInventory","name":"HasItemInInventory","rightLabel":"Class-Function","type":"method","description":"See whether this unit has an item by name.","leftLabel":"bool","snippet":"HasItemInInventory(${1:string pItemName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasItemInInventory"},{"displayText":"CDOTA_BaseNPC:HasModifier","name":"HasModifier","rightLabel":"Class-Function","type":"method","description":"Sees if this unit has a given modifier.","leftLabel":"bool","snippet":"HasModifier(${1:string pszScriptName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasModifier"},{"displayText":"CDOTA_BaseNPC:HasMovementCapability","name":"HasMovementCapability","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"HasMovementCapability()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasMovementCapability"},{"displayText":"CDOTA_BaseNPC:HasScepter","name":"HasScepter","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"HasScepter()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.HasScepter"},{"displayText":"CDOTA_BaseNPC:Heal","name":"Heal","rightLabel":"Class-Function","type":"method","description":"Heal this unit.","leftLabel":"void","snippet":"Heal(${1:float flAmount},${2:handle hInflictor})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.Heal"},{"displayText":"CDOTA_BaseNPC:Hold","name":"Hold","rightLabel":"Class-Function","type":"method","description":"Hold position.","leftLabel":"void","snippet":"Hold()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.Hold"},{"displayText":"CDOTA_BaseNPC:Interrupt","name":"Interrupt","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"Interrupt()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.Interrupt"},{"displayText":"CDOTA_BaseNPC:InterruptChannel","name":"InterruptChannel","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"InterruptChannel()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.InterruptChannel"},{"displayText":"CDOTA_BaseNPC:InterruptMotionControllers","name":"InterruptMotionControllers","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"InterruptMotionControllers(${1:bool bFindClearSpace})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.InterruptMotionControllers"},{"displayText":"CDOTA_BaseNPC:IsAlive","name":"IsAlive","rightLabel":"Class-Function","type":"method","description":"Is this unit alive?","leftLabel":"bool","snippet":"IsAlive()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsAlive"},{"displayText":"CDOTA_BaseNPC:IsAncient","name":"IsAncient","rightLabel":"Class-Function","type":"method","description":"Is this unit an Ancient?","leftLabel":"bool","snippet":"IsAncient()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsAncient"},{"displayText":"CDOTA_BaseNPC:IsAttackImmune","name":"IsAttackImmune","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsAttackImmune()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsAttackImmune"},{"displayText":"CDOTA_BaseNPC:IsAttacking","name":"IsAttacking","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsAttacking()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsAttacking"},{"displayText":"CDOTA_BaseNPC:IsAttackingEntity","name":"IsAttackingEntity","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsAttackingEntity(${1:handle hEntity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsAttackingEntity"},{"displayText":"CDOTA_BaseNPC:IsBarracks","name":"IsBarracks","rightLabel":"Class-Function","type":"method","description":"Is this unit a Barracks?","leftLabel":"bool","snippet":"IsBarracks()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsBarracks"},{"displayText":"CDOTA_BaseNPC:IsBlind","name":"IsBlind","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsBlind()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsBlind"},{"displayText":"CDOTA_BaseNPC:IsBlockDisabled","name":"IsBlockDisabled","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsBlockDisabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsBlockDisabled"},{"displayText":"CDOTA_BaseNPC:IsBoss","name":"IsBoss","rightLabel":"Class-Function","type":"method","description":"Is this unit a boss?","leftLabel":"bool","snippet":"IsBoss()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsBoss"},{"displayText":"CDOTA_BaseNPC:IsBuilding","name":"IsBuilding","rightLabel":"Class-Function","type":"method","description":"Is this unit a building?","leftLabel":"bool","snippet":"IsBuilding()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsBuilding"},{"displayText":"CDOTA_BaseNPC:IsChanneling","name":"IsChanneling","rightLabel":"Class-Function","type":"method","description":"Is this unit currently channeling a spell?","leftLabel":"bool","snippet":"IsChanneling()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsChanneling"},{"displayText":"CDOTA_BaseNPC:IsClone","name":"IsClone","rightLabel":"Class-Function","type":"method","description":"Is this unit a clone? (Meepo)","leftLabel":"bool","snippet":"IsClone()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsClone"},{"displayText":"CDOTA_BaseNPC:IsCommandRestricted","name":"IsCommandRestricted","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsCommandRestricted()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsCommandRestricted"},{"displayText":"CDOTA_BaseNPC:IsConsideredHero","name":"IsConsideredHero","rightLabel":"Class-Function","type":"method","description":"Is this unit a considered a hero for targeting purposes?","leftLabel":"bool","snippet":"IsConsideredHero()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsConsideredHero"},{"displayText":"CDOTA_BaseNPC:IsControllableByAnyPlayer","name":"IsControllableByAnyPlayer","rightLabel":"Class-Function","type":"method","description":"Is this unit controlled by any non-bot player?","leftLabel":"bool","snippet":"IsControllableByAnyPlayer()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsControllableByAnyPlayer"},{"displayText":"CDOTA_BaseNPC:IsCourier","name":"IsCourier","rightLabel":"Class-Function","type":"method","description":"Is this unit a courier?","leftLabel":"bool","snippet":"IsCourier()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsCourier"},{"displayText":"CDOTA_BaseNPC:IsCreature","name":"IsCreature","rightLabel":"Class-Function","type":"method","description":"Is this a Creature type NPC?","leftLabel":"bool","snippet":"IsCreature()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsCreature"},{"displayText":"CDOTA_BaseNPC:IsCreep","name":"IsCreep","rightLabel":"Class-Function","type":"method","description":"Is this unit a creep?","leftLabel":"bool","snippet":"IsCreep()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsCreep"},{"displayText":"CDOTA_BaseNPC:IsDeniable","name":"IsDeniable","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsDeniable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsDeniable"},{"displayText":"CDOTA_BaseNPC:IsDisarmed","name":"IsDisarmed","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsDisarmed()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsDisarmed"},{"displayText":"CDOTA_BaseNPC:IsDominated","name":"IsDominated","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsDominated()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsDominated"},{"displayText":"CDOTA_BaseNPC:IsEvadeDisabled","name":"IsEvadeDisabled","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsEvadeDisabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsEvadeDisabled"},{"displayText":"CDOTA_BaseNPC:IsFort","name":"IsFort","rightLabel":"Class-Function","type":"method","description":"Is this unit an Ancient?","leftLabel":"bool","snippet":"IsFort()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsFort"},{"displayText":"CDOTA_BaseNPC:IsFrozen","name":"IsFrozen","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsFrozen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsFrozen"},{"displayText":"CDOTA_BaseNPC:IsHero","name":"IsHero","rightLabel":"Class-Function","type":"method","description":"Is this a hero or hero illusion?","leftLabel":"bool","snippet":"IsHero()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsHero"},{"displayText":"CDOTA_BaseNPC:IsHexed","name":"IsHexed","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsHexed()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsHexed"},{"displayText":"CDOTA_BaseNPC:IsIdle","name":"IsIdle","rightLabel":"Class-Function","type":"method","description":"Is this creature currently idle?","leftLabel":"bool","snippet":"IsIdle()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsIdle"},{"displayText":"CDOTA_BaseNPC:IsIllusion","name":"IsIllusion","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsIllusion()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsIllusion"},{"displayText":"CDOTA_BaseNPC:IsInvisible","name":"IsInvisible","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsInvisible()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsInvisible"},{"displayText":"CDOTA_BaseNPC:IsInvulnerable","name":"IsInvulnerable","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsInvulnerable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsInvulnerable"},{"displayText":"CDOTA_BaseNPC:IsLowAttackPriority","name":"IsLowAttackPriority","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsLowAttackPriority()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsLowAttackPriority"},{"displayText":"CDOTA_BaseNPC:IsMagicImmune","name":"IsMagicImmune","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsMagicImmune()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsMagicImmune"},{"displayText":"CDOTA_BaseNPC:IsMovementImpaired","name":"IsMovementImpaired","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsMovementImpaired()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsMovementImpaired"},{"displayText":"CDOTA_BaseNPC:IsMoving","name":"IsMoving","rightLabel":"Class-Function","type":"method","description":"Is this unit moving?","leftLabel":"bool","snippet":"IsMoving()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsMoving"},{"displayText":"CDOTA_BaseNPC:IsMuted","name":"IsMuted","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsMuted()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsMuted"},{"displayText":"CDOTA_BaseNPC:IsNeutralUnitType","name":"IsNeutralUnitType","rightLabel":"Class-Function","type":"method","description":"Is this a neutral?","leftLabel":"bool","snippet":"IsNeutralUnitType()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsNeutralUnitType"},{"displayText":"CDOTA_BaseNPC:IsNightmared","name":"IsNightmared","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsNightmared()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsNightmared"},{"displayText":"CDOTA_BaseNPC:IsOpposingTeam","name":"IsOpposingTeam","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsOpposingTeam(${1:int nTeam})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsOpposingTeam"},{"displayText":"CDOTA_BaseNPC:IsOther","name":"IsOther","rightLabel":"Class-Function","type":"method","description":"Is this unit a ward-type unit?","leftLabel":"bool","snippet":"IsOther()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsOther"},{"displayText":"CDOTA_BaseNPC:IsOutOfGame","name":"IsOutOfGame","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsOutOfGame()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsOutOfGame"},{"displayText":"CDOTA_BaseNPC:IsOwnedByAnyPlayer","name":"IsOwnedByAnyPlayer","rightLabel":"Class-Function","type":"method","description":"Is this unit owned by any non-bot player?","leftLabel":"bool","snippet":"IsOwnedByAnyPlayer()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsOwnedByAnyPlayer"},{"displayText":"CDOTA_BaseNPC:IsPhantom","name":"IsPhantom","rightLabel":"Class-Function","type":"method","description":"Is this a phantom unit?","leftLabel":"bool","snippet":"IsPhantom()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsPhantom"},{"displayText":"CDOTA_BaseNPC:IsPhantomBlocker","name":"IsPhantomBlocker","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsPhantomBlocker()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsPhantomBlocker"},{"displayText":"CDOTA_BaseNPC:IsPhased","name":"IsPhased","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsPhased()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsPhased"},{"displayText":"CDOTA_BaseNPC:IsPositionInRange","name":"IsPositionInRange","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsPositionInRange(${1:Vector vPosition},${2:float flRange})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsPositionInRange"},{"displayText":"CDOTA_BaseNPC:IsRangedAttacker","name":"IsRangedAttacker","rightLabel":"Class-Function","type":"method","description":"Is this unit a ranged attacker?","leftLabel":"bool","snippet":"IsRangedAttacker()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsRangedAttacker"},{"displayText":"CDOTA_BaseNPC:IsRealHero","name":"IsRealHero","rightLabel":"Class-Function","type":"method","description":"Is this a real hero?","leftLabel":"bool","snippet":"IsRealHero()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsRealHero"},{"displayText":"CDOTA_BaseNPC:IsRooted","name":"IsRooted","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsRooted()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsRooted"},{"displayText":"CDOTA_BaseNPC:IsSilenced","name":"IsSilenced","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsSilenced()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsSilenced"},{"displayText":"CDOTA_BaseNPC:IsSpeciallyDeniable","name":"IsSpeciallyDeniable","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsSpeciallyDeniable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsSpeciallyDeniable"},{"displayText":"CDOTA_BaseNPC:IsStunned","name":"IsStunned","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsStunned()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsStunned"},{"displayText":"CDOTA_BaseNPC:IsSummoned","name":"IsSummoned","rightLabel":"Class-Function","type":"method","description":"Is this unit summoned?","leftLabel":"bool","snippet":"IsSummoned()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsSummoned"},{"displayText":"CDOTA_BaseNPC:IsTower","name":"IsTower","rightLabel":"Class-Function","type":"method","description":"Is this a tower?","leftLabel":"bool","snippet":"IsTower()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsTower"},{"displayText":"CDOTA_BaseNPC:IsUnableToMiss","name":"IsUnableToMiss","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsUnableToMiss()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsUnableToMiss"},{"displayText":"CDOTA_BaseNPC:IsUnselectable","name":"IsUnselectable","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsUnselectable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.IsUnselectable"},{"displayText":"CDOTA_BaseNPC:Kill","name":"Kill","rightLabel":"Class-Function","type":"method","description":"Kills this NPC, with the params Ability and Attacker.","leftLabel":"void","snippet":"Kill(${1:handle hAbility},${2:handle hAttacker})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.Kill"},{"displayText":"CDOTA_BaseNPC:MakeIllusion","name":"MakeIllusion","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"MakeIllusion()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MakeIllusion"},{"displayText":"CDOTA_BaseNPC:MakePhantomBlocker","name":"MakePhantomBlocker","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"MakePhantomBlocker()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MakePhantomBlocker"},{"displayText":"CDOTA_BaseNPC:MakeVisibleDueToAttack","name":"MakeVisibleDueToAttack","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"MakeVisibleDueToAttack(${1:int iTeam})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MakeVisibleDueToAttack"},{"displayText":"CDOTA_BaseNPC:MakeVisibleToTeam","name":"MakeVisibleToTeam","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"MakeVisibleToTeam(${1:int iTeam},${2:float flDuration})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MakeVisibleToTeam"},{"displayText":"CDOTA_BaseNPC:ManageModelChanges","name":"ManageModelChanges","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"ManageModelChanges()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.ManageModelChanges"},{"displayText":"CDOTA_BaseNPC:ModifyHealth","name":"ModifyHealth","rightLabel":"Class-Function","type":"method","description":"Sets the health to a specific value, with optional flags or inflictors.","leftLabel":"void","snippet":"ModifyHealth(${1:int iDesiredHealthValue},${2:handle hAbility},${3:bool bLethal},${4:int iAdditionalFlags})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.ModifyHealth"},{"displayText":"CDOTA_BaseNPC:MoveToNPC","name":"MoveToNPC","rightLabel":"Class-Function","type":"method","description":"Move to follow a unit.","leftLabel":"void","snippet":"MoveToNPC(${1:handle hNPC})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MoveToNPC"},{"displayText":"CDOTA_BaseNPC:MoveToNPCToGiveItem","name":"MoveToNPCToGiveItem","rightLabel":"Class-Function","type":"method","description":"Give an item to another unit.","leftLabel":"void","snippet":"MoveToNPCToGiveItem(${1:handle hNPC},${2:handle hItem})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MoveToNPCToGiveItem"},{"displayText":"CDOTA_BaseNPC:MoveToPosition","name":"MoveToPosition","rightLabel":"Class-Function","type":"method","description":"Issue a Move-To command.","leftLabel":"void","snippet":"MoveToPosition(${1:Vector vDest})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MoveToPosition"},{"displayText":"CDOTA_BaseNPC:MoveToPositionAggressive","name":"MoveToPositionAggressive","rightLabel":"Class-Function","type":"method","description":"Issue an Attack-Move-To command.","leftLabel":"void","snippet":"MoveToPositionAggressive(${1:Vector vDest})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MoveToPositionAggressive"},{"displayText":"CDOTA_BaseNPC:MoveToTargetToAttack","name":"MoveToTargetToAttack","rightLabel":"Class-Function","type":"method","description":"Move to a target to attack.","leftLabel":"void","snippet":"MoveToTargetToAttack(${1:handle hTarget})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.MoveToTargetToAttack"},{"displayText":"CDOTA_BaseNPC:NoHealthBar","name":"NoHealthBar","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"NoHealthBar()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.NoHealthBar"},{"displayText":"CDOTA_BaseNPC:NoTeamMoveTo","name":"NoTeamMoveTo","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"NoTeamMoveTo()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.NoTeamMoveTo"},{"displayText":"CDOTA_BaseNPC:NoTeamSelect","name":"NoTeamSelect","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"NoTeamSelect()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.NoTeamSelect"},{"displayText":"CDOTA_BaseNPC:NoUnitCollision","name":"NoUnitCollision","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"NoUnitCollision()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.NoUnitCollision"},{"displayText":"CDOTA_BaseNPC:NotOnMinimap","name":"NotOnMinimap","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"NotOnMinimap()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.NotOnMinimap"},{"displayText":"CDOTA_BaseNPC:NotOnMinimapForEnemies","name":"NotOnMinimapForEnemies","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"NotOnMinimapForEnemies()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.NotOnMinimapForEnemies"},{"displayText":"CDOTA_BaseNPC:NotifyWearablesOfModelChange","name":"NotifyWearablesOfModelChange","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"NotifyWearablesOfModelChange(${1:bool bOriginalModel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.NotifyWearablesOfModelChange"},{"displayText":"CDOTA_BaseNPC:PassivesDisabled","name":"PassivesDisabled","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"PassivesDisabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.PassivesDisabled"},{"displayText":"CDOTA_BaseNPC:PatrolToPosition","name":"PatrolToPosition","rightLabel":"Class-Function","type":"method","description":"Issue a Patrol-To command.","leftLabel":"void","snippet":"PatrolToPosition(${1:Vector vDest})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.PatrolToPosition"},{"displayText":"CDOTA_BaseNPC:PerformAttack","name":"PerformAttack","rightLabel":"Class-Function","type":"method","description":"Performs an attack on a target.","leftLabel":"void","snippet":"PerformAttack(${1:handle hTarget},${2:bool bUseCastAttackOrb},${3:bool bProcessProcs},${4:bool bSkipCooldown},${5:bool bIgnoreInvis},${6:bool bUseProjectile})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.PerformAttack"},{"displayText":"CDOTA_BaseNPC:PickupDroppedItem","name":"PickupDroppedItem","rightLabel":"Class-Function","type":"method","description":"Pick up a dropped item.","leftLabel":"void","snippet":"PickupDroppedItem(${1:handle hItem})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.PickupDroppedItem"},{"displayText":"CDOTA_BaseNPC:PickupRune","name":"PickupRune","rightLabel":"Class-Function","type":"method","description":"Pick up a rune.","leftLabel":"void","snippet":"PickupRune(${1:handle hItem})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.PickupRune"},{"displayText":"CDOTA_BaseNPC:PlayVCD","name":"PlayVCD","rightLabel":"Class-Function","type":"method","description":"Play a VCD on the NPC.","leftLabel":"void","snippet":"PlayVCD(${1:string pVCD})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.PlayVCD"},{"displayText":"CDOTA_BaseNPC:ProvidesVision","name":"ProvidesVision","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"ProvidesVision()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.ProvidesVision"},{"displayText":"CDOTA_BaseNPC:Purge","name":"Purge","rightLabel":"Class-Function","type":"method","description":"(bool RemovePositiveBuffs, bool RemoveDebuffs, bool BuffsCreatedThisFrameOnly, bool RemoveStuns, bool RemoveExceptions","leftLabel":"void","snippet":"Purge(${1:bool bRemovePositiveBuffs},${2:bool bRemoveDebuffs},${3:bool bFrameOnly},${4:bool bRemoveStuns},${5:bool bRemoveExceptions})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.Purge"},{"displayText":"CDOTA_BaseNPC:ReduceMana","name":"ReduceMana","rightLabel":"Class-Function","type":"method","description":"Remove mana from this unit, this can be used for involuntary mana loss, not for mana that is spent.","leftLabel":"void","snippet":"ReduceMana(${1:float flAmount})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.ReduceMana"},{"displayText":"CDOTA_BaseNPC:RemoveAbility","name":"RemoveAbility","rightLabel":"Class-Function","type":"method","description":"Remove an ability from this unit by name.","leftLabel":"void","snippet":"RemoveAbility(${1:string pszAbilityName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RemoveAbility"},{"displayText":"CDOTA_BaseNPC:RemoveGesture","name":"RemoveGesture","rightLabel":"Class-Function","type":"method","description":"Remove the given gesture activity.","leftLabel":"void","snippet":"RemoveGesture(${1:int nActivity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RemoveGesture"},{"displayText":"CDOTA_BaseNPC:RemoveHorizontalMotionController","name":"RemoveHorizontalMotionController","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"RemoveHorizontalMotionController(${1:handle hBuff})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RemoveHorizontalMotionController"},{"displayText":"CDOTA_BaseNPC:RemoveItem","name":"RemoveItem","rightLabel":"Class-Function","type":"method","description":"Removes the passed item from this unit's inventory and deletes it.","leftLabel":"void","snippet":"RemoveItem(${1:handle hItem})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RemoveItem"},{"displayText":"CDOTA_BaseNPC:RemoveModifierByName","name":"RemoveModifierByName","rightLabel":"Class-Function","type":"method","description":"Removes a modifier.","leftLabel":"void","snippet":"RemoveModifierByName(${1:string pszScriptName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RemoveModifierByName"},{"displayText":"CDOTA_BaseNPC:RemoveModifierByNameAndCaster","name":"RemoveModifierByNameAndCaster","rightLabel":"Class-Function","type":"method","description":"Removes a modifier that was cast by the given caster.","leftLabel":"void","snippet":"RemoveModifierByNameAndCaster(${1:string pszScriptName},${2:handle hCaster})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RemoveModifierByNameAndCaster"},{"displayText":"CDOTA_BaseNPC:RemoveNoDraw","name":"RemoveNoDraw","rightLabel":"Class-Function","type":"method","description":"Remove the no draw flag.","leftLabel":"void","snippet":"RemoveNoDraw()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RemoveNoDraw"},{"displayText":"CDOTA_BaseNPC:RemoveVerticalMotionController","name":"RemoveVerticalMotionController","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"RemoveVerticalMotionController(${1:handle hBuff})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RemoveVerticalMotionController"},{"displayText":"CDOTA_BaseNPC:RespawnUnit","name":"RespawnUnit","rightLabel":"Class-Function","type":"method","description":"Respawns the target unit if it can be respawned.","leftLabel":"void","snippet":"RespawnUnit()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.RespawnUnit"},{"displayText":"CDOTA_BaseNPC:SellItem","name":"SellItem","rightLabel":"Class-Function","type":"method","description":"Sells the passed item in this unit's inventory.","leftLabel":"void","snippet":"SellItem(${1:handle hItem})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SellItem"},{"displayText":"CDOTA_BaseNPC:SetAbilityByIndex","name":"SetAbilityByIndex","rightLabel":"Class-Function","type":"method","description":"Set the ability by index.","leftLabel":"void","snippet":"SetAbilityByIndex(${1:handle hAbility},${2:int iIndex})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetAbilityByIndex"},{"displayText":"CDOTA_BaseNPC:SetAcquisitionRange","name":"SetAcquisitionRange","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetAcquisitionRange(${1:int nRange})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetAcquisitionRange"},{"displayText":"CDOTA_BaseNPC:SetAdditionalBattleMusicWeight","name":"SetAdditionalBattleMusicWeight","rightLabel":"Class-Function","type":"method","description":"Combat involving this creature will have this weight added to the music calcuations.","leftLabel":"void","snippet":"SetAdditionalBattleMusicWeight(${1:float flWeight})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetAdditionalBattleMusicWeight"},{"displayText":"CDOTA_BaseNPC:SetAggroTarget","name":"SetAggroTarget","rightLabel":"Class-Function","type":"method","description":"Set this unit's aggro target to a specified unit.","leftLabel":"void","snippet":"SetAggroTarget(${1:handle hAggroTarget})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetAggroTarget"},{"displayText":"CDOTA_BaseNPC:SetAttackCapability","name":"SetAttackCapability","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetAttackCapability(${1:int iAttackCapabilities})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetAttackCapability"},{"displayText":"CDOTA_BaseNPC:SetAttacking","name":"SetAttacking","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetAttacking(${1:handle hAttackTarget})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetAttacking"},{"displayText":"CDOTA_BaseNPC:SetBaseAttackTime","name":"SetBaseAttackTime","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetBaseAttackTime(${1:float flBaseAttackTime})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseAttackTime"},{"displayText":"CDOTA_BaseNPC:SetBaseDamageMax","name":"SetBaseDamageMax","rightLabel":"Class-Function","type":"method","description":"Sets the maximum base damage.","leftLabel":"void","snippet":"SetBaseDamageMax(${1:int nMax})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseDamageMax"},{"displayText":"CDOTA_BaseNPC:SetBaseDamageMin","name":"SetBaseDamageMin","rightLabel":"Class-Function","type":"method","description":"Sets the minimum base damage.","leftLabel":"void","snippet":"SetBaseDamageMin(${1:int nMin})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseDamageMin"},{"displayText":"CDOTA_BaseNPC:SetBaseHealthRegen","name":"SetBaseHealthRegen","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetBaseHealthRegen(${1:float flHealthRegen})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseHealthRegen"},{"displayText":"CDOTA_BaseNPC:SetBaseMagicalResistanceValue","name":"SetBaseMagicalResistanceValue","rightLabel":"Class-Function","type":"method","description":"Sets base magical armor value.","leftLabel":"void","snippet":"SetBaseMagicalResistanceValue(${1:float flMagicalResistanceValue})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseMagicalResistanceValue"},{"displayText":"CDOTA_BaseNPC:SetBaseManaRegen","name":"SetBaseManaRegen","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetBaseManaRegen(${1:float flManaRegen})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseManaRegen"},{"displayText":"CDOTA_BaseNPC:SetBaseMaxHealth","name":"SetBaseMaxHealth","rightLabel":"Class-Function","type":"method","description":"Set a new base max health value.","leftLabel":"void","snippet":"SetBaseMaxHealth(${1:float flBaseMaxHealth})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseMaxHealth"},{"displayText":"CDOTA_BaseNPC:SetBaseMoveSpeed","name":"SetBaseMoveSpeed","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetBaseMoveSpeed(${1:int iMoveSpeed})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetBaseMoveSpeed"},{"displayText":"CDOTA_BaseNPC:SetCanSellItems","name":"SetCanSellItems","rightLabel":"Class-Function","type":"method","description":"Set whether or not this unit is allowed to sell items (bCanSellItems)","leftLabel":"void","snippet":"SetCanSellItems(${1:bool bCanSell})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetCanSellItems"},{"displayText":"CDOTA_BaseNPC:SetControllableByPlayer","name":"SetControllableByPlayer","rightLabel":"Class-Function","type":"method","description":"Set this unit controllable by the player with the passed ID.","leftLabel":"void","snippet":"SetControllableByPlayer(${1:int iIndex},${2:bool bSkipAdjustingPosition})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetControllableByPlayer"},{"displayText":"CDOTA_BaseNPC:SetCursorCastTarget","name":"SetCursorCastTarget","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetCursorCastTarget(${1:handle hEntity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetCursorCastTarget"},{"displayText":"CDOTA_BaseNPC:SetCursorPosition","name":"SetCursorPosition","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetCursorPosition(${1:Vector vLocation})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetCursorPosition"},{"displayText":"CDOTA_BaseNPC:SetCursorTargetingNothing","name":"SetCursorTargetingNothing","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetCursorTargetingNothing(${1:bool bTargetingNothing})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetCursorTargetingNothing"},{"displayText":"CDOTA_BaseNPC:SetCustomHealthLabel","name":"SetCustomHealthLabel","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetCustomHealthLabel(${1:string pLabel},${2:int r},${3:int g},${4:int b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetCustomHealthLabel"},{"displayText":"CDOTA_BaseNPC:SetDayTimeVisionRange","name":"SetDayTimeVisionRange","rightLabel":"Class-Function","type":"method","description":"Set the base vision range.","leftLabel":"void","snippet":"SetDayTimeVisionRange(${1:int iRange})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetDayTimeVisionRange"},{"displayText":"CDOTA_BaseNPC:SetDeathXP","name":"SetDeathXP","rightLabel":"Class-Function","type":"method","description":"Set the XP bounty on this unit.","leftLabel":"void","snippet":"SetDeathXP(${1:int iXPBounty})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetDeathXP"},{"displayText":"CDOTA_BaseNPC:SetForceAttackTarget","name":"SetForceAttackTarget","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetForceAttackTarget(${1:handle hNPC})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetForceAttackTarget"},{"displayText":"CDOTA_BaseNPC:SetHasInventory","name":"SetHasInventory","rightLabel":"Class-Function","type":"method","description":"Set if this unit has an inventory.","leftLabel":"void","snippet":"SetHasInventory(${1:bool bHasInventory})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetHasInventory"},{"displayText":"CDOTA_BaseNPC:SetHullRadius","name":"SetHullRadius","rightLabel":"Class-Function","type":"method","description":"Set the collision hull radius of this NPC.","leftLabel":"void","snippet":"SetHullRadius(${1:float flHullRadius})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetHullRadius"},{"displayText":"CDOTA_BaseNPC:SetIdleAcquire","name":"SetIdleAcquire","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetIdleAcquire(${1:bool bIdleAcquire})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetIdleAcquire"},{"displayText":"CDOTA_BaseNPC:SetInitialGoalEntity","name":"SetInitialGoalEntity","rightLabel":"Class-Function","type":"method","description":"Sets the initial waypoint goal for this NPC.","leftLabel":"void","snippet":"SetInitialGoalEntity(${1:handle hGoal})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetInitialGoalEntity"},{"displayText":"CDOTA_BaseNPC:SetMana","name":"SetMana","rightLabel":"Class-Function","type":"method","description":"Set the mana on this unit.","leftLabel":"void","snippet":"SetMana(${1:float flMana})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetMana"},{"displayText":"CDOTA_BaseNPC:SetMaximumGoldBounty","name":"SetMaximumGoldBounty","rightLabel":"Class-Function","type":"method","description":"Set the maximum gold bounty for this unit.","leftLabel":"void","snippet":"SetMaximumGoldBounty(${1:int iGoldBountyMax})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetMaximumGoldBounty"},{"displayText":"CDOTA_BaseNPC:SetMinimumGoldBounty","name":"SetMinimumGoldBounty","rightLabel":"Class-Function","type":"method","description":"Set the minimum gold bounty for this unit.","leftLabel":"void","snippet":"SetMinimumGoldBounty(${1:int iGoldBountyMin})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetMinimumGoldBounty"},{"displayText":"CDOTA_BaseNPC:SetModifierStackCount","name":"SetModifierStackCount","rightLabel":"Class-Function","type":"method","description":"Sets the stack count of a given modifier.","leftLabel":"void","snippet":"SetModifierStackCount(${1:string pszScriptName},${2:handle hCaster},${3:int nStackCount})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetModifierStackCount"},{"displayText":"CDOTA_BaseNPC:SetMoveCapability","name":"SetMoveCapability","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetMoveCapability(${1:int iMoveCapabilities})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetMoveCapability"},{"displayText":"CDOTA_BaseNPC:SetMustReachEachGoalEntity","name":"SetMustReachEachGoalEntity","rightLabel":"Class-Function","type":"method","description":"Set whether this NPC is required to reach each goal entity, rather than being allowed to unkink their path.","leftLabel":"void","snippet":"SetMustReachEachGoalEntity(${1:bool must})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetMustReachEachGoalEntity"},{"displayText":"CDOTA_BaseNPC:SetNeverMoveToClearSpace","name":"SetNeverMoveToClearSpace","rightLabel":"Class-Function","type":"method","description":"If set to true, we will never attempt to move this unit to clear space, even when it unphases.","leftLabel":"void","snippet":"SetNeverMoveToClearSpace(${1:bool neverMoveToClearSpace})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetNeverMoveToClearSpace"},{"displayText":"CDOTA_BaseNPC:SetNightTimeVisionRange","name":"SetNightTimeVisionRange","rightLabel":"Class-Function","type":"method","description":"Returns the vision range after modifiers.","leftLabel":"void","snippet":"SetNightTimeVisionRange(${1:int iRange})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetNightTimeVisionRange"},{"displayText":"CDOTA_BaseNPC:SetOrigin","name":"SetOrigin","rightLabel":"Class-Function","type":"method","description":"Set the unit's origin.","leftLabel":"void","snippet":"SetOrigin(${1:Vector vLocation})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetOrigin"},{"displayText":"CDOTA_BaseNPC:SetOriginalModel","name":"SetOriginalModel","rightLabel":"Class-Function","type":"method","description":"Sets the original model of this entity, which it will tend to fall back to anytime its state changes.","leftLabel":"void","snippet":"SetOriginalModel(${1:string pszModelName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetOriginalModel"},{"displayText":"CDOTA_BaseNPC:SetPhysicalArmorBaseValue","name":"SetPhysicalArmorBaseValue","rightLabel":"Class-Function","type":"method","description":"Sets base physical armor value.","leftLabel":"void","snippet":"SetPhysicalArmorBaseValue(${1:float flPhysicalArmorValue})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetPhysicalArmorBaseValue"},{"displayText":"CDOTA_BaseNPC:SetRangedProjectileName","name":"SetRangedProjectileName","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetRangedProjectileName(${1:string pProjectileName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetRangedProjectileName"},{"displayText":"CDOTA_BaseNPC:SetStolenScepter","name":"SetStolenScepter","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetStolenScepter(${1:bool bStolenScepter})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetStolenScepter"},{"displayText":"CDOTA_BaseNPC:SetUnitName","name":"SetUnitName","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetUnitName(${1:string pName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SetUnitName"},{"displayText":"CDOTA_BaseNPC:ShouldIdleAcquire","name":"ShouldIdleAcquire","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"ShouldIdleAcquire()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.ShouldIdleAcquire"},{"displayText":"CDOTA_BaseNPC:SpendMana","name":"SpendMana","rightLabel":"Class-Function","type":"method","description":"Spend mana from this unit, this can be used for spending mana from abilities or item usage.","leftLabel":"void","snippet":"SpendMana(${1:float flManaSpent},${2:handle hAbility})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SpendMana"},{"displayText":"CDOTA_BaseNPC:StartGesture","name":"StartGesture","rightLabel":"Class-Function","type":"method","description":"Add the given gesture activity.","leftLabel":"void","snippet":"StartGesture(${1:int nActivity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.StartGesture"},{"displayText":"CDOTA_BaseNPC:StartGestureWithPlaybackRate","name":"StartGestureWithPlaybackRate","rightLabel":"Class-Function","type":"method","description":"Add the given gesture activity with a playback rate override.","leftLabel":"void","snippet":"StartGestureWithPlaybackRate(${1:int nActivity},${2:float flRate})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.StartGestureWithPlaybackRate"},{"displayText":"CDOTA_BaseNPC:Stop","name":"Stop","rightLabel":"Class-Function","type":"method","description":"Stop the current order.","leftLabel":"void","snippet":"Stop()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.Stop"},{"displayText":"CDOTA_BaseNPC:SwapAbilities","name":"SwapAbilities","rightLabel":"Class-Function","type":"method","description":"Swaps the slots of the two passed abilities and sets them enabled/disabled.","leftLabel":"void","snippet":"SwapAbilities(${1:string pAbilityName1},${2:string pAbilityName2},${3:bool bEnable1},${4:bool bEnable2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SwapAbilities"},{"displayText":"CDOTA_BaseNPC:SwapItems","name":"SwapItems","rightLabel":"Class-Function","type":"method","description":"Swap the contents of two item slots (slot1, slot2)","leftLabel":"void","snippet":"SwapItems(${1:int nSlot1},${2:int nSlot2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.SwapItems"},{"displayText":"CDOTA_BaseNPC:TakeItem","name":"TakeItem","rightLabel":"Class-Function","type":"method","description":"Removed the passed item from this unit's inventory.","leftLabel":"handle","snippet":"TakeItem(${1:handle hItem})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.TakeItem"},{"displayText":"CDOTA_BaseNPC:TimeUntilNextAttack","name":"TimeUntilNextAttack","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"TimeUntilNextAttack()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.TimeUntilNextAttack"},{"displayText":"CDOTA_BaseNPC:TriggerModifierDodge","name":"TriggerModifierDodge","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"TriggerModifierDodge()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.TriggerModifierDodge"},{"displayText":"CDOTA_BaseNPC:TriggerSpellAbsorb","name":"TriggerSpellAbsorb","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"TriggerSpellAbsorb(${1:handle hAbility})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.TriggerSpellAbsorb"},{"displayText":"CDOTA_BaseNPC:TriggerSpellReflect","name":"TriggerSpellReflect","rightLabel":"Class-Function","type":"method","description":"Trigger the Lotus Orb-like effect.(hAbility)","leftLabel":"void","snippet":"TriggerSpellReflect(${1:handle hAbility})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.TriggerSpellReflect"},{"displayText":"CDOTA_BaseNPC:UnitCanRespawn","name":"UnitCanRespawn","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"UnitCanRespawn()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC.UnitCanRespawn"},{"displayText":"CDOTA_BaseNPC_Building:GetInvulnCount","name":"GetInvulnCount","rightLabel":"Class-Function","type":"method","description":"Get the invulnerability count for a building.","leftLabel":"int","snippet":"GetInvulnCount()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Building.GetInvulnCount"},{"displayText":"CDOTA_BaseNPC_Building:SetInvulnCount","name":"SetInvulnCount","rightLabel":"Class-Function","type":"method","description":"Set the invulnerability counter of this building.","leftLabel":"void","snippet":"SetInvulnCount(${1:int nInvulnCount})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Building.SetInvulnCount"},{"displayText":"CDOTA_BaseNPC_Creature:AddItemDrop","name":"AddItemDrop","rightLabel":"Class-Function","type":"method","description":"Add the specified item drop to this creature","leftLabel":"void","snippet":"AddItemDrop(${1:handle hDropData})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.AddItemDrop"},{"displayText":"CDOTA_BaseNPC_Creature:CreatureLevelUp","name":"CreatureLevelUp","rightLabel":"Class-Function","type":"method","description":"Level the creature up by the specified number of levels","leftLabel":"void","snippet":"CreatureLevelUp(${1:int iLevels})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.CreatureLevelUp"},{"displayText":"CDOTA_BaseNPC_Creature:IsChampion","name":"IsChampion","rightLabel":"Class-Function","type":"method","description":"Is this unit a champion?","leftLabel":"bool","snippet":"IsChampion()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.IsChampion"},{"displayText":"CDOTA_BaseNPC_Creature:SetArmorGain","name":"SetArmorGain","rightLabel":"Class-Function","type":"method","description":"Set the armor gained per level on this creature.","leftLabel":"void","snippet":"SetArmorGain(${1:float flArmorGain})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetArmorGain"},{"displayText":"CDOTA_BaseNPC_Creature:SetAttackTimeGain","name":"SetAttackTimeGain","rightLabel":"Class-Function","type":"method","description":"Set the attack time gained per level on this creature.","leftLabel":"void","snippet":"SetAttackTimeGain(${1:float flAttackTimeGain})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetAttackTimeGain"},{"displayText":"CDOTA_BaseNPC_Creature:SetBountyGain","name":"SetBountyGain","rightLabel":"Class-Function","type":"method","description":"Set the bounty gold gained per level on this creature.","leftLabel":"void","snippet":"SetBountyGain(${1:int nBountyGain})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetBountyGain"},{"displayText":"CDOTA_BaseNPC_Creature:SetChampion","name":"SetChampion","rightLabel":"Class-Function","type":"method","description":"Flag this unit as a champion creature.","leftLabel":"void","snippet":"SetChampion(${1:bool bIsChampion})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetChampion"},{"displayText":"CDOTA_BaseNPC_Creature:SetDamageGain","name":"SetDamageGain","rightLabel":"Class-Function","type":"method","description":"Set the damage gained per level on this creature.","leftLabel":"void","snippet":"SetDamageGain(${1:int nDamageGain})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetDamageGain"},{"displayText":"CDOTA_BaseNPC_Creature:SetDisableResistanceGain","name":"SetDisableResistanceGain","rightLabel":"Class-Function","type":"method","description":"Set the disable resistance gained per level on this creature.","leftLabel":"void","snippet":"SetDisableResistanceGain(${1:float flDisableResistanceGain})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetDisableResistanceGain"},{"displayText":"CDOTA_BaseNPC_Creature:SetHPGain","name":"SetHPGain","rightLabel":"Class-Function","type":"method","description":"Set the hit points gained per level on this creature.","leftLabel":"void","snippet":"SetHPGain(${1:int nHPGain})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetHPGain"},{"displayText":"CDOTA_BaseNPC_Creature:SetHPRegenGain","name":"SetHPRegenGain","rightLabel":"Class-Function","type":"method","description":"Set the hit points regen gained per level on this creature.","leftLabel":"void","snippet":"SetHPRegenGain(${1:float flHPRegenGain})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetHPRegenGain"},{"displayText":"CDOTA_BaseNPC_Creature:SetMagicResistanceGain","name":"SetMagicResistanceGain","rightLabel":"Class-Function","type":"method","description":"Set the magic resistance gained per level on this creature.","leftLabel":"void","snippet":"SetMagicResistanceGain(${1:float flMagicResistanceGain})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetMagicResistanceGain"},{"displayText":"CDOTA_BaseNPC_Creature:SetManaGain","name":"SetManaGain","rightLabel":"Class-Function","type":"method","description":"Set the mana points gained per level on this creature.","leftLabel":"void","snippet":"SetManaGain(${1:int nManaGain})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetManaGain"},{"displayText":"CDOTA_BaseNPC_Creature:SetManaRegenGain","name":"SetManaRegenGain","rightLabel":"Class-Function","type":"method","description":"Set the mana points regen gained per level on this creature.","leftLabel":"void","snippet":"SetManaRegenGain(${1:float flManaRegenGain})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetManaRegenGain"},{"displayText":"CDOTA_BaseNPC_Creature:SetMoveSpeedGain","name":"SetMoveSpeedGain","rightLabel":"Class-Function","type":"method","description":"Set the move speed gained per level on this creature.","leftLabel":"void","snippet":"SetMoveSpeedGain(${1:int nMoveSpeedGain})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetMoveSpeedGain"},{"displayText":"CDOTA_BaseNPC_Creature:SetXPGain","name":"SetXPGain","rightLabel":"Class-Function","type":"method","description":"Set the xp reward gained per level on this creature.","leftLabel":"void","snippet":"SetXPGain(${1:int nXPGain})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Creature.SetXPGain"},{"displayText":"CDOTA_BaseNPC_Hero:AddExperience","name":"AddExperience","rightLabel":"Class-Function","type":"method","description":"Params: Float XP, Bool applyBotDifficultyScaling","leftLabel":"bool","snippet":"AddExperience(${1:float flXP},${2:int nReason},${3:bool bApplyBotDifficultyScaling},${4:bool bIncrementTotal})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.AddExperience"},{"displayText":"CDOTA_BaseNPC_Hero:Buyback","name":"Buyback","rightLabel":"Class-Function","type":"method","description":"Spend the gold and buyback with this hero.","leftLabel":"void","snippet":"Buyback()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.Buyback"},{"displayText":"CDOTA_BaseNPC_Hero:CalculateStatBonus","name":"CalculateStatBonus","rightLabel":"Class-Function","type":"method","description":"Recalculate all stats after the hero gains stats.","leftLabel":"void","snippet":"CalculateStatBonus()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.CalculateStatBonus"},{"displayText":"CDOTA_BaseNPC_Hero:CanEarnGold","name":"CanEarnGold","rightLabel":"Class-Function","type":"method","description":"Returns boolean value result of buyback gold limit time less than game time.","leftLabel":"bool","snippet":"CanEarnGold()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.CanEarnGold"},{"displayText":"CDOTA_BaseNPC_Hero:ClearLastHitMultikill","name":"ClearLastHitMultikill","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"void","snippet":"ClearLastHitMultikill()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ClearLastHitMultikill"},{"displayText":"CDOTA_BaseNPC_Hero:ClearLastHitStreak","name":"ClearLastHitStreak","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"void","snippet":"ClearLastHitStreak()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ClearLastHitStreak"},{"displayText":"CDOTA_BaseNPC_Hero:ClearStreak","name":"ClearStreak","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"void","snippet":"ClearStreak()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ClearStreak"},{"displayText":"CDOTA_BaseNPC_Hero:GetAbilityPoints","name":"GetAbilityPoints","rightLabel":"Class-Function","type":"method","description":"Gets the current unspent ability points.","leftLabel":"int","snippet":"GetAbilityPoints()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetAbilityPoints"},{"displayText":"CDOTA_BaseNPC_Hero:GetAdditionalOwnedUnits","name":"GetAdditionalOwnedUnits","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"table","snippet":"GetAdditionalOwnedUnits()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetAdditionalOwnedUnits"},{"displayText":"CDOTA_BaseNPC_Hero:GetAgility","name":"GetAgility","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetAgility()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetAgility"},{"displayText":"CDOTA_BaseNPC_Hero:GetAgilityGain","name":"GetAgilityGain","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetAgilityGain()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetAgilityGain"},{"displayText":"CDOTA_BaseNPC_Hero:GetAssists","name":"GetAssists","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"int","snippet":"GetAssists()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetAssists"},{"displayText":"CDOTA_BaseNPC_Hero:GetAttacker","name":"GetAttacker","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetAttacker(${1:int nIndex})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetAttacker"},{"displayText":"CDOTA_BaseNPC_Hero:GetBaseAgility","name":"GetBaseAgility","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetBaseAgility()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBaseAgility"},{"displayText":"CDOTA_BaseNPC_Hero:GetBaseDamageMax","name":"GetBaseDamageMax","rightLabel":"Class-Function","type":"method","description":"Hero damage is also affected by attributes.","leftLabel":"int","snippet":"GetBaseDamageMax()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBaseDamageMax"},{"displayText":"CDOTA_BaseNPC_Hero:GetBaseDamageMin","name":"GetBaseDamageMin","rightLabel":"Class-Function","type":"method","description":"Hero damage is also affected by attributes.","leftLabel":"int","snippet":"GetBaseDamageMin()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBaseDamageMin"},{"displayText":"CDOTA_BaseNPC_Hero:GetBaseIntellect","name":"GetBaseIntellect","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetBaseIntellect()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBaseIntellect"},{"displayText":"CDOTA_BaseNPC_Hero:GetBaseStrength","name":"GetBaseStrength","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetBaseStrength()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBaseStrength"},{"displayText":"CDOTA_BaseNPC_Hero:GetBonusDamageFromPrimaryStat","name":"GetBonusDamageFromPrimaryStat","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetBonusDamageFromPrimaryStat()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBonusDamageFromPrimaryStat"},{"displayText":"CDOTA_BaseNPC_Hero:GetBuybackCooldownTime","name":"GetBuybackCooldownTime","rightLabel":"Class-Function","type":"method","description":"Return float value for the amount of time left on cooldown for this hero's buyback.","leftLabel":"float","snippet":"GetBuybackCooldownTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBuybackCooldownTime"},{"displayText":"CDOTA_BaseNPC_Hero:GetBuybackCost","name":"GetBuybackCost","rightLabel":"Class-Function","type":"method","description":"Return integer value for the gold cost of a buyback.","leftLabel":"int","snippet":"GetBuybackCost()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBuybackCost"},{"displayText":"CDOTA_BaseNPC_Hero:GetBuybackGoldLimitTime","name":"GetBuybackGoldLimitTime","rightLabel":"Class-Function","type":"method","description":"Returns the amount of time gold gain is limited after buying back.","leftLabel":"float","snippet":"GetBuybackGoldLimitTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetBuybackGoldLimitTime"},{"displayText":"CDOTA_BaseNPC_Hero:GetCurrentXP","name":"GetCurrentXP","rightLabel":"Class-Function","type":"method","description":"Returns the amount of XP","leftLabel":"int","snippet":"GetCurrentXP()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetCurrentXP"},{"displayText":"CDOTA_BaseNPC_Hero:GetDeathGoldCost","name":"GetDeathGoldCost","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetDeathGoldCost()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetDeathGoldCost"},{"displayText":"CDOTA_BaseNPC_Hero:GetDeaths","name":"GetDeaths","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"int","snippet":"GetDeaths()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetDeaths"},{"displayText":"CDOTA_BaseNPC_Hero:GetDenies","name":"GetDenies","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"int","snippet":"GetDenies()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetDenies"},{"displayText":"CDOTA_BaseNPC_Hero:GetGold","name":"GetGold","rightLabel":"Class-Function","type":"method","description":"Returns gold amount for the player owning this hero","leftLabel":"int","snippet":"GetGold()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetGold"},{"displayText":"CDOTA_BaseNPC_Hero:GetGoldBounty","name":"GetGoldBounty","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetGoldBounty()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetGoldBounty"},{"displayText":"CDOTA_BaseNPC_Hero:GetHealthRegen","name":"GetHealthRegen","rightLabel":"Class-Function","type":"method","description":"Hero health regen is affected by attributes.","leftLabel":"float","snippet":"GetHealthRegen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetHealthRegen"},{"displayText":"CDOTA_BaseNPC_Hero:GetIncreasedAttackSpeed","name":"GetIncreasedAttackSpeed","rightLabel":"Class-Function","type":"method","description":"Hero attack speed is also affected by agility.","leftLabel":"float","snippet":"GetIncreasedAttackSpeed()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetIncreasedAttackSpeed"},{"displayText":"CDOTA_BaseNPC_Hero:GetIntellect","name":"GetIntellect","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetIntellect()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetIntellect"},{"displayText":"CDOTA_BaseNPC_Hero:GetIntellectGain","name":"GetIntellectGain","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetIntellectGain()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetIntellectGain"},{"displayText":"CDOTA_BaseNPC_Hero:GetKills","name":"GetKills","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"int","snippet":"GetKills()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetKills"},{"displayText":"CDOTA_BaseNPC_Hero:GetLastHits","name":"GetLastHits","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"int","snippet":"GetLastHits()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetLastHits"},{"displayText":"CDOTA_BaseNPC_Hero:GetManaRegen","name":"GetManaRegen","rightLabel":"Class-Function","type":"method","description":"Hero mana regen is affected by attributes.","leftLabel":"float","snippet":"GetManaRegen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetManaRegen"},{"displayText":"CDOTA_BaseNPC_Hero:GetMostRecentDamageTime","name":"GetMostRecentDamageTime","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetMostRecentDamageTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetMostRecentDamageTime"},{"displayText":"CDOTA_BaseNPC_Hero:GetMultipleKillCount","name":"GetMultipleKillCount","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetMultipleKillCount()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetMultipleKillCount"},{"displayText":"CDOTA_BaseNPC_Hero:GetNumAttackers","name":"GetNumAttackers","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetNumAttackers()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetNumAttackers"},{"displayText":"CDOTA_BaseNPC_Hero:GetNumItemsInInventory","name":"GetNumItemsInInventory","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetNumItemsInInventory()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetNumItemsInInventory"},{"displayText":"CDOTA_BaseNPC_Hero:GetNumItemsInStash","name":"GetNumItemsInStash","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetNumItemsInStash()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetNumItemsInStash"},{"displayText":"CDOTA_BaseNPC_Hero:GetPhysicalArmorValue","name":"GetPhysicalArmorValue","rightLabel":"Class-Function","type":"method","description":"Hero armor is affected by attributes.","leftLabel":"float","snippet":"GetPhysicalArmorValue()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetPhysicalArmorValue"},{"displayText":"CDOTA_BaseNPC_Hero:GetPlayerID","name":"GetPlayerID","rightLabel":"Class-Function","type":"method","description":"Returns player ID of the player owning this hero","leftLabel":"int","snippet":"GetPlayerID()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetPlayerID"},{"displayText":"CDOTA_BaseNPC_Hero:GetPrimaryAttribute","name":"GetPrimaryAttribute","rightLabel":"Class-Function","type":"method","description":"0 = strength, 1 = agility, 2 = intelligence.","leftLabel":"int","snippet":"GetPrimaryAttribute()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetPrimaryAttribute"},{"displayText":"CDOTA_BaseNPC_Hero:GetPrimaryStatValue","name":"GetPrimaryStatValue","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetPrimaryStatValue()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetPrimaryStatValue"},{"displayText":"CDOTA_BaseNPC_Hero:GetRespawnTime","name":"GetRespawnTime","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetRespawnTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetRespawnTime"},{"displayText":"CDOTA_BaseNPC_Hero:GetRespawnsDisabled","name":"GetRespawnsDisabled","rightLabel":"Class-Function","type":"method","description":"Is this hero prevented from respawning?","leftLabel":"bool","snippet":"GetRespawnsDisabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetRespawnsDisabled"},{"displayText":"CDOTA_BaseNPC_Hero:GetStatsBasedManaRegen","name":"GetStatsBasedManaRegen","rightLabel":"Class-Function","type":"method","description":"Returns only the regen based on Intelligence.","leftLabel":"float","snippet":"GetStatsBasedManaRegen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetStatsBasedManaRegen"},{"displayText":"CDOTA_BaseNPC_Hero:GetStreak","name":"GetStreak","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"int","snippet":"GetStreak()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetStreak"},{"displayText":"CDOTA_BaseNPC_Hero:GetStrength","name":"GetStrength","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetStrength()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetStrength"},{"displayText":"CDOTA_BaseNPC_Hero:GetStrengthGain","name":"GetStrengthGain","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetStrengthGain()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetStrengthGain"},{"displayText":"CDOTA_BaseNPC_Hero:GetTimeUntilRespawn","name":"GetTimeUntilRespawn","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetTimeUntilRespawn()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetTimeUntilRespawn"},{"displayText":"CDOTA_BaseNPC_Hero:GetTogglableWearable","name":"GetTogglableWearable","rightLabel":"Class-Function","type":"method","description":"Get wearable entity in slot (slot)","leftLabel":"handle","snippet":"GetTogglableWearable(${1:int nSlotType})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.GetTogglableWearable"},{"displayText":"CDOTA_BaseNPC_Hero:HasAnyAvailableInventorySpace","name":"HasAnyAvailableInventorySpace","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"HasAnyAvailableInventorySpace()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.HasAnyAvailableInventorySpace"},{"displayText":"CDOTA_BaseNPC_Hero:HasFlyingVision","name":"HasFlyingVision","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"HasFlyingVision()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.HasFlyingVision"},{"displayText":"CDOTA_BaseNPC_Hero:HasOwnerAbandoned","name":"HasOwnerAbandoned","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"HasOwnerAbandoned()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.HasOwnerAbandoned"},{"displayText":"CDOTA_BaseNPC_Hero:HasRoomForItem","name":"HasRoomForItem","rightLabel":"Class-Function","type":"method","description":"Args: const char* pItemName, bool bIncludeStashCombines, bool bAllowSelling","leftLabel":"int","snippet":"HasRoomForItem(${1:string pItemName},${2:bool bIncludeStashCombines},${3:bool bAllowSelling})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.HasRoomForItem"},{"displayText":"CDOTA_BaseNPC_Hero:HeroLevelUp","name":"HeroLevelUp","rightLabel":"Class-Function","type":"method","description":"Levels up the hero, true or false to play effects.","leftLabel":"void","snippet":"HeroLevelUp(${1:bool bPlayEffects})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.HeroLevelUp"},{"displayText":"CDOTA_BaseNPC_Hero:IncrementAssists","name":"IncrementAssists","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"void","snippet":"IncrementAssists(${1:int iKillerID})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementAssists"},{"displayText":"CDOTA_BaseNPC_Hero:IncrementDeaths","name":"IncrementDeaths","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"void","snippet":"IncrementDeaths(${1:int iKillerID})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementDeaths"},{"displayText":"CDOTA_BaseNPC_Hero:IncrementDenies","name":"IncrementDenies","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"void","snippet":"IncrementDenies()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementDenies"},{"displayText":"CDOTA_BaseNPC_Hero:IncrementKills","name":"IncrementKills","rightLabel":"Class-Function","type":"method","description":"Passed ID is for the victim, killer ID is ID of the current hero.  Value is stored in PlayerResource.","leftLabel":"void","snippet":"IncrementKills(${1:int iVictimID})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementKills"},{"displayText":"CDOTA_BaseNPC_Hero:IncrementLastHitMultikill","name":"IncrementLastHitMultikill","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"void","snippet":"IncrementLastHitMultikill()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementLastHitMultikill"},{"displayText":"CDOTA_BaseNPC_Hero:IncrementLastHitStreak","name":"IncrementLastHitStreak","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"void","snippet":"IncrementLastHitStreak()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementLastHitStreak"},{"displayText":"CDOTA_BaseNPC_Hero:IncrementLastHits","name":"IncrementLastHits","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"void","snippet":"IncrementLastHits()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementLastHits"},{"displayText":"CDOTA_BaseNPC_Hero:IncrementNearbyCreepDeaths","name":"IncrementNearbyCreepDeaths","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"void","snippet":"IncrementNearbyCreepDeaths()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementNearbyCreepDeaths"},{"displayText":"CDOTA_BaseNPC_Hero:IncrementStreak","name":"IncrementStreak","rightLabel":"Class-Function","type":"method","description":"Value is stored in PlayerResource.","leftLabel":"void","snippet":"IncrementStreak()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IncrementStreak"},{"displayText":"CDOTA_BaseNPC_Hero:IsBuybackDisabledByReapersScythe","name":"IsBuybackDisabledByReapersScythe","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsBuybackDisabledByReapersScythe()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IsBuybackDisabledByReapersScythe"},{"displayText":"CDOTA_BaseNPC_Hero:IsReincarnating","name":"IsReincarnating","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsReincarnating()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.IsReincarnating"},{"displayText":"CDOTA_BaseNPC_Hero:KilledHero","name":"KilledHero","rightLabel":"Class-Function","type":"method","description":"Args: Hero, Inflictor","leftLabel":"void","snippet":"KilledHero(${1:handle hHero},${2:handle hInflictor})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.KilledHero"},{"displayText":"CDOTA_BaseNPC_Hero:ModifyAgility","name":"ModifyAgility","rightLabel":"Class-Function","type":"method","description":"Adds passed value to base attribute value, then calls CalculateStatBonus.","leftLabel":"void","snippet":"ModifyAgility(${1:float flNewAgility})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ModifyAgility"},{"displayText":"CDOTA_BaseNPC_Hero:ModifyGold","name":"ModifyGold","rightLabel":"Class-Function","type":"method","description":"Gives this hero some gold.  Args: int nGoldChange, bool bReliable, int reason","leftLabel":"int","snippet":"ModifyGold(${1:int iGoldChange},${2:bool bReliable},${3:int iReason})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ModifyGold"},{"displayText":"CDOTA_BaseNPC_Hero:ModifyIntellect","name":"ModifyIntellect","rightLabel":"Class-Function","type":"method","description":"Adds passed value to base attribute value, then calls CalculateStatBonus.","leftLabel":"void","snippet":"ModifyIntellect(${1:float flNewIntellect})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ModifyIntellect"},{"displayText":"CDOTA_BaseNPC_Hero:ModifyStrength","name":"ModifyStrength","rightLabel":"Class-Function","type":"method","description":"Adds passed value to base attribute value, then calls CalculateStatBonus.","leftLabel":"void","snippet":"ModifyStrength(${1:float flNewStrength})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ModifyStrength"},{"displayText":"CDOTA_BaseNPC_Hero:PerformTaunt","name":"PerformTaunt","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"PerformTaunt()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.PerformTaunt"},{"displayText":"CDOTA_BaseNPC_Hero:RecordLastHit","name":"RecordLastHit","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"RecordLastHit()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.RecordLastHit"},{"displayText":"CDOTA_BaseNPC_Hero:RespawnHero","name":"RespawnHero","rightLabel":"Class-Function","type":"method","description":"Respawn this hero.","leftLabel":"void","snippet":"RespawnHero(${1:bool bBuyBack},${2:bool bIsActuallyBeingSpawnedForTheFirstTime},${3:bool bRespawnPenalty})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.RespawnHero"},{"displayText":"CDOTA_BaseNPC_Hero:SetAbilityPoints","name":"SetAbilityPoints","rightLabel":"Class-Function","type":"method","description":"Sets the current unspent ability points.","leftLabel":"void","snippet":"SetAbilityPoints(${1:int iPoints})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetAbilityPoints"},{"displayText":"CDOTA_BaseNPC_Hero:SetBaseAgility","name":"SetBaseAgility","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetBaseAgility(${1:float flAgility})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetBaseAgility"},{"displayText":"CDOTA_BaseNPC_Hero:SetBaseIntellect","name":"SetBaseIntellect","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetBaseIntellect(${1:float flIntellect})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetBaseIntellect"},{"displayText":"CDOTA_BaseNPC_Hero:SetBaseStrength","name":"SetBaseStrength","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetBaseStrength(${1:float flStrength})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetBaseStrength"},{"displayText":"CDOTA_BaseNPC_Hero:SetBotDifficulty","name":"SetBotDifficulty","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetBotDifficulty(${1:int nDifficulty})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetBotDifficulty"},{"displayText":"CDOTA_BaseNPC_Hero:SetBuyBackDisabledByReapersScythe","name":"SetBuyBackDisabledByReapersScythe","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetBuyBackDisabledByReapersScythe(${1:bool bBuybackDisabled})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetBuyBackDisabledByReapersScythe"},{"displayText":"CDOTA_BaseNPC_Hero:SetBuybackCooldownTime","name":"SetBuybackCooldownTime","rightLabel":"Class-Function","type":"method","description":"Sets the buyback cooldown time.","leftLabel":"void","snippet":"SetBuybackCooldownTime(${1:float flTime})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetBuybackCooldownTime"},{"displayText":"CDOTA_BaseNPC_Hero:SetBuybackGoldLimitTime","name":"SetBuybackGoldLimitTime","rightLabel":"Class-Function","type":"method","description":"Set the amount of time gold gain is limited after buying back.","leftLabel":"void","snippet":"SetBuybackGoldLimitTime(${1:float flTime})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetBuybackGoldLimitTime"},{"displayText":"CDOTA_BaseNPC_Hero:SetCustomDeathXP","name":"SetCustomDeathXP","rightLabel":"Class-Function","type":"method","description":"Sets a custom experience value for this hero.  Note, GameRules boolean must be set for this to work!","leftLabel":"void","snippet":"SetCustomDeathXP(${1:int iValue})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetCustomDeathXP"},{"displayText":"CDOTA_BaseNPC_Hero:SetGold","name":"SetGold","rightLabel":"Class-Function","type":"method","description":"Sets the gold amount for the player owning this hero","leftLabel":"void","snippet":"SetGold(${1:int iGold},${2:bool bReliable})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetGold"},{"displayText":"CDOTA_BaseNPC_Hero:SetPlayerID","name":"SetPlayerID","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetPlayerID(${1:int iPlayerID})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetPlayerID"},{"displayText":"CDOTA_BaseNPC_Hero:SetPrimaryAttribute","name":"SetPrimaryAttribute","rightLabel":"Class-Function","type":"method","description":"Set this hero's primary attribute value.","leftLabel":"void","snippet":"SetPrimaryAttribute(${1:int nPrimaryAttribute})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetPrimaryAttribute"},{"displayText":"CDOTA_BaseNPC_Hero:SetRespawnPosition","name":"SetRespawnPosition","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetRespawnPosition(${1:Vector vOrigin})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetRespawnPosition"},{"displayText":"CDOTA_BaseNPC_Hero:SetRespawnsDisabled","name":"SetRespawnsDisabled","rightLabel":"Class-Function","type":"method","description":"Prevent this hero from respawning.","leftLabel":"void","snippet":"SetRespawnsDisabled(${1:bool bDisableRespawns})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetRespawnsDisabled"},{"displayText":"CDOTA_BaseNPC_Hero:SetTimeUntilRespawn","name":"SetTimeUntilRespawn","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetTimeUntilRespawn(${1:float time})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SetTimeUntilRespawn"},{"displayText":"CDOTA_BaseNPC_Hero:ShouldDoFlyHeightVisual","name":"ShouldDoFlyHeightVisual","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"ShouldDoFlyHeightVisual()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.ShouldDoFlyHeightVisual"},{"displayText":"CDOTA_BaseNPC_Hero:SpendGold","name":"SpendGold","rightLabel":"Class-Function","type":"method","description":"Args: int nGold, int nReason","leftLabel":"void","snippet":"SpendGold(${1:int iCost},${2:int iReason})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.SpendGold"},{"displayText":"CDOTA_BaseNPC_Hero:UnitCanRespawn","name":"UnitCanRespawn","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"UnitCanRespawn()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.UnitCanRespawn"},{"displayText":"CDOTA_BaseNPC_Hero:UpgradeAbility","name":"UpgradeAbility","rightLabel":"Class-Function","type":"method","description":"This upgrades the passed ability if it exists and the hero has enough ability points.","leftLabel":"void","snippet":"UpgradeAbility(${1:handle hAbility})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.UpgradeAbility"},{"displayText":"CDOTA_BaseNPC_Hero:WillReincarnate","name":"WillReincarnate","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"WillReincarnate()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_BaseNPC_Hero.WillReincarnate"},{"displayText":"CDOTA_Buff:AddParticle","name":"AddParticle","rightLabel":"Class-Function","type":"method","description":"(index, bDestroyImmediately, bStatusEffect, priority, bHeroEffect, bOverheadEffect","leftLabel":"void","snippet":"AddParticle(${1:int i},${2:bool bDestroyImmediately},${3:bool bStatusEffect},${4:int iPriority},${5:bool bHeroEffect},${6:bool bOverheadEffect})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.AddParticle"},{"displayText":"CDOTA_Buff:DecrementStackCount","name":"DecrementStackCount","rightLabel":"Class-Function","type":"method","description":"Decrease this modifier's stack count by 1.","leftLabel":"void","snippet":"DecrementStackCount()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.DecrementStackCount"},{"displayText":"CDOTA_Buff:Destroy","name":"Destroy","rightLabel":"Class-Function","type":"method","description":"Run all associated destroy functions, then remove the modifier.","leftLabel":"void","snippet":"Destroy()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.Destroy"},{"displayText":"CDOTA_Buff:ForceRefresh","name":"ForceRefresh","rightLabel":"Class-Function","type":"method","description":"Run all associated refresh functions on this modifier as if it was re-applied.","leftLabel":"void","snippet":"ForceRefresh()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.ForceRefresh"},{"displayText":"CDOTA_Buff:GetAbility","name":"GetAbility","rightLabel":"Class-Function","type":"method","description":"Get the ability that generated the modifier.","leftLabel":"handle","snippet":"GetAbility()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.GetAbility"},{"displayText":"CDOTA_Buff:GetAuraDuration","name":"GetAuraDuration","rightLabel":"Class-Function","type":"method","description":"Returns aura stickiness (default 0.5)","leftLabel":"float","snippet":"GetAuraDuration()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.GetAuraDuration"},{"displayText":"CDOTA_Buff:GetCaster","name":"GetCaster","rightLabel":"Class-Function","type":"method","description":"Get the owner of the ability responsible for the modifier.","leftLabel":"handle","snippet":"GetCaster()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.GetCaster"},{"displayText":"CDOTA_Buff:GetClass","name":"GetClass","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"string","snippet":"GetClass()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.GetClass"},{"displayText":"CDOTA_Buff:GetCreationTime","name":"GetCreationTime","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetCreationTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.GetCreationTime"},{"displayText":"CDOTA_Buff:GetDieTime","name":"GetDieTime","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetDieTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.GetDieTime"},{"displayText":"CDOTA_Buff:GetDuration","name":"GetDuration","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetDuration()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.GetDuration"},{"displayText":"CDOTA_Buff:GetElapsedTime","name":"GetElapsedTime","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetElapsedTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.GetElapsedTime"},{"displayText":"CDOTA_Buff:GetName","name":"GetName","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"string","snippet":"GetName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.GetName"},{"displayText":"CDOTA_Buff:GetParent","name":"GetParent","rightLabel":"Class-Function","type":"method","description":"Get the unit the modifier is parented to.","leftLabel":"handle","snippet":"GetParent()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.GetParent"},{"displayText":"CDOTA_Buff:GetRemainingTime","name":"GetRemainingTime","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"float","snippet":"GetRemainingTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.GetRemainingTime"},{"displayText":"CDOTA_Buff:GetStackCount","name":"GetStackCount","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetStackCount()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.GetStackCount"},{"displayText":"CDOTA_Buff:IncrementStackCount","name":"IncrementStackCount","rightLabel":"Class-Function","type":"method","description":"Increase this modifier's stack count by 1.","leftLabel":"void","snippet":"IncrementStackCount()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.IncrementStackCount"},{"displayText":"CDOTA_Buff:SetDuration","name":"SetDuration","rightLabel":"Class-Function","type":"method","description":"(flTime, bInformClients)","leftLabel":"void","snippet":"SetDuration(${1:float flDuration},${2:bool bInformClient})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.SetDuration"},{"displayText":"CDOTA_Buff:SetStackCount","name":"SetStackCount","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetStackCount(${1:int iCount})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.SetStackCount"},{"displayText":"CDOTA_Buff:StartIntervalThink","name":"StartIntervalThink","rightLabel":"Class-Function","type":"method","description":"Start this modifier's think function (OnIntervalThink) with the given interval (float).  To stop, call with -1.","leftLabel":"void","snippet":"StartIntervalThink(${1:float flInterval})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Buff.StartIntervalThink"},{"displayText":"CDOTA_CustomUIManager:DynamicHud_Create","name":"DynamicHud_Create","rightLabel":"Class-Function","type":"method","description":"Create a new custom UI HUD element for the specified player(s). ( int PlayerID /*-1 means everyone*/, string ElementID /* should be unique */, string LayoutFileName, table DialogVariables /* can be nil */ )","leftLabel":"void","snippet":"DynamicHud_Create(${1:int int_1},${2:string string_2},${3:string string_3},${4:handle handle_4})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_CustomUIManager.DynamicHud_Create"},{"displayText":"CDOTA_CustomUIManager:DynamicHud_Destroy","name":"DynamicHud_Destroy","rightLabel":"Class-Function","type":"method","description":"Destroy a custom hud element ( int PlayerID /*-1 means everyone*/, string ElementID )","leftLabel":"void","snippet":"DynamicHud_Destroy(${1:int int_1},${2:string string_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_CustomUIManager.DynamicHud_Destroy"},{"displayText":"CDOTA_CustomUIManager:DynamicHud_SetDialogVariables","name":"DynamicHud_SetDialogVariables","rightLabel":"Class-Function","type":"method","description":"Add or modify dialog variables for an existing custom hud element ( int PlayerID /*-1 means everyone*/, string ElementID, table DialogVariables )","leftLabel":"void","snippet":"DynamicHud_SetDialogVariables(${1:int int_1},${2:string string_2},${3:handle handle_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_CustomUIManager.DynamicHud_SetDialogVariables"},{"displayText":"CDOTA_CustomUIManager:DynamicHud_SetVisible","name":"DynamicHud_SetVisible","rightLabel":"Class-Function","type":"method","description":"Toggle the visibility of an existing custom hud element ( int PlayerID /*-1 means everyone*/, string ElementID, bool Visible )","leftLabel":"void","snippet":"DynamicHud_SetVisible(${1:int int_1},${2:string string_2},${3:bool bool_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_CustomUIManager.DynamicHud_SetVisible"},{"displayText":"CDOTA_Item:GetContainer","name":"GetContainer","rightLabel":"Class-Function","type":"method","description":"Get the container for this item.","leftLabel":"handle","snippet":"GetContainer()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetContainer"},{"displayText":"CDOTA_Item:GetCost","name":"GetCost","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetCost()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetCost"},{"displayText":"CDOTA_Item:GetCurrentCharges","name":"GetCurrentCharges","rightLabel":"Class-Function","type":"method","description":"Get the number of charges this item currently has.","leftLabel":"int","snippet":"GetCurrentCharges()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetCurrentCharges"},{"displayText":"CDOTA_Item:GetInitialCharges","name":"GetInitialCharges","rightLabel":"Class-Function","type":"method","description":"Get the initial number of charges this item has.","leftLabel":"int","snippet":"GetInitialCharges()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetInitialCharges"},{"displayText":"CDOTA_Item:GetItemState","name":"GetItemState","rightLabel":"Class-Function","type":"method","description":"Gets whether item is unequipped or ready.","leftLabel":"int","snippet":"GetItemState()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetItemState"},{"displayText":"CDOTA_Item:GetPurchaseTime","name":"GetPurchaseTime","rightLabel":"Class-Function","type":"method","description":"Get the purchase time of this item","leftLabel":"float","snippet":"GetPurchaseTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetPurchaseTime"},{"displayText":"CDOTA_Item:GetPurchaser","name":"GetPurchaser","rightLabel":"Class-Function","type":"method","description":"Get the purchaser for this item.","leftLabel":"handle","snippet":"GetPurchaser()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetPurchaser"},{"displayText":"CDOTA_Item:GetShareability","name":"GetShareability","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetShareability()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.GetShareability"},{"displayText":"CDOTA_Item:IsAlertableItem","name":"IsAlertableItem","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsAlertableItem()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsAlertableItem"},{"displayText":"CDOTA_Item:IsCastOnPickup","name":"IsCastOnPickup","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsCastOnPickup()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsCastOnPickup"},{"displayText":"CDOTA_Item:IsCombinable","name":"IsCombinable","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsCombinable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsCombinable"},{"displayText":"CDOTA_Item:IsDisassemblable","name":"IsDisassemblable","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsDisassemblable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsDisassemblable"},{"displayText":"CDOTA_Item:IsDroppable","name":"IsDroppable","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsDroppable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsDroppable"},{"displayText":"CDOTA_Item:IsItem","name":"IsItem","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsItem()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsItem"},{"displayText":"CDOTA_Item:IsKillable","name":"IsKillable","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsKillable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsKillable"},{"displayText":"CDOTA_Item:IsMuted","name":"IsMuted","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsMuted()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsMuted"},{"displayText":"CDOTA_Item:IsPermanent","name":"IsPermanent","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsPermanent()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsPermanent"},{"displayText":"CDOTA_Item:IsPurchasable","name":"IsPurchasable","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsPurchasable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsPurchasable"},{"displayText":"CDOTA_Item:IsRecipe","name":"IsRecipe","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsRecipe()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsRecipe"},{"displayText":"CDOTA_Item:IsRecipeGenerated","name":"IsRecipeGenerated","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsRecipeGenerated()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsRecipeGenerated"},{"displayText":"CDOTA_Item:IsSellable","name":"IsSellable","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsSellable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsSellable"},{"displayText":"CDOTA_Item:IsStackable","name":"IsStackable","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"IsStackable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.IsStackable"},{"displayText":"CDOTA_Item:LaunchLoot","name":"LaunchLoot","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"LaunchLoot(${1:bool bAutoUse},${2:float flHeight},${3:float flDuration},${4:Vector vEndPoint})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.LaunchLoot"},{"displayText":"CDOTA_Item:LaunchLootInitialHeight","name":"LaunchLootInitialHeight","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"LaunchLootInitialHeight(${1:bool bAutoUse},${2:float flInitialHeight},${3:float flLaunchHeight},${4:float flDuration},${5:Vector vEndPoint})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.LaunchLootInitialHeight"},{"displayText":"CDOTA_Item:RequiresCharges","name":"RequiresCharges","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"RequiresCharges()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.RequiresCharges"},{"displayText":"CDOTA_Item:SetCurrentCharges","name":"SetCurrentCharges","rightLabel":"Class-Function","type":"method","description":"Set the number of charges on this item","leftLabel":"void","snippet":"SetCurrentCharges(${1:int iCharges})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.SetCurrentCharges"},{"displayText":"CDOTA_Item:SetItemState","name":"SetItemState","rightLabel":"Class-Function","type":"method","description":"Sets whether item is unequipped or ready.","leftLabel":"void","snippet":"SetItemState(${1:int iState})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.SetItemState"},{"displayText":"CDOTA_Item:SetPurchaseTime","name":"SetPurchaseTime","rightLabel":"Class-Function","type":"method","description":"Set the purchase time of this item","leftLabel":"void","snippet":"SetPurchaseTime(${1:float flTime})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.SetPurchaseTime"},{"displayText":"CDOTA_Item:SetPurchaser","name":"SetPurchaser","rightLabel":"Class-Function","type":"method","description":"Set the purchaser of record for this item.","leftLabel":"void","snippet":"SetPurchaser(${1:handle hPurchaser})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.SetPurchaser"},{"displayText":"CDOTA_Item:SetStacksWithOtherOwners","name":"SetStacksWithOtherOwners","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"SetStacksWithOtherOwners(${1:bool bStacksWithOtherOwners})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.SetStacksWithOtherOwners"},{"displayText":"CDOTA_Item:StacksWithOtherOwners","name":"StacksWithOtherOwners","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"bool","snippet":"StacksWithOtherOwners()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.StacksWithOtherOwners"},{"displayText":"CDOTA_Item:Think","name":"Think","rightLabel":"Class-Function","type":"method","description":"Think this item","leftLabel":"void","snippet":"Think()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item.Think"},{"displayText":"CDOTA_ItemSpawner:GetItemName","name":"GetItemName","rightLabel":"Class-Function","type":"method","description":"Returns the item name","leftLabel":"string","snippet":"GetItemName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_ItemSpawner.GetItemName"},{"displayText":"CDOTA_Item_DataDriven:ApplyDataDrivenModifier","name":"ApplyDataDrivenModifier","rightLabel":"Class-Function","type":"method","description":"Applies a data driven modifier to the target","leftLabel":"void","snippet":"ApplyDataDrivenModifier(${1:handle hCaster},${2:handle hTarget},${3:string pszModifierName},${4:handle hModifierTable})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_DataDriven.ApplyDataDrivenModifier"},{"displayText":"CDOTA_Item_DataDriven:ApplyDataDrivenThinker","name":"ApplyDataDrivenThinker","rightLabel":"Class-Function","type":"method","description":"Applies a data driven thinker at the location","leftLabel":"handle","snippet":"ApplyDataDrivenThinker(${1:handle hCaster},${2:Vector vLocation},${3:string pszModifierName},${4:handle hModifierTable})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_DataDriven.ApplyDataDrivenThinker"},{"displayText":"CDOTA_Item_Lua:CastFilterResult","name":"CastFilterResult","rightLabel":"Class-Function","type":"method","description":"Determine whether an issued command with no target is valid.","leftLabel":"int","snippet":"CastFilterResult()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.CastFilterResult"},{"displayText":"CDOTA_Item_Lua:CastFilterResultLocation","name":"CastFilterResultLocation","rightLabel":"Class-Function","type":"method","description":"(Vector vLocation) Determine whether an issued command on a location is valid.","leftLabel":"int","snippet":"CastFilterResultLocation(${1:Vector vLocation})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.CastFilterResultLocation"},{"displayText":"CDOTA_Item_Lua:CastFilterResultTarget","name":"CastFilterResultTarget","rightLabel":"Class-Function","type":"method","description":"(HSCRIPT hTarget) Determine whether an issued command on a target is valid.","leftLabel":"int","snippet":"CastFilterResultTarget(${1:handle hTarget})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.CastFilterResultTarget"},{"displayText":"CDOTA_Item_Lua:GetAssociatedPrimaryAbilities","name":"GetAssociatedPrimaryAbilities","rightLabel":"Class-Function","type":"method","description":"Returns abilities that are stolen simultaneously, or otherwise related in functionality.","leftLabel":"string","snippet":"GetAssociatedPrimaryAbilities()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetAssociatedPrimaryAbilities"},{"displayText":"CDOTA_Item_Lua:GetAssociatedSecondaryAbilities","name":"GetAssociatedSecondaryAbilities","rightLabel":"Class-Function","type":"method","description":"Returns other abilities that are stolen simultaneously, or otherwise related in functionality.  Generally hidden abilities.","leftLabel":"string","snippet":"GetAssociatedSecondaryAbilities()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetAssociatedSecondaryAbilities"},{"displayText":"CDOTA_Item_Lua:GetBehavior","name":"GetBehavior","rightLabel":"Class-Function","type":"method","description":"Return cast behavior type of this ability.","leftLabel":"int","snippet":"GetBehavior()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetBehavior"},{"displayText":"CDOTA_Item_Lua:GetCastRange","name":"GetCastRange","rightLabel":"Class-Function","type":"method","description":"Return cast range of this ability.","leftLabel":"int","snippet":"GetCastRange(${1:Vector vLocation},${2:handle hTarget})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetCastRange"},{"displayText":"CDOTA_Item_Lua:GetChannelTime","name":"GetChannelTime","rightLabel":"Class-Function","type":"method","description":"Return the channel time of this ability.","leftLabel":"float","snippet":"GetChannelTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetChannelTime"},{"displayText":"CDOTA_Item_Lua:GetChannelledManaCostPerSecond","name":"GetChannelledManaCostPerSecond","rightLabel":"Class-Function","type":"method","description":"Return mana cost at the given level per second while channeling (-1 is current).","leftLabel":"int","snippet":"GetChannelledManaCostPerSecond(${1:int iLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetChannelledManaCostPerSecond"},{"displayText":"CDOTA_Item_Lua:GetConceptRecipientType","name":"GetConceptRecipientType","rightLabel":"Class-Function","type":"method","description":"Return who hears speech when this spell is cast.","leftLabel":"int","snippet":"GetConceptRecipientType()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetConceptRecipientType"},{"displayText":"CDOTA_Item_Lua:GetCooldown","name":"GetCooldown","rightLabel":"Class-Function","type":"method","description":"Return cooldown of this ability.","leftLabel":"float","snippet":"GetCooldown(${1:int iLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetCooldown"},{"displayText":"CDOTA_Item_Lua:GetCustomCastError","name":"GetCustomCastError","rightLabel":"Class-Function","type":"method","description":"Return the error string of a failed command with no target.","leftLabel":"string","snippet":"GetCustomCastError()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetCustomCastError"},{"displayText":"CDOTA_Item_Lua:GetCustomCastErrorLocation","name":"GetCustomCastErrorLocation","rightLabel":"Class-Function","type":"method","description":"(Vector vLocation) Return the error string of a failed command on a location.","leftLabel":"string","snippet":"GetCustomCastErrorLocation(${1:Vector vLocation})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetCustomCastErrorLocation"},{"displayText":"CDOTA_Item_Lua:GetCustomCastErrorTarget","name":"GetCustomCastErrorTarget","rightLabel":"Class-Function","type":"method","description":"(HSCRIPT hTarget) Return the error string of a failed command on a target.","leftLabel":"string","snippet":"GetCustomCastErrorTarget(${1:handle hTarget})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetCustomCastErrorTarget"},{"displayText":"CDOTA_Item_Lua:GetGoldCost","name":"GetGoldCost","rightLabel":"Class-Function","type":"method","description":"Return gold cost at the given level (-1 is current).","leftLabel":"int","snippet":"GetGoldCost(${1:int iLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetGoldCost"},{"displayText":"CDOTA_Item_Lua:GetIntrinsicModifierName","name":"GetIntrinsicModifierName","rightLabel":"Class-Function","type":"method","description":"Returns the name of the modifier applied passively by this ability.","leftLabel":"string","snippet":"GetIntrinsicModifierName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetIntrinsicModifierName"},{"displayText":"CDOTA_Item_Lua:GetManaCost","name":"GetManaCost","rightLabel":"Class-Function","type":"method","description":"Return mana cost at the given level (-1 is current).","leftLabel":"int","snippet":"GetManaCost(${1:int iLevel})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetManaCost"},{"displayText":"CDOTA_Item_Lua:GetPlaybackRateOverride","name":"GetPlaybackRateOverride","rightLabel":"Class-Function","type":"method","description":"Return the animation rate of the cast animation.","leftLabel":"float","snippet":"GetPlaybackRateOverride()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.GetPlaybackRateOverride"},{"displayText":"CDOTA_Item_Lua:IsHiddenAbilityCastable","name":"IsHiddenAbilityCastable","rightLabel":"Class-Function","type":"method","description":"Returns true if this ability can be used when not on the action panel.","leftLabel":"bool","snippet":"IsHiddenAbilityCastable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.IsHiddenAbilityCastable"},{"displayText":"CDOTA_Item_Lua:IsHiddenWhenStolen","name":"IsHiddenWhenStolen","rightLabel":"Class-Function","type":"method","description":"Returns true if this ability is hidden when stolen by Spell Steal.","leftLabel":"bool","snippet":"IsHiddenWhenStolen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.IsHiddenWhenStolen"},{"displayText":"CDOTA_Item_Lua:IsRefreshable","name":"IsRefreshable","rightLabel":"Class-Function","type":"method","description":"Returns true if this ability is refreshed by Refresher Orb.","leftLabel":"bool","snippet":"IsRefreshable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.IsRefreshable"},{"displayText":"CDOTA_Item_Lua:IsStealable","name":"IsStealable","rightLabel":"Class-Function","type":"method","description":"Returns true if this ability can be stolen by Spell Steal.","leftLabel":"bool","snippet":"IsStealable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.IsStealable"},{"displayText":"CDOTA_Item_Lua:OnAbilityPhaseInterrupted","name":"OnAbilityPhaseInterrupted","rightLabel":"Class-Function","type":"method","description":"Cast time did not complete successfully.","leftLabel":"void","snippet":"OnAbilityPhaseInterrupted()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnAbilityPhaseInterrupted"},{"displayText":"CDOTA_Item_Lua:OnAbilityPhaseStart","name":"OnAbilityPhaseStart","rightLabel":"Class-Function","type":"method","description":"Cast time begins (return true for successful cast).","leftLabel":"bool","snippet":"OnAbilityPhaseStart()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnAbilityPhaseStart"},{"displayText":"CDOTA_Item_Lua:OnChannelFinish","name":"OnChannelFinish","rightLabel":"Class-Function","type":"method","description":"(bool bInterrupted) Channel finished.","leftLabel":"void","snippet":"OnChannelFinish(${1:bool bInterrupted})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnChannelFinish"},{"displayText":"CDOTA_Item_Lua:OnChannelThink","name":"OnChannelThink","rightLabel":"Class-Function","type":"method","description":"(float flInterval) Channeling is taking place.","leftLabel":"void","snippet":"OnChannelThink(${1:float flInterval})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnChannelThink"},{"displayText":"CDOTA_Item_Lua:OnHeroCalculateStatBonus","name":"OnHeroCalculateStatBonus","rightLabel":"Class-Function","type":"method","description":"Caster (hero only) gained a level, skilled an ability, or received a new stat bonus.","leftLabel":"void","snippet":"OnHeroCalculateStatBonus()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnHeroCalculateStatBonus"},{"displayText":"CDOTA_Item_Lua:OnHeroDiedNearby","name":"OnHeroDiedNearby","rightLabel":"Class-Function","type":"method","description":"A hero has died in the vicinity (ie Urn), takes table of params.","leftLabel":"void","snippet":"OnHeroDiedNearby(${1:handle unit},${2:handle attacker},${3:handle table})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnHeroDiedNearby"},{"displayText":"CDOTA_Item_Lua:OnHeroLevelUp","name":"OnHeroLevelUp","rightLabel":"Class-Function","type":"method","description":"Caster gained a level.","leftLabel":"void","snippet":"OnHeroLevelUp()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnHeroLevelUp"},{"displayText":"CDOTA_Item_Lua:OnInventoryContentsChanged","name":"OnInventoryContentsChanged","rightLabel":"Class-Function","type":"method","description":"Caster inventory changed.","leftLabel":"void","snippet":"OnInventoryContentsChanged()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnInventoryContentsChanged"},{"displayText":"CDOTA_Item_Lua:OnItemEquipped","name":"OnItemEquipped","rightLabel":"Class-Function","type":"method","description":"( HSCRIPT hItem ) Caster equipped item.","leftLabel":"void","snippet":"OnItemEquipped(${1:handle hItem})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnItemEquipped"},{"displayText":"CDOTA_Item_Lua:OnOwnerDied","name":"OnOwnerDied","rightLabel":"Class-Function","type":"method","description":"Caster died.","leftLabel":"void","snippet":"OnOwnerDied()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnOwnerDied"},{"displayText":"CDOTA_Item_Lua:OnOwnerSpawned","name":"OnOwnerSpawned","rightLabel":"Class-Function","type":"method","description":"Caster respawned or spawned for the first time.","leftLabel":"void","snippet":"OnOwnerSpawned()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnOwnerSpawned"},{"displayText":"CDOTA_Item_Lua:OnProjectileHit","name":"OnProjectileHit","rightLabel":"Class-Function","type":"method","description":"(HSCRIPT hTarget, Vector vLocation) Projectile has collided with a given target or reached its destination (target is invalid).","leftLabel":"bool","snippet":"OnProjectileHit(${1:handle hTarget},${2:Vector vLocation})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnProjectileHit"},{"displayText":"CDOTA_Item_Lua:OnProjectileThink","name":"OnProjectileThink","rightLabel":"Class-Function","type":"method","description":"(Vector vLocation) Projectile is actively moving.","leftLabel":"void","snippet":"OnProjectileThink(${1:Vector vLocation})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnProjectileThink"},{"displayText":"CDOTA_Item_Lua:OnSpellStart","name":"OnSpellStart","rightLabel":"Class-Function","type":"method","description":"Cast time finished, spell effects begin.","leftLabel":"void","snippet":"OnSpellStart()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnSpellStart"},{"displayText":"CDOTA_Item_Lua:OnStolen","name":"OnStolen","rightLabel":"Class-Function","type":"method","description":"( HSCRIPT hAbility ) Special behavior when stolen by Spell Steal.","leftLabel":"void","snippet":"OnStolen(${1:handle hSourceAbility})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnStolen"},{"displayText":"CDOTA_Item_Lua:OnToggle","name":"OnToggle","rightLabel":"Class-Function","type":"method","description":"Ability is toggled on/off.","leftLabel":"void","snippet":"OnToggle()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnToggle"},{"displayText":"CDOTA_Item_Lua:OnUnStolen","name":"OnUnStolen","rightLabel":"Class-Function","type":"method","description":"Special behavior when lost by Spell Steal.","leftLabel":"void","snippet":"OnUnStolen()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnUnStolen"},{"displayText":"CDOTA_Item_Lua:OnUpgrade","name":"OnUpgrade","rightLabel":"Class-Function","type":"method","description":"Ability gained a level.","leftLabel":"void","snippet":"OnUpgrade()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.OnUpgrade"},{"displayText":"CDOTA_Item_Lua:ProcsMagicStick","name":"ProcsMagicStick","rightLabel":"Class-Function","type":"method","description":"Returns true if this ability will generate magic stick charges for nearby enemies.","leftLabel":"bool","snippet":"ProcsMagicStick()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.ProcsMagicStick"},{"displayText":"CDOTA_Item_Lua:SpeakTrigger","name":"SpeakTrigger","rightLabel":"Class-Function","type":"method","description":"Return the type of speech used.","leftLabel":"int","snippet":"SpeakTrigger()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Lua.SpeakTrigger"},{"displayText":"CDOTA_Item_Physical:GetContainedItem","name":"GetContainedItem","rightLabel":"Class-Function","type":"method","description":"Returned the contained item.","leftLabel":"handle","snippet":"GetContainedItem()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Physical.GetContainedItem"},{"displayText":"CDOTA_Item_Physical:GetCreationTime","name":"GetCreationTime","rightLabel":"Class-Function","type":"method","description":"Returns the game time when this item was created in the world","leftLabel":"float","snippet":"GetCreationTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Physical.GetCreationTime"},{"displayText":"CDOTA_Item_Physical:SetContainedItem","name":"SetContainedItem","rightLabel":"Class-Function","type":"method","description":"Set the contained item.","leftLabel":"void","snippet":"SetContainedItem(${1:handle hItem})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Item_Physical.SetContainedItem"},{"displayText":"CDOTA_MapTree:CutDown","name":"CutDown","rightLabel":"Class-Function","type":"method","description":"Cuts down this tree. Parameters: int nTeamNumberKnownTo (-1 = invalid team)","leftLabel":"void","snippet":"CutDown(${1:int nTreeNumberKnownTo})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_MapTree.CutDown"},{"displayText":"CDOTA_MapTree:CutDownRegrowAfter","name":"CutDownRegrowAfter","rightLabel":"Class-Function","type":"method","description":"Cuts down this tree. Parameters: float flRegrowAfter (-1 = never regrow), int nTeamNumberKnownTo (-1 = invalid team)","leftLabel":"void","snippet":"CutDownRegrowAfter(${1:float flRegrowAfter},${2:int nTeamNumberKnownTo})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_MapTree.CutDownRegrowAfter"},{"displayText":"CDOTA_MapTree:GrowBack","name":"GrowBack","rightLabel":"Class-Function","type":"method","description":"Grows back the tree if it was cut down.","leftLabel":"void","snippet":"GrowBack()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_MapTree.GrowBack"},{"displayText":"CDOTA_MapTree:IsStanding","name":"IsStanding","rightLabel":"Class-Function","type":"method","description":"Returns true if the tree is standing, false if it has been cut down","leftLabel":"bool","snippet":"IsStanding()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_MapTree.IsStanding"},{"displayText":"CDOTA_Modifier_Lua:AllowIllusionDuplicate","name":"AllowIllusionDuplicate","rightLabel":"Class-Function","type":"method","description":"True/false if this modifier is active on illusions.","leftLabel":"bool","snippet":"AllowIllusionDuplicate()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.AllowIllusionDuplicate"},{"displayText":"CDOTA_Modifier_Lua:DestroyOnExpire","name":"DestroyOnExpire","rightLabel":"Class-Function","type":"method","description":"True/false if this buff is removed when the duration expires.","leftLabel":"bool","snippet":"DestroyOnExpire()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.DestroyOnExpire"},{"displayText":"CDOTA_Modifier_Lua:GetAttributes","name":"GetAttributes","rightLabel":"Class-Function","type":"method","description":"Return the types of attributes applied to this modifier (enum value from DOTAModifierAttribute_t","leftLabel":"int","snippet":"GetAttributes()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.GetAttributes"},{"displayText":"CDOTA_Modifier_Lua:GetAuraDuration","name":"GetAuraDuration","rightLabel":"Class-Function","type":"method","description":"Returns aura stickiness","leftLabel":"float","snippet":"GetAuraDuration()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.GetAuraDuration"},{"displayText":"CDOTA_Modifier_Lua:GetAuraEntityReject","name":"GetAuraEntityReject","rightLabel":"Class-Function","type":"method","description":"Return true/false if this entity should receive the aura under specific conditions","leftLabel":"bool","snippet":"GetAuraEntityReject(${1:handle hEntity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.GetAuraEntityReject"},{"displayText":"CDOTA_Modifier_Lua:GetAuraRadius","name":"GetAuraRadius","rightLabel":"Class-Function","type":"method","description":"Return the range around the parent this aura tries to apply its buff.","leftLabel":"int","snippet":"GetAuraRadius()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.GetAuraRadius"},{"displayText":"CDOTA_Modifier_Lua:GetAuraSearchFlags","name":"GetAuraSearchFlags","rightLabel":"Class-Function","type":"method","description":"Return the unit flags this aura respects when placing buffs.","leftLabel":"int","snippet":"GetAuraSearchFlags()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.GetAuraSearchFlags"},{"displayText":"CDOTA_Modifier_Lua:GetAuraSearchTeam","name":"GetAuraSearchTeam","rightLabel":"Class-Function","type":"method","description":"Return the teams this aura applies its buff to.","leftLabel":"int","snippet":"GetAuraSearchTeam()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.GetAuraSearchTeam"},{"displayText":"CDOTA_Modifier_Lua:GetAuraSearchType","name":"GetAuraSearchType","rightLabel":"Class-Function","type":"method","description":"Return the unit classifications this aura applies its buff to.","leftLabel":"int","snippet":"GetAuraSearchType()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.GetAuraSearchType"},{"displayText":"CDOTA_Modifier_Lua:GetEffectAttachType","name":"GetEffectAttachType","rightLabel":"Class-Function","type":"method","description":"Return the attach type of the particle system from GetEffectName.","leftLabel":"int","snippet":"GetEffectAttachType()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.GetEffectAttachType"},{"displayText":"CDOTA_Modifier_Lua:GetEffectName","name":"GetEffectName","rightLabel":"Class-Function","type":"method","description":"Return the name of the particle system that is created while this modifier is active.","leftLabel":"string","snippet":"GetEffectName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.GetEffectName"},{"displayText":"CDOTA_Modifier_Lua:GetHeroEffectName","name":"GetHeroEffectName","rightLabel":"Class-Function","type":"method","description":"Return the name of the hero effect particle system that is created while this modifier is active.","leftLabel":"string","snippet":"GetHeroEffectName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.GetHeroEffectName"},{"displayText":"CDOTA_Modifier_Lua:GetModifierAura","name":"GetModifierAura","rightLabel":"Class-Function","type":"method","description":"The name of the secondary modifier that will be applied by this modifier (if it is an aura).","leftLabel":"string","snippet":"GetModifierAura()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.GetModifierAura"},{"displayText":"CDOTA_Modifier_Lua:GetStatusEffectName","name":"GetStatusEffectName","rightLabel":"Class-Function","type":"method","description":"Return the name of the status effect particle system that is created while this modifier is active.","leftLabel":"string","snippet":"GetStatusEffectName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.GetStatusEffectName"},{"displayText":"CDOTA_Modifier_Lua:GetTexture","name":"GetTexture","rightLabel":"Class-Function","type":"method","description":"Return the name of the buff icon to be shown for this modifier.","leftLabel":"string","snippet":"GetTexture()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.GetTexture"},{"displayText":"CDOTA_Modifier_Lua:HeroEffectPriority","name":"HeroEffectPriority","rightLabel":"Class-Function","type":"method","description":"Relationship of this hero effect with those from other buffs (higher is more likely to be shown).","leftLabel":"int","snippet":"HeroEffectPriority()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.HeroEffectPriority"},{"displayText":"CDOTA_Modifier_Lua:IsAura","name":"IsAura","rightLabel":"Class-Function","type":"method","description":"True/false if this modifier is an aura.","leftLabel":"bool","snippet":"IsAura()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.IsAura"},{"displayText":"CDOTA_Modifier_Lua:IsAuraActiveOnDeath","name":"IsAuraActiveOnDeath","rightLabel":"Class-Function","type":"method","description":"True/false if this aura provides buffs when the parent is dead.","leftLabel":"bool","snippet":"IsAuraActiveOnDeath()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.IsAuraActiveOnDeath"},{"displayText":"CDOTA_Modifier_Lua:IsDebuff","name":"IsDebuff","rightLabel":"Class-Function","type":"method","description":"True/false if this modifier should be displayed as a debuff.","leftLabel":"bool","snippet":"IsDebuff()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.IsDebuff"},{"displayText":"CDOTA_Modifier_Lua:IsHidden","name":"IsHidden","rightLabel":"Class-Function","type":"method","description":"True/false if this modifier should be displayed on the buff bar.","leftLabel":"bool","snippet":"IsHidden()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.IsHidden"},{"displayText":"CDOTA_Modifier_Lua:IsPurgable","name":"IsPurgable","rightLabel":"Class-Function","type":"method","description":"True/false if this modifier can be purged.","leftLabel":"bool","snippet":"IsPurgable()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.IsPurgable"},{"displayText":"CDOTA_Modifier_Lua:IsPurgeException","name":"IsPurgeException","rightLabel":"Class-Function","type":"method","description":"True/false if this modifier can be purged by strong dispels.","leftLabel":"bool","snippet":"IsPurgeException()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.IsPurgeException"},{"displayText":"CDOTA_Modifier_Lua:IsStunDebuff","name":"IsStunDebuff","rightLabel":"Class-Function","type":"method","description":"True/false if this modifier is considered a stun for purge reasons.","leftLabel":"bool","snippet":"IsStunDebuff()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.IsStunDebuff"},{"displayText":"CDOTA_Modifier_Lua:OnCreated","name":"OnCreated","rightLabel":"Class-Function","type":"method","description":"Runs when the modifier is created.","leftLabel":"void","snippet":"OnCreated(${1:handle table})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.OnCreated"},{"displayText":"CDOTA_Modifier_Lua:OnDestroy","name":"OnDestroy","rightLabel":"Class-Function","type":"method","description":"Runs when the modifier is destroyed.","leftLabel":"void","snippet":"OnDestroy()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.OnDestroy"},{"displayText":"CDOTA_Modifier_Lua:OnIntervalThink","name":"OnIntervalThink","rightLabel":"Class-Function","type":"method","description":"Runs when the think interval occurs.","leftLabel":"void","snippet":"OnIntervalThink()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.OnIntervalThink"},{"displayText":"CDOTA_Modifier_Lua:OnRefresh","name":"OnRefresh","rightLabel":"Class-Function","type":"method","description":"Runs when the modifier is refreshed.","leftLabel":"void","snippet":"OnRefresh(${1:handle table})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.OnRefresh"},{"displayText":"CDOTA_Modifier_Lua:RemoveOnDeath","name":"RemoveOnDeath","rightLabel":"Class-Function","type":"method","description":"True/false if this modifier is removed when the parent dies.","leftLabel":"bool","snippet":"RemoveOnDeath()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.RemoveOnDeath"},{"displayText":"CDOTA_Modifier_Lua:StatusEffectPriority","name":"StatusEffectPriority","rightLabel":"Class-Function","type":"method","description":"Relationship of this status effect with those from other buffs (higher is more likely to be shown).","leftLabel":"int","snippet":"StatusEffectPriority()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua.StatusEffectPriority"},{"displayText":"CDOTA_Modifier_Lua_Horizontal_Motion:ApplyHorizontalMotionController","name":"ApplyHorizontalMotionController","rightLabel":"Class-Function","type":"method","description":"Starts the horizontal motion controller effects for this buff.  Returns true if successful.","leftLabel":"bool","snippet":"ApplyHorizontalMotionController()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Horizontal_Motion.ApplyHorizontalMotionController"},{"displayText":"CDOTA_Modifier_Lua_Horizontal_Motion:GetPriority","name":"GetPriority","rightLabel":"Class-Function","type":"method","description":"Get the priority","leftLabel":"int","snippet":"GetPriority()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Horizontal_Motion.GetPriority"},{"displayText":"CDOTA_Modifier_Lua_Horizontal_Motion:OnHorizontalMotionInterrupted","name":"OnHorizontalMotionInterrupted","rightLabel":"Class-Function","type":"method","description":"Called when the motion gets interrupted.","leftLabel":"void","snippet":"OnHorizontalMotionInterrupted()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Horizontal_Motion.OnHorizontalMotionInterrupted"},{"displayText":"CDOTA_Modifier_Lua_Horizontal_Motion:SetPriority","name":"SetPriority","rightLabel":"Class-Function","type":"method","description":"Set the priority","leftLabel":"void","snippet":"SetPriority(${1:int nMotionPriority})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Horizontal_Motion.SetPriority"},{"displayText":"CDOTA_Modifier_Lua_Horizontal_Motion:UpdateHorizontalMotion","name":"UpdateHorizontalMotion","rightLabel":"Class-Function","type":"method","description":"Perform any motion from the given interval on the NPC.","leftLabel":"void","snippet":"UpdateHorizontalMotion(${1:handle me},${2:float dt})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Horizontal_Motion.UpdateHorizontalMotion"},{"displayText":"CDOTA_Modifier_Lua_Motion_Both:ApplyHorizontalMotionController","name":"ApplyHorizontalMotionController","rightLabel":"Class-Function","type":"method","description":"Starts the horizontal motion controller effects for this buff.  Returns true if successful.","leftLabel":"bool","snippet":"ApplyHorizontalMotionController()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Motion_Both.ApplyHorizontalMotionController"},{"displayText":"CDOTA_Modifier_Lua_Motion_Both:ApplyVerticalMotionController","name":"ApplyVerticalMotionController","rightLabel":"Class-Function","type":"method","description":"Starts the vertical motion controller effects for this buff.  Returns true if successful.","leftLabel":"bool","snippet":"ApplyVerticalMotionController()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Motion_Both.ApplyVerticalMotionController"},{"displayText":"CDOTA_Modifier_Lua_Motion_Both:GetPriority","name":"GetPriority","rightLabel":"Class-Function","type":"method","description":"Get the priority","leftLabel":"int","snippet":"GetPriority()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Motion_Both.GetPriority"},{"displayText":"CDOTA_Modifier_Lua_Motion_Both:OnHorizontalMotionInterrupted","name":"OnHorizontalMotionInterrupted","rightLabel":"Class-Function","type":"method","description":"Called when the motion gets interrupted.","leftLabel":"void","snippet":"OnHorizontalMotionInterrupted()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Motion_Both.OnHorizontalMotionInterrupted"},{"displayText":"CDOTA_Modifier_Lua_Motion_Both:OnVerticalMotionInterrupted","name":"OnVerticalMotionInterrupted","rightLabel":"Class-Function","type":"method","description":"Called when the motion gets interrupted.","leftLabel":"void","snippet":"OnVerticalMotionInterrupted()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Motion_Both.OnVerticalMotionInterrupted"},{"displayText":"CDOTA_Modifier_Lua_Motion_Both:SetPriority","name":"SetPriority","rightLabel":"Class-Function","type":"method","description":"Set the priority","leftLabel":"void","snippet":"SetPriority(${1:int nMotionPriority})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Motion_Both.SetPriority"},{"displayText":"CDOTA_Modifier_Lua_Motion_Both:UpdateHorizontalMotion","name":"UpdateHorizontalMotion","rightLabel":"Class-Function","type":"method","description":"Perform any motion from the given interval on the NPC.","leftLabel":"void","snippet":"UpdateHorizontalMotion(${1:handle me},${2:float dt})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Motion_Both.UpdateHorizontalMotion"},{"displayText":"CDOTA_Modifier_Lua_Motion_Both:UpdateVerticalMotion","name":"UpdateVerticalMotion","rightLabel":"Class-Function","type":"method","description":"Perform any motion from the given interval on the NPC.","leftLabel":"void","snippet":"UpdateVerticalMotion(${1:handle me},${2:float dt})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Motion_Both.UpdateVerticalMotion"},{"displayText":"CDOTA_Modifier_Lua_Vertical_Motion:ApplyVerticalMotionController","name":"ApplyVerticalMotionController","rightLabel":"Class-Function","type":"method","description":"Starts the vertical motion controller effects for this buff.  Returns true if successful.","leftLabel":"bool","snippet":"ApplyVerticalMotionController()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Vertical_Motion.ApplyVerticalMotionController"},{"displayText":"CDOTA_Modifier_Lua_Vertical_Motion:GetMotionPriority","name":"GetMotionPriority","rightLabel":"Class-Function","type":"method","description":"Get the priority","leftLabel":"int","snippet":"GetMotionPriority()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Vertical_Motion.GetMotionPriority"},{"displayText":"CDOTA_Modifier_Lua_Vertical_Motion:OnVerticalMotionInterrupted","name":"OnVerticalMotionInterrupted","rightLabel":"Class-Function","type":"method","description":"Called when the motion gets interrupted.","leftLabel":"void","snippet":"OnVerticalMotionInterrupted()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Vertical_Motion.OnVerticalMotionInterrupted"},{"displayText":"CDOTA_Modifier_Lua_Vertical_Motion:SetMotionPriority","name":"SetMotionPriority","rightLabel":"Class-Function","type":"method","description":"Set the priority","leftLabel":"void","snippet":"SetMotionPriority(${1:int nMotionPriority})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Vertical_Motion.SetMotionPriority"},{"displayText":"CDOTA_Modifier_Lua_Vertical_Motion:UpdateVerticalMotion","name":"UpdateVerticalMotion","rightLabel":"Class-Function","type":"method","description":"Perform any motion from the given interval on the NPC.","leftLabel":"void","snippet":"UpdateVerticalMotion(${1:handle me},${2:float dt})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Modifier_Lua_Vertical_Motion.UpdateVerticalMotion"},{"displayText":"CDOTA_SimpleObstruction:IsEnabled","name":"IsEnabled","rightLabel":"Class-Function","type":"method","description":"Returns whether the obstruction is currently active","leftLabel":"bool","snippet":"IsEnabled()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_SimpleObstruction.IsEnabled"},{"displayText":"CDOTA_SimpleObstruction:SetEnabled","name":"SetEnabled","rightLabel":"Class-Function","type":"method","description":"Enable or disable the obstruction","leftLabel":"void","snippet":"SetEnabled(${1:bool bEnabled},${2:bool bForce})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_SimpleObstruction.SetEnabled"},{"displayText":"CDOTA_Unit_Courier:UpgradeToFlyingCourier","name":"UpgradeToFlyingCourier","rightLabel":"Class-Function","type":"method","description":"Upgrade to a flying courier","leftLabel":"bool","snippet":"UpgradeToFlyingCourier()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Unit_Courier.UpgradeToFlyingCourier"},{"displayText":"CDOTA_Unit_Nian:GetHorn","name":"GetHorn","rightLabel":"Class-Function","type":"method","description":"Is the Nian horn?","leftLabel":"handle","snippet":"GetHorn()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Unit_Nian.GetHorn"},{"displayText":"CDOTA_Unit_Nian:GetTail","name":"GetTail","rightLabel":"Class-Function","type":"method","description":"Is the Nian's tail broken?","leftLabel":"handle","snippet":"GetTail()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Unit_Nian.GetTail"},{"displayText":"CDOTA_Unit_Nian:IsHornAlive","name":"IsHornAlive","rightLabel":"Class-Function","type":"method","description":"Is the Nian's horn broken?","leftLabel":"bool","snippet":"IsHornAlive()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Unit_Nian.IsHornAlive"},{"displayText":"CDOTA_Unit_Nian:IsTailAlive","name":"IsTailAlive","rightLabel":"Class-Function","type":"method","description":"Is the Nian's tail broken?","leftLabel":"bool","snippet":"IsTailAlive()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDOTA_Unit_Nian.IsTailAlive"},{"displayText":"CDebugOverlayScriptHelper:Axis","name":"Axis","rightLabel":"Class-Function","type":"method","description":"Draws an axis. Specify origin + orientation in world space.","leftLabel":"void","snippet":"Axis(${1:Vector Vector_1},${2:Quaternion Quaternion_2},${3:float float_3},${4:bool bool_4},${5:float float_5})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Axis"},{"displayText":"CDebugOverlayScriptHelper:Box","name":"Box","rightLabel":"Class-Function","type":"method","description":"Draws a world-space axis-aligned box. Specify bounds in world space.","leftLabel":"void","snippet":"Box(${1:Vector Vector_1},${2:Vector Vector_2},${3:int int_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:bool bool_7},${8:float float_8})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Box"},{"displayText":"CDebugOverlayScriptHelper:BoxAngles","name":"BoxAngles","rightLabel":"Class-Function","type":"method","description":"Draws an oriented box at the origin. Specify bounds in local space.","leftLabel":"void","snippet":"BoxAngles(${1:Vector Vector_1},${2:Vector Vector_2},${3:Vector Vector_3},${4:Quaternion Quaternion_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:int int_8},${9:bool bool_9},${10:float float_10})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.BoxAngles"},{"displayText":"CDebugOverlayScriptHelper:Capsule","name":"Capsule","rightLabel":"Class-Function","type":"method","description":"Draws a capsule. Specify base in world space.","leftLabel":"void","snippet":"Capsule(${1:Vector Vector_1},${2:Quaternion Quaternion_2},${3:float float_3},${4:float float_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:int int_8},${9:bool bool_9},${10:float float_10})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Capsule"},{"displayText":"CDebugOverlayScriptHelper:Circle","name":"Circle","rightLabel":"Class-Function","type":"method","description":"Draws a circle. Specify center in world space.","leftLabel":"void","snippet":"Circle(${1:Vector Vector_1},${2:Quaternion Quaternion_2},${3:float float_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:bool bool_8},${9:float float_9})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Circle"},{"displayText":"CDebugOverlayScriptHelper:CircleScreenOriented","name":"CircleScreenOriented","rightLabel":"Class-Function","type":"method","description":"Draws a circle oriented to the screen. Specify center in world space.","leftLabel":"void","snippet":"CircleScreenOriented(${1:Vector Vector_1},${2:float float_2},${3:int int_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:bool bool_7},${8:float float_8})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.CircleScreenOriented"},{"displayText":"CDebugOverlayScriptHelper:Cone","name":"Cone","rightLabel":"Class-Function","type":"method","description":"Draws a wireframe cone. Specify endpoint and direction in world space.","leftLabel":"void","snippet":"Cone(${1:Vector Vector_1},${2:Vector Vector_2},${3:float float_3},${4:float float_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:int int_8},${9:bool bool_9},${10:float float_10})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Cone"},{"displayText":"CDebugOverlayScriptHelper:Cross","name":"Cross","rightLabel":"Class-Function","type":"method","description":"Draws a screen-aligned cross. Specify origin in world space.","leftLabel":"void","snippet":"Cross(${1:Vector Vector_1},${2:float float_2},${3:int int_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:bool bool_7},${8:float float_8})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Cross"},{"displayText":"CDebugOverlayScriptHelper:Cross3D","name":"Cross3D","rightLabel":"Class-Function","type":"method","description":"Draws a world-aligned cross. Specify origin in world space.","leftLabel":"void","snippet":"Cross3D(${1:Vector Vector_1},${2:float float_2},${3:int int_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:bool bool_7},${8:float float_8})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Cross3D"},{"displayText":"CDebugOverlayScriptHelper:Cross3DOriented","name":"Cross3DOriented","rightLabel":"Class-Function","type":"method","description":"Draws an oriented cross. Specify origin in world space.","leftLabel":"void","snippet":"Cross3DOriented(${1:Vector Vector_1},${2:Quaternion Quaternion_2},${3:float float_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:bool bool_8},${9:float float_9})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Cross3DOriented"},{"displayText":"CDebugOverlayScriptHelper:DrawTickMarkedLine","name":"DrawTickMarkedLine","rightLabel":"Class-Function","type":"method","description":"Draws a dashed line. Specify endpoints in world space.","leftLabel":"void","snippet":"DrawTickMarkedLine(${1:Vector Vector_1},${2:Vector Vector_2},${3:float float_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:int int_8},${9:bool bool_9},${10:float float_10})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.DrawTickMarkedLine"},{"displayText":"CDebugOverlayScriptHelper:EntityAttachments","name":"EntityAttachments","rightLabel":"Class-Function","type":"method","description":"Draws the attachments of the entity","leftLabel":"void","snippet":"EntityAttachments(${1:ehandle ehandle_1},${2:float float_2},${3:float float_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.EntityAttachments"},{"displayText":"CDebugOverlayScriptHelper:EntityAxis","name":"EntityAxis","rightLabel":"Class-Function","type":"method","description":"Draws the axis of the entity origin","leftLabel":"void","snippet":"EntityAxis(${1:ehandle ehandle_1},${2:float float_2},${3:bool bool_3},${4:float float_4})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.EntityAxis"},{"displayText":"CDebugOverlayScriptHelper:EntityBounds","name":"EntityBounds","rightLabel":"Class-Function","type":"method","description":"Draws bounds of an entity","leftLabel":"void","snippet":"EntityBounds(${1:ehandle ehandle_1},${2:int int_2},${3:int int_3},${4:int int_4},${5:int int_5},${6:bool bool_6},${7:float float_7})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.EntityBounds"},{"displayText":"CDebugOverlayScriptHelper:EntitySkeleton","name":"EntitySkeleton","rightLabel":"Class-Function","type":"method","description":"Draws the skeleton of the entity","leftLabel":"void","snippet":"EntitySkeleton(${1:ehandle ehandle_1},${2:float float_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.EntitySkeleton"},{"displayText":"CDebugOverlayScriptHelper:EntityText","name":"EntityText","rightLabel":"Class-Function","type":"method","description":"Draws text on an entity","leftLabel":"void","snippet":"EntityText(${1:ehandle ehandle_1},${2:int int_2},${3:string string_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:float float_8})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.EntityText"},{"displayText":"CDebugOverlayScriptHelper:FilledRect2D","name":"FilledRect2D","rightLabel":"Class-Function","type":"method","description":"Draws a screen-space filled 2D rectangle. Coordinates are in pixels.","leftLabel":"void","snippet":"FilledRect2D(${1:Vector2D Vector2D_1},${2:Vector2D Vector2D_2},${3:int int_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:float float_7})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.FilledRect2D"},{"displayText":"CDebugOverlayScriptHelper:HorzArrow","name":"HorzArrow","rightLabel":"Class-Function","type":"method","description":"Draws a horizontal arrow. Specify endpoints in world space.","leftLabel":"void","snippet":"HorzArrow(${1:Vector Vector_1},${2:Vector Vector_2},${3:float float_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:bool bool_8},${9:float float_9})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.HorzArrow"},{"displayText":"CDebugOverlayScriptHelper:Line","name":"Line","rightLabel":"Class-Function","type":"method","description":"Draws a line between two points","leftLabel":"void","snippet":"Line(${1:Vector Vector_1},${2:Vector Vector_2},${3:int int_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:bool bool_7},${8:float float_8})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Line"},{"displayText":"CDebugOverlayScriptHelper:Line2D","name":"Line2D","rightLabel":"Class-Function","type":"method","description":"Draws a line between two points in screenspace","leftLabel":"void","snippet":"Line2D(${1:Vector2D Vector2D_1},${2:Vector2D Vector2D_2},${3:int int_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:float float_7})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Line2D"},{"displayText":"CDebugOverlayScriptHelper:PopDebugOverlayScope","name":"PopDebugOverlayScope","rightLabel":"Class-Function","type":"method","description":"Pops the identifier used to group overlays. Overlays marked with this identifier can be deleted in a big batch.","leftLabel":"void","snippet":"PopDebugOverlayScope()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.PopDebugOverlayScope"},{"displayText":"CDebugOverlayScriptHelper:PushAndClearDebugOverlayScope","name":"PushAndClearDebugOverlayScope","rightLabel":"Class-Function","type":"method","description":"Pushes an identifier used to group overlays. Deletes all existing overlays using this overlay id.","leftLabel":"void","snippet":"PushAndClearDebugOverlayScope(${1:utlstringtoken utlstringtoken_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.PushAndClearDebugOverlayScope"},{"displayText":"CDebugOverlayScriptHelper:PushDebugOverlayScope","name":"PushDebugOverlayScope","rightLabel":"Class-Function","type":"method","description":"Pushes an identifier used to group overlays. Overlays marked with this identifier can be deleted in a big batch.","leftLabel":"void","snippet":"PushDebugOverlayScope(${1:utlstringtoken utlstringtoken_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.PushDebugOverlayScope"},{"displayText":"CDebugOverlayScriptHelper:RemoveAllInScope","name":"RemoveAllInScope","rightLabel":"Class-Function","type":"method","description":"Removes all overlays marked with a specific identifier, regardless of their lifetime.","leftLabel":"void","snippet":"RemoveAllInScope(${1:utlstringtoken utlstringtoken_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.RemoveAllInScope"},{"displayText":"CDebugOverlayScriptHelper:SolidCone","name":"SolidCone","rightLabel":"Class-Function","type":"method","description":"Draws a solid cone. Specify endpoint and direction in world space.","leftLabel":"void","snippet":"SolidCone(${1:Vector Vector_1},${2:Vector Vector_2},${3:float float_3},${4:float float_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:int int_8},${9:bool bool_9},${10:float float_10})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.SolidCone"},{"displayText":"CDebugOverlayScriptHelper:Sphere","name":"Sphere","rightLabel":"Class-Function","type":"method","description":"Draws a wireframe sphere. Specify center in world space.","leftLabel":"void","snippet":"Sphere(${1:Vector Vector_1},${2:float float_2},${3:int int_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:bool bool_7},${8:float float_8})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Sphere"},{"displayText":"CDebugOverlayScriptHelper:SweptBox","name":"SweptBox","rightLabel":"Class-Function","type":"method","description":"Draws a swept box. Specify endpoints in world space and the bounds in local space.","leftLabel":"void","snippet":"SweptBox(${1:Vector Vector_1},${2:Vector Vector_2},${3:Vector Vector_3},${4:Vector Vector_4},${5:Quaternion Quaternion_5},${6:int int_6},${7:int int_7},${8:int int_8},${9:int int_9},${10:float float_10})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.SweptBox"},{"displayText":"CDebugOverlayScriptHelper:Text","name":"Text","rightLabel":"Class-Function","type":"method","description":"Draws 2D text. Specify origin in world space.","leftLabel":"void","snippet":"Text(${1:Vector Vector_1},${2:int int_2},${3:string string_3},${4:float float_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:int int_8},${9:float float_9})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Text"},{"displayText":"CDebugOverlayScriptHelper:Texture","name":"Texture","rightLabel":"Class-Function","type":"method","description":"Draws a screen-space texture. Coordinates are in pixels.","leftLabel":"void","snippet":"Texture(${1:string string_1},${2:Vector2D Vector2D_2},${3:Vector2D Vector2D_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:Vector2D Vector2D_8},${9:Vector2D Vector2D_9},${10:float float_10})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Texture"},{"displayText":"CDebugOverlayScriptHelper:Triangle","name":"Triangle","rightLabel":"Class-Function","type":"method","description":"Draws a filled triangle. Specify vertices in world space.","leftLabel":"void","snippet":"Triangle(${1:Vector Vector_1},${2:Vector Vector_2},${3:Vector Vector_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:bool bool_8},${9:float float_9})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.Triangle"},{"displayText":"CDebugOverlayScriptHelper:UnitTestCycleOverlayRenderType","name":"UnitTestCycleOverlayRenderType","rightLabel":"Class-Function","type":"method","description":"Toggles the overlay render type, for unit tests","leftLabel":"void","snippet":"UnitTestCycleOverlayRenderType()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.UnitTestCycleOverlayRenderType"},{"displayText":"CDebugOverlayScriptHelper:VectorText3D","name":"VectorText3D","rightLabel":"Class-Function","type":"method","description":"Draws 3D text. Specify origin + orientation in world space.","leftLabel":"void","snippet":"VectorText3D(${1:Vector Vector_1},${2:Quaternion Quaternion_2},${3:string string_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:bool bool_8},${9:float float_9})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.VectorText3D"},{"displayText":"CDebugOverlayScriptHelper:VertArrow","name":"VertArrow","rightLabel":"Class-Function","type":"method","description":"Draws a vertical arrow. Specify endpoints in world space.","leftLabel":"void","snippet":"VertArrow(${1:Vector Vector_1},${2:Vector Vector_2},${3:float float_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:bool bool_8},${9:float float_9})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.VertArrow"},{"displayText":"CDebugOverlayScriptHelper:YawArrow","name":"YawArrow","rightLabel":"Class-Function","type":"method","description":"Draws a arrow associated with a specific yaw. Specify endpoints in world space.","leftLabel":"void","snippet":"YawArrow(${1:Vector Vector_1},${2:float float_2},${3:float float_3},${4:float float_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:int int_8},${9:bool bool_9},${10:float float_10})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDebugOverlayScriptHelper.YawArrow"},{"displayText":"CDotaQuest:AddSubquest","name":"AddSubquest","rightLabel":"Class-Function","type":"method","description":"Add a subquest to this quest","leftLabel":"void","snippet":"AddSubquest(${1:handle hSubquest})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaQuest.AddSubquest"},{"displayText":"CDotaQuest:CompleteQuest","name":"CompleteQuest","rightLabel":"Class-Function","type":"method","description":"Mark this quest complete","leftLabel":"void","snippet":"CompleteQuest()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaQuest.CompleteQuest"},{"displayText":"CDotaQuest:GetSubquest","name":"GetSubquest","rightLabel":"Class-Function","type":"method","description":"Finds a subquest from this quest by index","leftLabel":"handle","snippet":"GetSubquest(${1:int nIndex})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaQuest.GetSubquest"},{"displayText":"CDotaQuest:GetSubquestByName","name":"GetSubquestByName","rightLabel":"Class-Function","type":"method","description":"Finds a subquest from this quest by name","leftLabel":"handle","snippet":"GetSubquestByName(${1:string pszName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaQuest.GetSubquestByName"},{"displayText":"CDotaQuest:RemoveSubquest","name":"RemoveSubquest","rightLabel":"Class-Function","type":"method","description":"Remove a subquest from this quest","leftLabel":"void","snippet":"RemoveSubquest(${1:handle hSubquest})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaQuest.RemoveSubquest"},{"displayText":"CDotaQuest:SetTextReplaceString","name":"SetTextReplaceString","rightLabel":"Class-Function","type":"method","description":"Set the text replace string for this quest","leftLabel":"void","snippet":"SetTextReplaceString(${1:string pszString})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaQuest.SetTextReplaceString"},{"displayText":"CDotaQuest:SetTextReplaceValue","name":"SetTextReplaceValue","rightLabel":"Class-Function","type":"method","description":"Set a quest value","leftLabel":"void","snippet":"SetTextReplaceValue(${1:int valueSlot},${2:int value})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaQuest.SetTextReplaceValue"},{"displayText":"CDotaSubquestBase:CompleteSubquest","name":"CompleteSubquest","rightLabel":"Class-Function","type":"method","description":"Mark this subquest complete","leftLabel":"void","snippet":"CompleteSubquest()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaSubquestBase.CompleteSubquest"},{"displayText":"CDotaSubquestBase:SetTextReplaceString","name":"SetTextReplaceString","rightLabel":"Class-Function","type":"method","description":"Set the text replace string for this subquest","leftLabel":"void","snippet":"SetTextReplaceString(${1:string pszString})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaSubquestBase.SetTextReplaceString"},{"displayText":"CDotaSubquestBase:SetTextReplaceValue","name":"SetTextReplaceValue","rightLabel":"Class-Function","type":"method","description":"Set a subquest value","leftLabel":"void","snippet":"SetTextReplaceValue(${1:int valueSlot},${2:int value})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CDotaSubquestBase.SetTextReplaceValue"},{"displayText":"CEntityInstance:ConnectOutput","name":"ConnectOutput","rightLabel":"Class-Function","type":"method","description":"Adds an I/O connection that will call the named function on this entity when the specified output fires.","leftLabel":"void","snippet":"ConnectOutput(${1:string string_1},${2:string string_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.ConnectOutput"},{"displayText":"CEntityInstance:Destroy","name":"Destroy","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"void","snippet":"Destroy()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.Destroy"},{"displayText":"CEntityInstance:DisconnectOutput","name":"DisconnectOutput","rightLabel":"Class-Function","type":"method","description":"Removes a connected script function from an I/O event on this entity.","leftLabel":"void","snippet":"DisconnectOutput(${1:string string_1},${2:string string_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.DisconnectOutput"},{"displayText":"CEntityInstance:DisconnectRedirectedOutput","name":"DisconnectRedirectedOutput","rightLabel":"Class-Function","type":"method","description":"Removes a connected script function from an I/O event on the passed entity.","leftLabel":"void","snippet":"DisconnectRedirectedOutput(${1:string string_1},${2:string string_2},${3:handle handle_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.DisconnectRedirectedOutput"},{"displayText":"CEntityInstance:FireOutput","name":"FireOutput","rightLabel":"Class-Function","type":"method","description":"Fire an entity output","leftLabel":"void","snippet":"FireOutput(${1:string string_1},${2:handle handle_2},${3:handle handle_3},${4:table table_4},${5:float float_5})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.FireOutput"},{"displayText":"CEntityInstance:GetClassname","name":"GetClassname","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"string","snippet":"GetClassname()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetClassname"},{"displayText":"CEntityInstance:GetDebugName","name":"GetDebugName","rightLabel":"Class-Function","type":"method","description":"Get the entity name w/help if not defined (i.e. classname/etc)","leftLabel":"string","snippet":"GetDebugName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetDebugName"},{"displayText":"CEntityInstance:GetEntityHandle","name":"GetEntityHandle","rightLabel":"Class-Function","type":"method","description":"Get the entity as an EHANDLE","leftLabel":"ehandle","snippet":"GetEntityHandle()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetEntityHandle"},{"displayText":"CEntityInstance:GetEntityIndex","name":"GetEntityIndex","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"GetEntityIndex()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetEntityIndex"},{"displayText":"CEntityInstance:GetIntAttr","name":"GetIntAttr","rightLabel":"Class-Function","type":"method","description":"Get Integer Attribute","leftLabel":"int","snippet":"GetIntAttr(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetIntAttr"},{"displayText":"CEntityInstance:GetName","name":"GetName","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"string","snippet":"GetName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetName"},{"displayText":"CEntityInstance:GetOrCreatePrivateScriptScope","name":"GetOrCreatePrivateScriptScope","rightLabel":"Class-Function","type":"method","description":"Retrieve, creating if necessary, the private per-instance script-side data associated with an entity","leftLabel":"handle","snippet":"GetOrCreatePrivateScriptScope()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetOrCreatePrivateScriptScope"},{"displayText":"CEntityInstance:GetOrCreatePublicScriptScope","name":"GetOrCreatePublicScriptScope","rightLabel":"Class-Function","type":"method","description":"Retrieve, creating if necessary, the public script-side data associated with an entity","leftLabel":"handle","snippet":"GetOrCreatePublicScriptScope()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetOrCreatePublicScriptScope"},{"displayText":"CEntityInstance:GetPrivateScriptScope","name":"GetPrivateScriptScope","rightLabel":"Class-Function","type":"method","description":"Retrieve the private per-instance script-side data associated with an entity","leftLabel":"handle","snippet":"GetPrivateScriptScope()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetPrivateScriptScope"},{"displayText":"CEntityInstance:GetPublicScriptScope","name":"GetPublicScriptScope","rightLabel":"Class-Function","type":"method","description":"Retrieve the public script-side data associated with an entity","leftLabel":"handle","snippet":"GetPublicScriptScope()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.GetPublicScriptScope"},{"displayText":"CEntityInstance:RedirectOutput","name":"RedirectOutput","rightLabel":"Class-Function","type":"method","description":"Adds an I/O connection that will call the named function on the passed entity when the specified output fires.","leftLabel":"void","snippet":"RedirectOutput(${1:string string_1},${2:string string_2},${3:handle handle_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.RedirectOutput"},{"displayText":"CEntityInstance:RemoveSelf","name":"RemoveSelf","rightLabel":"Class-Function","type":"method","description":"Delete this entity","leftLabel":"void","snippet":"RemoveSelf()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.RemoveSelf"},{"displayText":"CEntityInstance:SetIntAttr","name":"SetIntAttr","rightLabel":"Class-Function","type":"method","description":"Set Integer Attribute","leftLabel":"void","snippet":"SetIntAttr(${1:string string_1},${2:int int_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.SetIntAttr"},{"displayText":"CEntityInstance:entindex","name":"entindex","rightLabel":"Class-Function","type":"method","description":"No Description","leftLabel":"int","snippet":"entindex()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEntityInstance.entindex"},{"displayText":"CEnvEntityMaker:SpawnEntity","name":"SpawnEntity","rightLabel":"Class-Function","type":"method","description":"Create an entity at the location of the maker","leftLabel":"void","snippet":"SpawnEntity()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvEntityMaker.SpawnEntity"},{"displayText":"CEnvEntityMaker:SpawnEntityAtEntityOrigin","name":"SpawnEntityAtEntityOrigin","rightLabel":"Class-Function","type":"method","description":"Create an entity at the location of a specified entity instance","leftLabel":"void","snippet":"SpawnEntityAtEntityOrigin(${1:handle hEntity})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvEntityMaker.SpawnEntityAtEntityOrigin"},{"displayText":"CEnvEntityMaker:SpawnEntityAtLocation","name":"SpawnEntityAtLocation","rightLabel":"Class-Function","type":"method","description":"Create an entity at a specified location and orientaton, orientation is Euler angle in degrees (pitch, yaw, roll)","leftLabel":"void","snippet":"SpawnEntityAtLocation(${1:Vector vecAlternateOrigin},${2:Vector vecAlternateAngles})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvEntityMaker.SpawnEntityAtLocation"},{"displayText":"CEnvEntityMaker:SpawnEntityAtNamedEntityOrigin","name":"SpawnEntityAtNamedEntityOrigin","rightLabel":"Class-Function","type":"method","description":"Create an entity at the location of a named entity","leftLabel":"void","snippet":"SpawnEntityAtNamedEntityOrigin(${1:string pszName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvEntityMaker.SpawnEntityAtNamedEntityOrigin"},{"displayText":"CEnvProjectedTexture:SetFarRange","name":"SetFarRange","rightLabel":"Class-Function","type":"method","description":"Set light maximum range","leftLabel":"void","snippet":"SetFarRange(${1:float flRange})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvProjectedTexture.SetFarRange"},{"displayText":"CEnvProjectedTexture:SetLinearAttenuation","name":"SetLinearAttenuation","rightLabel":"Class-Function","type":"method","description":"Set light linear attenuation value","leftLabel":"void","snippet":"SetLinearAttenuation(${1:float flAtten})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvProjectedTexture.SetLinearAttenuation"},{"displayText":"CEnvProjectedTexture:SetNearRange","name":"SetNearRange","rightLabel":"Class-Function","type":"method","description":"Set light minimum range","leftLabel":"void","snippet":"SetNearRange(${1:float flRange})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvProjectedTexture.SetNearRange"},{"displayText":"CEnvProjectedTexture:SetQuadraticAttenuation","name":"SetQuadraticAttenuation","rightLabel":"Class-Function","type":"method","description":"Set light quadratic attenuation value","leftLabel":"void","snippet":"SetQuadraticAttenuation(${1:float flAtten})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvProjectedTexture.SetQuadraticAttenuation"},{"displayText":"CEnvProjectedTexture:SetVolumetrics","name":"SetVolumetrics","rightLabel":"Class-Function","type":"method","description":"Turn on/off light volumetrics: bool bOn, float flIntensity, float flNoise, int nPlanes, float flPlaneOffset","leftLabel":"void","snippet":"SetVolumetrics(${1:bool bOn},${2:float flIntensity},${3:float flNoise},${4:int nPlanes},${5:float flPlaneOffset})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CEnvProjectedTexture.SetVolumetrics"},{"displayText":"CInfoData:QueryColor","name":"QueryColor","rightLabel":"Class-Function","type":"method","description":"Query color data for this key","leftLabel":"Vector","snippet":"QueryColor(${1:utlstringtoken tok},${2:Vector vDefault})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CInfoData.QueryColor"},{"displayText":"CInfoData:QueryFloat","name":"QueryFloat","rightLabel":"Class-Function","type":"method","description":"Query float data for this key","leftLabel":"float","snippet":"QueryFloat(${1:utlstringtoken tok},${2:float flDefault})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CInfoData.QueryFloat"},{"displayText":"CInfoData:QueryInt","name":"QueryInt","rightLabel":"Class-Function","type":"method","description":"Query int data for this key","leftLabel":"int","snippet":"QueryInt(${1:utlstringtoken tok},${2:int nDefault})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CInfoData.QueryInt"},{"displayText":"CInfoData:QueryNumber","name":"QueryNumber","rightLabel":"Class-Function","type":"method","description":"Query number data for this key","leftLabel":"float","snippet":"QueryNumber(${1:utlstringtoken tok},${2:float flDefault})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CInfoData.QueryNumber"},{"displayText":"CInfoData:QueryString","name":"QueryString","rightLabel":"Class-Function","type":"method","description":"Query string data for this key","leftLabel":"string","snippet":"QueryString(${1:utlstringtoken tok},${2:string pDefault})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CInfoData.QueryString"},{"displayText":"CInfoData:QueryVector","name":"QueryVector","rightLabel":"Class-Function","type":"method","description":"Query vector data for this key","leftLabel":"Vector","snippet":"QueryVector(${1:utlstringtoken tok},${2:Vector vDefault})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CInfoData.QueryVector"},{"displayText":"CMarkupVolumeTagged:HasTag","name":"HasTag","rightLabel":"Class-Function","type":"method","description":"Does this volume have the given tag.","leftLabel":"bool","snippet":"HasTag(${1:string pszTagName})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CMarkupVolumeTagged.HasTag"},{"displayText":"CNativeOutputs:AddOutput","name":"AddOutput","rightLabel":"Class-Function","type":"method","description":"Add an output","leftLabel":"void","snippet":"AddOutput(${1:string string_1},${2:string string_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CNativeOutputs.AddOutput"},{"displayText":"CNativeOutputs:Init","name":"Init","rightLabel":"Class-Function","type":"method","description":"Initialize with number of outputs","leftLabel":"void","snippet":"Init(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CNativeOutputs.Init"},{"displayText":"CPhysicsProp:DisableMotion","name":"DisableMotion","rightLabel":"Class-Function","type":"method","description":"Disable motion for the prop","leftLabel":"void","snippet":"DisableMotion()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPhysicsProp.DisableMotion"},{"displayText":"CPhysicsProp:EnableMotion","name":"EnableMotion","rightLabel":"Class-Function","type":"method","description":"Enable motion for the prop","leftLabel":"void","snippet":"EnableMotion()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPhysicsProp.EnableMotion"},{"displayText":"CPointTemplate:DeleteCreatedSpawnGroups","name":"DeleteCreatedSpawnGroups","rightLabel":"Class-Function","type":"method","description":"DeleteCreatedSpawnGroups() : Deletes any spawn groups that this point_template has spawned. Note: The point_template will not be deleted by this.","leftLabel":"void","snippet":"DeleteCreatedSpawnGroups()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPointTemplate.DeleteCreatedSpawnGroups"},{"displayText":"CPointTemplate:ForceSpawn","name":"ForceSpawn","rightLabel":"Class-Function","type":"method","description":"ForceSpawn() : Spawns all of the entities the point_template is pointing at.","leftLabel":"void","snippet":"ForceSpawn()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPointTemplate.ForceSpawn"},{"displayText":"CPointTemplate:GetSpawnedEntities","name":"GetSpawnedEntities","rightLabel":"Class-Function","type":"method","description":"GetSpawnedEntities() : Get the list of the most recent spawned entities","leftLabel":"handle","snippet":"GetSpawnedEntities()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPointTemplate.GetSpawnedEntities"},{"displayText":"CPointTemplate:SetSpawnCallback","name":"SetSpawnCallback","rightLabel":"Class-Function","type":"method","description":"SetSpawnCallback( hCallbackFunc, hCallbackScope, hCallbackData ) : Set a callback for when the template spawns entities. The spawned entities will be passed in as an array.","leftLabel":"void","snippet":"SetSpawnCallback(${1:handle hCallbackFunc},${2:handle hCallbackScope})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPointTemplate.SetSpawnCallback"},{"displayText":"CPointWorldText:SetMessage","name":"SetMessage","rightLabel":"Class-Function","type":"method","description":"Set the message on this entity.","leftLabel":"void","snippet":"SetMessage(${1:string pMessage})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPointWorldText.SetMessage"},{"displayText":"CPropHMDAvatar:GetVRHand","name":"GetVRHand","rightLabel":"Class-Function","type":"method","description":"Get VR hand by ID","leftLabel":"handle","snippet":"GetVRHand(${1:int nHandID})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPropHMDAvatar.GetVRHand"},{"displayText":"CPropVRHand:AddHandAttachment","name":"AddHandAttachment","rightLabel":"Class-Function","type":"method","description":"Add the attachment to this hand","leftLabel":"void","snippet":"AddHandAttachment(${1:handle hAttachment})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPropVRHand.AddHandAttachment"},{"displayText":"CPropVRHand:FireHapticPulse","name":"FireHapticPulse","rightLabel":"Class-Function","type":"method","description":"Fire a haptic pulse on this hand. [0,2] for strength.","leftLabel":"void","snippet":"FireHapticPulse(${1:int nStrength})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPropVRHand.FireHapticPulse"},{"displayText":"CPropVRHand:GetHandAttachment","name":"GetHandAttachment","rightLabel":"Class-Function","type":"method","description":"Get the attachment on this hand","leftLabel":"handle","snippet":"GetHandAttachment()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPropVRHand.GetHandAttachment"},{"displayText":"CPropVRHand:SetHandAttachment","name":"SetHandAttachment","rightLabel":"Class-Function","type":"method","description":"Set the attachment for this hand","leftLabel":"void","snippet":"SetHandAttachment(${1:handle hAttachment})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CPropVRHand.SetHandAttachment"},{"displayText":"CSceneEntity:AddBroadcastTeamTarget","name":"AddBroadcastTeamTarget","rightLabel":"Class-Function","type":"method","description":"Adds a team (by index) to the broadcast list","leftLabel":"void","snippet":"AddBroadcastTeamTarget(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.AddBroadcastTeamTarget"},{"displayText":"CSceneEntity:Cancel","name":"Cancel","rightLabel":"Class-Function","type":"method","description":"Cancel scene playback","leftLabel":"void","snippet":"Cancel()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.Cancel"},{"displayText":"CSceneEntity:EstimateLength","name":"EstimateLength","rightLabel":"Class-Function","type":"method","description":"Returns length of this scene in seconds.","leftLabel":"float","snippet":"EstimateLength()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.EstimateLength"},{"displayText":"CSceneEntity:FindCamera","name":"FindCamera","rightLabel":"Class-Function","type":"method","description":"Get the camera","leftLabel":"handle","snippet":"FindCamera()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.FindCamera"},{"displayText":"CSceneEntity:FindNamedEntity","name":"FindNamedEntity","rightLabel":"Class-Function","type":"method","description":"given an entity reference, such as !target, get actual entity from scene object","leftLabel":"handle","snippet":"FindNamedEntity(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.FindNamedEntity"},{"displayText":"CSceneEntity:IsPaused","name":"IsPaused","rightLabel":"Class-Function","type":"method","description":"If this scene is currently paused.","leftLabel":"bool","snippet":"IsPaused()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.IsPaused"},{"displayText":"CSceneEntity:IsPlayingBack","name":"IsPlayingBack","rightLabel":"Class-Function","type":"method","description":"If this scene is currently playing.","leftLabel":"bool","snippet":"IsPlayingBack()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.IsPlayingBack"},{"displayText":"CSceneEntity:LoadSceneFromString","name":"LoadSceneFromString","rightLabel":"Class-Function","type":"method","description":"given a dummy scene name and a vcd string, load the scene","leftLabel":"bool","snippet":"LoadSceneFromString(${1:string string_1},${2:string string_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.LoadSceneFromString"},{"displayText":"CSceneEntity:RemoveBroadcastTeamTarget","name":"RemoveBroadcastTeamTarget","rightLabel":"Class-Function","type":"method","description":"Removes a team (by index) from the broadcast list","leftLabel":"void","snippet":"RemoveBroadcastTeamTarget(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.RemoveBroadcastTeamTarget"},{"displayText":"CSceneEntity:Start","name":"Start","rightLabel":"Class-Function","type":"method","description":"Start scene playback, takes activatorEntity as param","leftLabel":"void","snippet":"Start(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CSceneEntity.Start"},{"displayText":"CScriptKeyValues:GetValue","name":"GetValue","rightLabel":"Class-Function","type":"method","description":"Reads a spawn key","leftLabel":"table","snippet":"GetValue(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptKeyValues.GetValue"},{"displayText":"CScriptPrecacheContext:AddResource","name":"AddResource","rightLabel":"Class-Function","type":"method","description":"Precaches a specific resource","leftLabel":"void","snippet":"AddResource(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptPrecacheContext.AddResource"},{"displayText":"CScriptPrecacheContext:GetValue","name":"GetValue","rightLabel":"Class-Function","type":"method","description":"Reads a spawn key","leftLabel":"table","snippet":"GetValue(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CScriptPrecacheContext.GetValue"},{"displayText":"GlobalSys:CommandLineCheck","name":"CommandLineCheck","rightLabel":"Class-Function","type":"method","description":"CommandLineCheck(name) : returns true if the command line param was used, otherwise false.","leftLabel":"table","snippet":"CommandLineCheck(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GlobalSys.CommandLineCheck"},{"displayText":"GlobalSys:CommandLineFloat","name":"CommandLineFloat","rightLabel":"Class-Function","type":"method","description":"CommandLineFloat(name) : returns the command line param as a float.","leftLabel":"table","snippet":"CommandLineFloat(${1:string string_1},${2:float float_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GlobalSys.CommandLineFloat"},{"displayText":"GlobalSys:CommandLineInt","name":"CommandLineInt","rightLabel":"Class-Function","type":"method","description":"CommandLineInt(name) : returns the command line param as an int.","leftLabel":"table","snippet":"CommandLineInt(${1:string string_1},${2:int int_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GlobalSys.CommandLineInt"},{"displayText":"GlobalSys:CommandLineStr","name":"CommandLineStr","rightLabel":"Class-Function","type":"method","description":"CommandLineStr(name) : returns the command line param as a string.","leftLabel":"table","snippet":"CommandLineStr(${1:string string_1},${2:string string_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GlobalSys.CommandLineStr"},{"displayText":"GridNav:CanFindPath","name":"CanFindPath","rightLabel":"Class-Function","type":"method","description":"Determine if it is possible to reach the specified end point from the specified start point. bool (vStart, vEnd)","leftLabel":"bool","snippet":"CanFindPath(${1:Vector Vector_1},${2:Vector Vector_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.CanFindPath"},{"displayText":"GridNav:DestroyTreesAroundPoint","name":"DestroyTreesAroundPoint","rightLabel":"Class-Function","type":"method","description":"Destroy all trees in the area(vPosition, flRadius, bFullCollision","leftLabel":"void","snippet":"DestroyTreesAroundPoint(${1:Vector Vector_1},${2:float float_2},${3:bool bool_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.DestroyTreesAroundPoint"},{"displayText":"GridNav:FindPathLength","name":"FindPathLength","rightLabel":"Class-Function","type":"method","description":"Find a path between the two points an return the length of the path. If there is not a path between the points the returned value will be -1. float (vStart, vEnd )","leftLabel":"float","snippet":"FindPathLength(${1:Vector Vector_1},${2:Vector Vector_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.FindPathLength"},{"displayText":"GridNav:GetAllTreesAroundPoint","name":"GetAllTreesAroundPoint","rightLabel":"Class-Function","type":"method","description":"Returns a table full of tree HSCRIPTS (vPosition, flRadius, bFullCollision).","leftLabel":"table","snippet":"GetAllTreesAroundPoint(${1:Vector Vector_1},${2:float float_2},${3:bool bool_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.GetAllTreesAroundPoint"},{"displayText":"GridNav:GridPosToWorldCenterX","name":"GridPosToWorldCenterX","rightLabel":"Class-Function","type":"method","description":"Get the X position of the center of a given X index","leftLabel":"float","snippet":"GridPosToWorldCenterX(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.GridPosToWorldCenterX"},{"displayText":"GridNav:GridPosToWorldCenterY","name":"GridPosToWorldCenterY","rightLabel":"Class-Function","type":"method","description":"Get the Y position of the center of a given Y index","leftLabel":"float","snippet":"GridPosToWorldCenterY(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.GridPosToWorldCenterY"},{"displayText":"GridNav:IsBlocked","name":"IsBlocked","rightLabel":"Class-Function","type":"method","description":"Checks whether the given position is blocked","leftLabel":"bool","snippet":"IsBlocked(${1:Vector Vector_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.IsBlocked"},{"displayText":"GridNav:IsNearbyTree","name":"IsNearbyTree","rightLabel":"Class-Function","type":"method","description":"(position, radius, checkFullTreeRadius?) Checks whether there are any trees overlapping the given point","leftLabel":"bool","snippet":"IsNearbyTree(${1:Vector Vector_1},${2:float float_2},${3:bool bool_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.IsNearbyTree"},{"displayText":"GridNav:IsTraversable","name":"IsTraversable","rightLabel":"Class-Function","type":"method","description":"Checks whether the given position is traversable","leftLabel":"bool","snippet":"IsTraversable(${1:Vector Vector_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.IsTraversable"},{"displayText":"GridNav:RegrowAllTrees","name":"RegrowAllTrees","rightLabel":"Class-Function","type":"method","description":"Causes all trees in the map to regrow","leftLabel":"void","snippet":"RegrowAllTrees()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.RegrowAllTrees"},{"displayText":"GridNav:WorldToGridPosX","name":"WorldToGridPosX","rightLabel":"Class-Function","type":"method","description":"Get the X index of a given world X position","leftLabel":"int","snippet":"WorldToGridPosX(${1:float float_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.WorldToGridPosX"},{"displayText":"GridNav:WorldToGridPosY","name":"WorldToGridPosY","rightLabel":"Class-Function","type":"method","description":"Get the Y index of a given world Y position","leftLabel":"int","snippet":"WorldToGridPosY(${1:float float_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/GridNav.WorldToGridPosY"},{"displayText":"ProjectileManager:CreateLinearProjectile","name":"CreateLinearProjectile","rightLabel":"Class-Function","type":"method","description":"Creates a linear projectile and returns the projectile ID","leftLabel":"int","snippet":"CreateLinearProjectile(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/ProjectileManager.CreateLinearProjectile"},{"displayText":"ProjectileManager:CreateTrackingProjectile","name":"CreateTrackingProjectile","rightLabel":"Class-Function","type":"method","description":"Creates a tracking projectile","leftLabel":"void","snippet":"CreateTrackingProjectile(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/ProjectileManager.CreateTrackingProjectile"},{"displayText":"ProjectileManager:DestroyLinearProjectile","name":"DestroyLinearProjectile","rightLabel":"Class-Function","type":"method","description":"Destroys the linear projectile matching the argument ID","leftLabel":"void","snippet":"DestroyLinearProjectile(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/ProjectileManager.DestroyLinearProjectile"},{"displayText":"ProjectileManager:GetLinearProjectileVelocity","name":"GetLinearProjectileVelocity","rightLabel":"Class-Function","type":"method","description":"Returns a vector representing the current velocity of the projectile.","leftLabel":"Vector","snippet":"GetLinearProjectileVelocity(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/ProjectileManager.GetLinearProjectileVelocity"},{"displayText":"ProjectileManager:ProjectileDodge","name":"ProjectileDodge","rightLabel":"Class-Function","type":"method","description":"Makes the specified unit dodge projectiles","leftLabel":"void","snippet":"ProjectileDodge(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/ProjectileManager.ProjectileDodge"},{"displayText":"Vector:Cross","name":"Cross","rightLabel":"Class-Function","type":"method","description":"Cross product of two vectors","leftLabel":"Vector","snippet":"Cross(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Cross"},{"displayText":"Vector:Dot","name":"Dot","rightLabel":"Class-Function","type":"method","description":"Dot product of two vectors","leftLabel":"float","snippet":"Dot(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Dot"},{"displayText":"Vector:Length","name":"Length","rightLabel":"Class-Function","type":"method","description":"Length of the Vector","leftLabel":"float","snippet":"Length()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length"},{"displayText":"Vector:Length2D","name":"Length2D","rightLabel":"Class-Function","type":"method","description":"Length of the Vector in the XY plane","leftLabel":"float","snippet":"Length2D()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length2D"},{"displayText":"Vector:Normalized","name":"Normalized","rightLabel":"Class-Function","type":"method","description":"Returns the vector normalized","leftLabel":"Vector","snippet":"Normalized()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Normalized"},{"displayText":"Vector:Cross","name":"Cross","rightLabel":"Class-Function","type":"method","description":"Cross product of two vectors","leftLabel":"Vector","snippet":"Cross(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Cross"},{"displayText":"Vector:Dot","name":"Dot","rightLabel":"Class-Function","type":"method","description":"Dot product of two vectors","leftLabel":"float","snippet":"Dot(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Dot"},{"displayText":"Vector:Length","name":"Length","rightLabel":"Class-Function","type":"method","description":"Length of the Vector","leftLabel":"float","snippet":"Length()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length"},{"displayText":"Vector:Length2D","name":"Length2D","rightLabel":"Class-Function","type":"method","description":"Length of the Vector in the XY plane","leftLabel":"float","snippet":"Length2D()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length2D"},{"displayText":"Vector:Normalized","name":"Normalized","rightLabel":"Class-Function","type":"method","description":"Returns the vector normalized","leftLabel":"Vector","snippet":"Normalized()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Normalized"},{"displayText":"Vector:Cross","name":"Cross","rightLabel":"Class-Function","type":"method","description":"Cross product of two vectors","leftLabel":"Vector","snippet":"Cross(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Cross"},{"displayText":"Vector:Dot","name":"Dot","rightLabel":"Class-Function","type":"method","description":"Dot product of two vectors","leftLabel":"float","snippet":"Dot(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Dot"},{"displayText":"Vector:Length","name":"Length","rightLabel":"Class-Function","type":"method","description":"Length of the Vector","leftLabel":"float","snippet":"Length()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length"},{"displayText":"Vector:Length2D","name":"Length2D","rightLabel":"Class-Function","type":"method","description":"Length of the Vector in the XY plane","leftLabel":"float","snippet":"Length2D()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length2D"},{"displayText":"Vector:Normalized","name":"Normalized","rightLabel":"Class-Function","type":"method","description":"Returns the vector normalized","leftLabel":"Vector","snippet":"Normalized()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Normalized"},{"displayText":"Vector:Cross","name":"Cross","rightLabel":"Class-Function","type":"method","description":"Cross product of two vectors","leftLabel":"Vector","snippet":"Cross(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Cross"},{"displayText":"Vector:Dot","name":"Dot","rightLabel":"Class-Function","type":"method","description":"Dot product of two vectors","leftLabel":"float","snippet":"Dot(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Dot"},{"displayText":"Vector:Length","name":"Length","rightLabel":"Class-Function","type":"method","description":"Length of the Vector","leftLabel":"float","snippet":"Length()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length"},{"displayText":"Vector:Length2D","name":"Length2D","rightLabel":"Class-Function","type":"method","description":"Length of the Vector in the XY plane","leftLabel":"float","snippet":"Length2D()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length2D"},{"displayText":"Vector:Normalized","name":"Normalized","rightLabel":"Class-Function","type":"method","description":"Returns the vector normalized","leftLabel":"Vector","snippet":"Normalized()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Normalized"},{"displayText":"Vector:Cross","name":"Cross","rightLabel":"Class-Function","type":"method","description":"Cross product of two vectors","leftLabel":"Vector","snippet":"Cross(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Cross"},{"displayText":"Vector:Dot","name":"Dot","rightLabel":"Class-Function","type":"method","description":"Dot product of two vectors","leftLabel":"float","snippet":"Dot(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Dot"},{"displayText":"Vector:Length","name":"Length","rightLabel":"Class-Function","type":"method","description":"Length of the Vector","leftLabel":"float","snippet":"Length()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length"},{"displayText":"Vector:Length2D","name":"Length2D","rightLabel":"Class-Function","type":"method","description":"Length of the Vector in the XY plane","leftLabel":"float","snippet":"Length2D()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length2D"},{"displayText":"Vector:Normalized","name":"Normalized","rightLabel":"Class-Function","type":"method","description":"Returns the vector normalized","leftLabel":"Vector","snippet":"Normalized()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Normalized"},{"displayText":"Vector:Cross","name":"Cross","rightLabel":"Class-Function","type":"method","description":"Cross product of two vectors","leftLabel":"Vector","snippet":"Cross(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Cross"},{"displayText":"Vector:Dot","name":"Dot","rightLabel":"Class-Function","type":"method","description":"Dot product of two vectors","leftLabel":"float","snippet":"Dot(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Dot"},{"displayText":"Vector:Length","name":"Length","rightLabel":"Class-Function","type":"method","description":"Length of the Vector","leftLabel":"float","snippet":"Length()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length"},{"displayText":"Vector:Length2D","name":"Length2D","rightLabel":"Class-Function","type":"method","description":"Length of the Vector in the XY plane","leftLabel":"float","snippet":"Length2D()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length2D"},{"displayText":"Vector:Normalized","name":"Normalized","rightLabel":"Class-Function","type":"method","description":"Returns the vector normalized","leftLabel":"Vector","snippet":"Normalized()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Normalized"},{"displayText":"Vector:Cross","name":"Cross","rightLabel":"Class-Function","type":"method","description":"Cross product of two vectors","leftLabel":"Vector","snippet":"Cross(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Cross"},{"displayText":"Vector:Dot","name":"Dot","rightLabel":"Class-Function","type":"method","description":"Dot product of two vectors","leftLabel":"float","snippet":"Dot(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Dot"},{"displayText":"Vector:Length","name":"Length","rightLabel":"Class-Function","type":"method","description":"Length of the Vector","leftLabel":"float","snippet":"Length()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length"},{"displayText":"Vector:Length2D","name":"Length2D","rightLabel":"Class-Function","type":"method","description":"Length of the Vector in the XY plane","leftLabel":"float","snippet":"Length2D()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length2D"},{"displayText":"Vector:Normalized","name":"Normalized","rightLabel":"Class-Function","type":"method","description":"Returns the vector normalized","leftLabel":"Vector","snippet":"Normalized()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Normalized"},{"displayText":"Vector:Cross","name":"Cross","rightLabel":"Class-Function","type":"method","description":"Cross product of two vectors","leftLabel":"Vector","snippet":"Cross(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Cross"},{"displayText":"Vector:Dot","name":"Dot","rightLabel":"Class-Function","type":"method","description":"Dot product of two vectors","leftLabel":"float","snippet":"Dot(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Dot"},{"displayText":"Vector:Length","name":"Length","rightLabel":"Class-Function","type":"method","description":"Length of the Vector","leftLabel":"float","snippet":"Length()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length"},{"displayText":"Vector:Length2D","name":"Length2D","rightLabel":"Class-Function","type":"method","description":"Length of the Vector in the XY plane","leftLabel":"float","snippet":"Length2D()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length2D"},{"displayText":"Vector:Normalized","name":"Normalized","rightLabel":"Class-Function","type":"method","description":"Returns the vector normalized","leftLabel":"Vector","snippet":"Normalized()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Normalized"},{"displayText":"Vector:Cross","name":"Cross","rightLabel":"Class-Function","type":"method","description":"Cross product of two vectors","leftLabel":"Vector","snippet":"Cross(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Cross"},{"displayText":"Vector:Dot","name":"Dot","rightLabel":"Class-Function","type":"method","description":"Dot product of two vectors","leftLabel":"float","snippet":"Dot(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Dot"},{"displayText":"Vector:Length","name":"Length","rightLabel":"Class-Function","type":"method","description":"Length of the Vector","leftLabel":"float","snippet":"Length()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length"},{"displayText":"Vector:Length2D","name":"Length2D","rightLabel":"Class-Function","type":"method","description":"Length of the Vector in the XY plane","leftLabel":"float","snippet":"Length2D()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length2D"},{"displayText":"Vector:Normalized","name":"Normalized","rightLabel":"Class-Function","type":"method","description":"Returns the vector normalized","leftLabel":"Vector","snippet":"Normalized()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Normalized"},{"displayText":"Vector:Cross","name":"Cross","rightLabel":"Class-Function","type":"method","description":"Cross product of two vectors","leftLabel":"Vector","snippet":"Cross(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Cross"},{"displayText":"Vector:Dot","name":"Dot","rightLabel":"Class-Function","type":"method","description":"Dot product of two vectors","leftLabel":"float","snippet":"Dot(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Dot"},{"displayText":"Vector:Length","name":"Length","rightLabel":"Class-Function","type":"method","description":"Length of the Vector","leftLabel":"float","snippet":"Length()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length"},{"displayText":"Vector:Length2D","name":"Length2D","rightLabel":"Class-Function","type":"method","description":"Length of the Vector in the XY plane","leftLabel":"float","snippet":"Length2D()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length2D"},{"displayText":"Vector:Normalized","name":"Normalized","rightLabel":"Class-Function","type":"method","description":"Returns the vector normalized","leftLabel":"Vector","snippet":"Normalized()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Normalized"},{"displayText":"Vector:Cross","name":"Cross","rightLabel":"Class-Function","type":"method","description":"Cross product of two vectors","leftLabel":"Vector","snippet":"Cross(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Cross"},{"displayText":"Vector:Dot","name":"Dot","rightLabel":"Class-Function","type":"method","description":"Dot product of two vectors","leftLabel":"float","snippet":"Dot(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Dot"},{"displayText":"Vector:Length","name":"Length","rightLabel":"Class-Function","type":"method","description":"Length of the Vector","leftLabel":"float","snippet":"Length()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length"},{"displayText":"Vector:Length2D","name":"Length2D","rightLabel":"Class-Function","type":"method","description":"Length of the Vector in the XY plane","leftLabel":"float","snippet":"Length2D()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length2D"},{"displayText":"Vector:Normalized","name":"Normalized","rightLabel":"Class-Function","type":"method","description":"Returns the vector normalized","leftLabel":"Vector","snippet":"Normalized()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Normalized"},{"displayText":"CBaseEntity:GetPlayerOwnerID","name":"GetPlayerOwnerID","rightLabel":"Class-Function","type":"method","description":"Get the owner player ID for this unit.","leftLabel":"int","snippet":"GetPlayerOwnerID()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/CBaseEntity.GetPlayerOwnerID"},{"displayText":"Vector:Cross","name":"Cross","rightLabel":"Class-Function","type":"method","description":"Cross product of two vectors","leftLabel":"Vector","snippet":"Cross(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Cross"},{"displayText":"Vector:Dot","name":"Dot","rightLabel":"Class-Function","type":"method","description":"Dot product of two vectors","leftLabel":"float","snippet":"Dot(${1:Vector a},${2:Vector b})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Dot"},{"displayText":"Vector:Length","name":"Length","rightLabel":"Class-Function","type":"method","description":"Length of the Vector","leftLabel":"float","snippet":"Length()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length"},{"displayText":"Vector:Length2D","name":"Length2D","rightLabel":"Class-Function","type":"method","description":"Length of the Vector in the XY plane","leftLabel":"float","snippet":"Length2D()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Vector.Length2D"}]