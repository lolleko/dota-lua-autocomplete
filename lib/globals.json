{"AddFOWViewer":{"displayText":"AddFOWViewer","name":"AddFOWViewer","rightLabel":"Global","type":"function","description":"Add temporary vision for a given team ( nTeamID, vLocation, flRadius, flDuration, bObstructedVision)","leftLabel":"void","snippet":"AddFOWViewer(${1:int int_1},${2:Vector Vector_2},${3:float float_3},${4:float float_4},${5:bool bool_5})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.AddFOWViewer"},"AngleDiff":{"displayText":"AngleDiff","name":"AngleDiff","rightLabel":"Global","type":"function","description":"Returns the number of degrees difference between two yaw angles","leftLabel":"float","snippet":"AngleDiff(${1:float float_1},${2:float float_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.AngleDiff"},"AppendToLogFile":{"displayText":"AppendToLogFile","name":"AppendToLogFile","rightLabel":"Global","type":"function","description":"Appends a string to a log file on the server","leftLabel":"void","snippet":"AppendToLogFile(${1:string string_1},${2:string string_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.AppendToLogFile"},"ApplyDamage":{"displayText":"ApplyDamage","name":"ApplyDamage","rightLabel":"Global","type":"function","description":"Damage an npc.","leftLabel":"float","snippet":"ApplyDamage(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ApplyDamage"},"AxisAngleToQuaternion":{"displayText":"AxisAngleToQuaternion","name":"AxisAngleToQuaternion","rightLabel":"Global","type":"function","description":"(vector,float) constructs a quaternion representing a rotation by angle around the specified vector axis","leftLabel":"Quaternion","snippet":"AxisAngleToQuaternion(${1:Vector Vector_1},${2:float float_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.AxisAngleToQuaternion"},"CalcClosestPointOnEntityOBB":{"displayText":"CalcClosestPointOnEntityOBB","name":"CalcClosestPointOnEntityOBB","rightLabel":"Global","type":"function","description":"Compute the closest point on the OBB of an entity.","leftLabel":"Vector","snippet":"CalcClosestPointOnEntityOBB(${1:handle handle_1},${2:Vector Vector_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CalcClosestPointOnEntityOBB"},"CalcDistanceBetweenEntityOBB":{"displayText":"CalcDistanceBetweenEntityOBB","name":"CalcDistanceBetweenEntityOBB","rightLabel":"Global","type":"function","description":"Compute the distance between two entity OBB. A negative return value indicates an input error. A return value of zero indicates that the OBBs are overlapping.","leftLabel":"float","snippet":"CalcDistanceBetweenEntityOBB(${1:handle handle_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CalcDistanceBetweenEntityOBB"},"CalcDistanceToLineSegment2D":{"displayText":"CalcDistanceToLineSegment2D","name":"CalcDistanceToLineSegment2D","rightLabel":"Global","type":"function","description":"No Description","leftLabel":"float","snippet":"CalcDistanceToLineSegment2D(${1:Vector Vector_1},${2:Vector Vector_2},${3:Vector Vector_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CalcDistanceToLineSegment2D"},"CancelEntityIOEvents":{"displayText":"CancelEntityIOEvents","name":"CancelEntityIOEvents","rightLabel":"Global","type":"function","description":"Create all I/O events for a particular entity","leftLabel":"void","snippet":"CancelEntityIOEvents(${1:ehandle ehandle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CancelEntityIOEvents"},"ClearTeamCustomHealthbarColor":{"displayText":"ClearTeamCustomHealthbarColor","name":"ClearTeamCustomHealthbarColor","rightLabel":"Global","type":"function","description":"( teamNumber )","leftLabel":"void","snippet":"ClearTeamCustomHealthbarColor(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ClearTeamCustomHealthbarColor"},"CreateDamageInfo":{"displayText":"CreateDamageInfo","name":"CreateDamageInfo","rightLabel":"Global","type":"function","description":"(hInflictor, hAttacker, flDamage) - Allocate a damageinfo object, used as an argument to TakeDamage(). Call DestroyDamageInfo( hInfo ) to free the object.","leftLabel":"handle","snippet":"CreateDamageInfo(${1:handle handle_1},${2:handle handle_2},${3:Vector Vector_3},${4:Vector Vector_4},${5:float float_5},${6:int int_6})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateDamageInfo"},"CreateEffect":{"displayText":"CreateEffect","name":"CreateEffect","rightLabel":"Global","type":"function","description":"Pass table - Inputs: entity, effect","leftLabel":"bool","snippet":"CreateEffect(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateEffect"},"CreateHTTPRequest":{"displayText":"CreateHTTPRequest","name":"CreateHTTPRequest","rightLabel":"Global","type":"function","description":"Create an HTTP request.","leftLabel":"handle","snippet":"CreateHTTPRequest(${1:string string_1},${2:string string_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateHTTPRequest"},"CreateHeroForPlayer":{"displayText":"CreateHeroForPlayer","name":"CreateHeroForPlayer","rightLabel":"Global","type":"function","description":"Creates a DOTA hero by its dota_npc_units.txt name and sets it as the given player's controlled hero","leftLabel":"handle","snippet":"CreateHeroForPlayer(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateHeroForPlayer"},"CreateItem":{"displayText":"CreateItem","name":"CreateItem","rightLabel":"Global","type":"function","description":"Create a DOTA item","leftLabel":"handle","snippet":"CreateItem(${1:string string_1},${2:handle handle_2},${3:handle handle_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateItem"},"CreateItemOnPositionForLaunch":{"displayText":"CreateItemOnPositionForLaunch","name":"CreateItemOnPositionForLaunch","rightLabel":"Global","type":"function","description":"Create a physical item at a given location, can start in air (but doesn't clear a space)","leftLabel":"handle","snippet":"CreateItemOnPositionForLaunch(${1:Vector Vector_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateItemOnPositionForLaunch"},"CreateItemOnPositionSync":{"displayText":"CreateItemOnPositionSync","name":"CreateItemOnPositionSync","rightLabel":"Global","type":"function","description":"Create a physical item at a given location","leftLabel":"handle","snippet":"CreateItemOnPositionSync(${1:Vector Vector_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateItemOnPositionSync"},"CreateModifierThinker":{"displayText":"CreateModifierThinker","name":"CreateModifierThinker","rightLabel":"Global","type":"function","description":"Create a modifier not associated with an NPC. ( hCaster, hAbility, modifierName, paramTable, vOrigin, nTeamNumber, bPhantomBlocker )","leftLabel":"handle","snippet":"CreateModifierThinker(${1:handle handle_1},${2:handle handle_2},${3:string string_3},${4:handle handle_4},${5:Vector Vector_5},${6:int int_6},${7:bool bool_7})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateModifierThinker"},"CreateTempTree":{"displayText":"CreateTempTree","name":"CreateTempTree","rightLabel":"Global","type":"function","description":"Create a temporary tree. (vLocation, flDuration).","leftLabel":"void","snippet":"CreateTempTree(${1:Vector Vector_1},${2:float float_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateTempTree"},"CreateTrigger":{"displayText":"CreateTrigger","name":"CreateTrigger","rightLabel":"Global","type":"function","description":"CreateTrigger( vecMin, vecMax ) : Creates and returns an AABB trigger","leftLabel":"handle","snippet":"CreateTrigger(${1:Vector Vector_1},${2:Vector Vector_2},${3:Vector Vector_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateTrigger"},"CreateTriggerRadiusApproximate":{"displayText":"CreateTriggerRadiusApproximate","name":"CreateTriggerRadiusApproximate","rightLabel":"Global","type":"function","description":"CreateTriggerRadiusApproximate( vecOrigin, flRadius ) : Creates and returns an AABB trigger thats bigger than the radius provided","leftLabel":"handle","snippet":"CreateTriggerRadiusApproximate(${1:Vector Vector_1},${2:float float_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateTriggerRadiusApproximate"},"CreateUnitByName":{"displayText":"CreateUnitByName","name":"CreateUnitByName","rightLabel":"Global","type":"function","description":"Creates a DOTA unit by its dota_npc_units.txt name","leftLabel":"handle","snippet":"CreateUnitByName(${1:string string_1},${2:Vector Vector_2},${3:bool bool_3},${4:handle handle_4},${5:handle handle_5},${6:int int_6})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateUnitByName"},"CreateUnitByNameAsync":{"displayText":"CreateUnitByNameAsync","name":"CreateUnitByNameAsync","rightLabel":"Global","type":"function","description":"Creates a DOTA unit by its dota_npc_units.txt name","leftLabel":"int","snippet":"CreateUnitByNameAsync(${1:string string_1},${2:Vector Vector_2},${3:bool bool_3},${4:handle handle_4},${5:handle handle_5},${6:int int_6},${7:handle handle_7})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateUnitByNameAsync"},"CreateUnitFromTable":{"displayText":"CreateUnitFromTable","name":"CreateUnitFromTable","rightLabel":"Global","type":"function","description":"Creates a DOTA unit by its dota_npc_units.txt name from a table of entity key values and a position to spawn at.","leftLabel":"handle","snippet":"CreateUnitFromTable(${1:handle handle_1},${2:Vector Vector_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.CreateUnitFromTable"},"DebugBreak":{"displayText":"DebugBreak","name":"DebugBreak","rightLabel":"Global","type":"function","description":"Breaks in the debugger","leftLabel":"void","snippet":"DebugBreak()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugBreak"},"DebugDrawBox":{"displayText":"DebugDrawBox","name":"DebugDrawBox","rightLabel":"Global","type":"function","description":"Draw a debug overlay box (origin, mins, maxs, forward, r, g, b, a, duration )","leftLabel":"void","snippet":"DebugDrawBox(${1:Vector Vector_1},${2:Vector Vector_2},${3:Vector Vector_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:float float_8})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawBox"},"DebugDrawBoxDirection":{"displayText":"DebugDrawBoxDirection","name":"DebugDrawBoxDirection","rightLabel":"Global","type":"function","description":"Draw a debug forward box (cent, min, max, forward, vRgb, a, duration)","leftLabel":"void","snippet":"DebugDrawBoxDirection(${1:Vector Vector_1},${2:Vector Vector_2},${3:Vector Vector_3},${4:Vector Vector_4},${5:Vector Vector_5},${6:float float_6},${7:float float_7})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawBoxDirection"},"DebugDrawCircle":{"displayText":"DebugDrawCircle","name":"DebugDrawCircle","rightLabel":"Global","type":"function","description":"Draw a debug circle (center, vRgb, a, rad, ztest, duration)","leftLabel":"void","snippet":"DebugDrawCircle(${1:Vector Vector_1},${2:Vector Vector_2},${3:float float_3},${4:float float_4},${5:bool bool_5},${6:float float_6})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawCircle"},"DebugDrawClear":{"displayText":"DebugDrawClear","name":"DebugDrawClear","rightLabel":"Global","type":"function","description":"Try to clear all the debug overlay info","leftLabel":"void","snippet":"DebugDrawClear()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawClear"},"DebugDrawLine":{"displayText":"DebugDrawLine","name":"DebugDrawLine","rightLabel":"Global","type":"function","description":"Draw a debug overlay line (origin, target, r, g, b, ztest, duration)","leftLabel":"void","snippet":"DebugDrawLine(${1:Vector Vector_1},${2:Vector Vector_2},${3:int int_3},${4:int int_4},${5:int int_5},${6:bool bool_6},${7:float float_7})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawLine"},"DebugDrawLine_vCol":{"displayText":"DebugDrawLine_vCol","name":"DebugDrawLine_vCol","rightLabel":"Global","type":"function","description":"Draw a debug line using color vec (start, end, vRgb, a, ztest, duration)","leftLabel":"void","snippet":"DebugDrawLine_vCol(${1:Vector Vector_1},${2:Vector Vector_2},${3:Vector Vector_3},${4:bool bool_4},${5:float float_5})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawLine_vCol"},"DebugDrawScreenTextLine":{"displayText":"DebugDrawScreenTextLine","name":"DebugDrawScreenTextLine","rightLabel":"Global","type":"function","description":"Draw text with a line offset (x, y, lineOffset, text, r, g, b, a, duration)","leftLabel":"void","snippet":"DebugDrawScreenTextLine(${1:float float_1},${2:float float_2},${3:int int_3},${4:string string_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:int int_8},${9:float float_9})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawScreenTextLine"},"DebugDrawSphere":{"displayText":"DebugDrawSphere","name":"DebugDrawSphere","rightLabel":"Global","type":"function","description":"Draw a debug sphere (center, vRgb, a, rad, ztest, duration)","leftLabel":"void","snippet":"DebugDrawSphere(${1:Vector Vector_1},${2:Vector Vector_2},${3:float float_3},${4:float float_4},${5:bool bool_5},${6:float float_6})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawSphere"},"DebugDrawText":{"displayText":"DebugDrawText","name":"DebugDrawText","rightLabel":"Global","type":"function","description":"Draw text in 3d (origin, text, bViewCheck, duration)","leftLabel":"void","snippet":"DebugDrawText(${1:Vector Vector_1},${2:string string_2},${3:bool bool_3},${4:float float_4})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugDrawText"},"DebugScreenTextPretty":{"displayText":"DebugScreenTextPretty","name":"DebugScreenTextPretty","rightLabel":"Global","type":"function","description":"Draw pretty debug text (x, y, lineOffset, text, r, g, b, a, duration, font, size, bBold)","leftLabel":"void","snippet":"DebugScreenTextPretty(${1:float float_1},${2:float float_2},${3:int int_3},${4:string string_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:int int_8},${9:float float_9},${10:string string_10},${11:int int_11},${12:bool bool_12})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DebugScreenTextPretty"},"DestroyDamageInfo":{"displayText":"DestroyDamageInfo","name":"DestroyDamageInfo","rightLabel":"Global","type":"function","description":"Free a damageinfo object that was created with CreateDamageInfo().","leftLabel":"void","snippet":"DestroyDamageInfo(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DestroyDamageInfo"},"DoCleaveAttack":{"displayText":"DoCleaveAttack","name":"DoCleaveAttack","rightLabel":"Global","type":"function","description":"(hAttacker, hTarget, hAbility, fDamage, fRadius, effectName)","leftLabel":"int","snippet":"DoCleaveAttack(${1:handle handle_1},${2:handle handle_2},${3:handle handle_3},${4:float float_4},${5:float float_5},${6:float float_6},${7:float float_7},${8:string string_8})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DoCleaveAttack"},"DoEntFire":{"displayText":"DoEntFire","name":"DoEntFire","rightLabel":"Global","type":"function","description":"#EntFire:Generate and entity i/o event","leftLabel":"void","snippet":"DoEntFire(${1:string string_1},${2:string string_2},${3:string string_3},${4:float float_4},${5:handle handle_5},${6:handle handle_6})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DoEntFire"},"DoEntFireByInstanceHandle":{"displayText":"DoEntFireByInstanceHandle","name":"DoEntFireByInstanceHandle","rightLabel":"Global","type":"function","description":"#EntFireByHandle:Generate and entity i/o event","leftLabel":"void","snippet":"DoEntFireByInstanceHandle(${1:handle handle_1},${2:string string_2},${3:string string_3},${4:float float_4},${5:handle handle_5},${6:handle handle_6})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DoEntFireByInstanceHandle"},"DoIncludeScript":{"displayText":"DoIncludeScript","name":"DoIncludeScript","rightLabel":"Global","type":"function","description":"Execute a script (internal)","leftLabel":"bool","snippet":"DoIncludeScript(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DoIncludeScript"},"DoScriptAssert":{"displayText":"DoScriptAssert","name":"DoScriptAssert","rightLabel":"Global","type":"function","description":"#ScriptAssert:Asserts the passed in value. Prints out a message and brings up the assert dialog.","leftLabel":"void","snippet":"DoScriptAssert(${1:bool bool_1},${2:string string_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DoScriptAssert"},"DoUniqueString":{"displayText":"DoUniqueString","name":"DoUniqueString","rightLabel":"Global","type":"function","description":"#UniqueString:Generate a string guaranteed to be unique across the life of the script VM, with an optional root string. Useful for adding data to tables when not sure what keys are already in use in that table.","leftLabel":"string","snippet":"DoUniqueString(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.DoUniqueString"},"EmitAnnouncerSound":{"displayText":"EmitAnnouncerSound","name":"EmitAnnouncerSound","rightLabel":"Global","type":"function","description":"Emit an announcer sound for all players.","leftLabel":"void","snippet":"EmitAnnouncerSound(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.EmitAnnouncerSound"},"EmitAnnouncerSoundForPlayer":{"displayText":"EmitAnnouncerSoundForPlayer","name":"EmitAnnouncerSoundForPlayer","rightLabel":"Global","type":"function","description":"Emit an announcer sound for a player.","leftLabel":"void","snippet":"EmitAnnouncerSoundForPlayer(${1:string string_1},${2:int int_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.EmitAnnouncerSoundForPlayer"},"EmitAnnouncerSoundForTeam":{"displayText":"EmitAnnouncerSoundForTeam","name":"EmitAnnouncerSoundForTeam","rightLabel":"Global","type":"function","description":"Emit an announcer sound for a team.","leftLabel":"void","snippet":"EmitAnnouncerSoundForTeam(${1:string string_1},${2:int int_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.EmitAnnouncerSoundForTeam"},"EmitAnnouncerSoundForTeamOnLocation":{"displayText":"EmitAnnouncerSoundForTeamOnLocation","name":"EmitAnnouncerSoundForTeamOnLocation","rightLabel":"Global","type":"function","description":"Emit an announcer sound for a team at a specific location.","leftLabel":"void","snippet":"EmitAnnouncerSoundForTeamOnLocation(${1:string string_1},${2:int int_2},${3:Vector Vector_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.EmitAnnouncerSoundForTeamOnLocation"},"EmitGlobalSound":{"displayText":"EmitGlobalSound","name":"EmitGlobalSound","rightLabel":"Global","type":"function","description":"Play named sound for all players","leftLabel":"void","snippet":"EmitGlobalSound(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.EmitGlobalSound"},"EmitSoundOn":{"displayText":"EmitSoundOn","name":"EmitSoundOn","rightLabel":"Global","type":"function","description":"Play named sound on Entity","leftLabel":"void","snippet":"EmitSoundOn(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.EmitSoundOn"},"EmitSoundOnClient":{"displayText":"EmitSoundOnClient","name":"EmitSoundOnClient","rightLabel":"Global","type":"function","description":"Play named sound only on the client for the passed in player","leftLabel":"void","snippet":"EmitSoundOnClient(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.EmitSoundOnClient"},"EmitSoundOnLocationForAllies":{"displayText":"EmitSoundOnLocationForAllies","name":"EmitSoundOnLocationForAllies","rightLabel":"Global","type":"function","description":"Emit a sound on a location from a unit, only for players allied with that unit (vLocation, soundName, hCaster","leftLabel":"void","snippet":"EmitSoundOnLocationForAllies(${1:Vector Vector_1},${2:string string_2},${3:handle handle_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.EmitSoundOnLocationForAllies"},"EmitSoundOnLocationWithCaster":{"displayText":"EmitSoundOnLocationWithCaster","name":"EmitSoundOnLocationWithCaster","rightLabel":"Global","type":"function","description":"Emit a sound on a location from a unit. (vLocation, soundName, hCaster).","leftLabel":"void","snippet":"EmitSoundOnLocationWithCaster(${1:Vector Vector_1},${2:string string_2},${3:handle handle_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.EmitSoundOnLocationWithCaster"},"EntIndexToHScript":{"displayText":"EntIndexToHScript","name":"EntIndexToHScript","rightLabel":"Global","type":"function","description":"Turn an entity index integer to an HScript representing that entity's script instance.","leftLabel":"handle","snippet":"EntIndexToHScript(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.EntIndexToHScript"},"ExecuteOrderFromTable":{"displayText":"ExecuteOrderFromTable","name":"ExecuteOrderFromTable","rightLabel":"Global","type":"function","description":"Issue an order from a script table","leftLabel":"void","snippet":"ExecuteOrderFromTable(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ExecuteOrderFromTable"},"ExponentialDecay":{"displayText":"ExponentialDecay","name":"ExponentialDecay","rightLabel":"Global","type":"function","description":"Smooth curve decreasing slower as it approaches zero","leftLabel":"float","snippet":"ExponentialDecay(${1:float float_1},${2:float float_2},${3:float float_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ExponentialDecay"},"FindClearSpaceForUnit":{"displayText":"FindClearSpaceForUnit","name":"FindClearSpaceForUnit","rightLabel":"Global","type":"function","description":"Place a unit somewhere not already occupied.","leftLabel":"bool","snippet":"FindClearSpaceForUnit(${1:handle handle_1},${2:Vector Vector_2},${3:bool bool_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FindClearSpaceForUnit"},"FindUnitsInLine":{"displayText":"FindUnitsInLine","name":"FindUnitsInLine","rightLabel":"Global","type":"function","description":"Find units that intersect the given line with the given flags.","leftLabel":"table","snippet":"FindUnitsInLine(${1:int int_1},${2:Vector Vector_2},${3:Vector Vector_3},${4:handle handle_4},${5:float float_5},${6:int int_6},${7:int int_7},${8:int int_8})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FindUnitsInLine"},"FindUnitsInRadius":{"displayText":"FindUnitsInRadius","name":"FindUnitsInRadius","rightLabel":"Global","type":"function","description":"Finds the units in a given radius with the given flags.","leftLabel":"table","snippet":"FindUnitsInRadius(${1:int int_1},${2:Vector Vector_2},${3:handle handle_3},${4:float float_4},${5:int int_5},${6:int int_6},${7:int int_7},${8:int int_8},${9:bool bool_9})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FindUnitsInRadius"},"FireEntityIOInputNameOnly":{"displayText":"FireEntityIOInputNameOnly","name":"FireEntityIOInputNameOnly","rightLabel":"Global","type":"function","description":"Fire Entity's Action Input w/no data","leftLabel":"void","snippet":"FireEntityIOInputNameOnly(${1:ehandle ehandle_1},${2:string string_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FireEntityIOInputNameOnly"},"FireEntityIOInputString":{"displayText":"FireEntityIOInputString","name":"FireEntityIOInputString","rightLabel":"Global","type":"function","description":"Fire Entity's Action Input with passed String - you own the memory","leftLabel":"void","snippet":"FireEntityIOInputString(${1:ehandle ehandle_1},${2:string string_2},${3:string string_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FireEntityIOInputString"},"FireEntityIOInputVec":{"displayText":"FireEntityIOInputVec","name":"FireEntityIOInputVec","rightLabel":"Global","type":"function","description":"Fire Entity's Action Input with passed Vector - you own the memory","leftLabel":"void","snippet":"FireEntityIOInputVec(${1:ehandle ehandle_1},${2:string string_2},${3:Vector Vector_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FireEntityIOInputVec"},"FireGameEvent":{"displayText":"FireGameEvent","name":"FireGameEvent","rightLabel":"Global","type":"function","description":"Fire a game event.","leftLabel":"void","snippet":"FireGameEvent(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FireGameEvent"},"FireGameEventLocal":{"displayText":"FireGameEventLocal","name":"FireGameEventLocal","rightLabel":"Global","type":"function","description":"Fire a game event without broadcasting to the client.","leftLabel":"void","snippet":"FireGameEventLocal(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FireGameEventLocal"},"FrameTime":{"displayText":"FrameTime","name":"FrameTime","rightLabel":"Global","type":"function","description":"Get the time spent on the server in the last frame","leftLabel":"float","snippet":"FrameTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.FrameTime"},"GetEntityIndexForTreeId":{"displayText":"GetEntityIndexForTreeId","name":"GetEntityIndexForTreeId","rightLabel":"Global","type":"function","description":"Get the enity index for a tree id specified as the entindex_target of a DOTA_UNIT_ORDER_CAST_TARGET_TREE.","leftLabel":"<unknown>","snippet":"GetEntityIndexForTreeId(${1:unsigned unsigned_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetEntityIndexForTreeId"},"GetFrameCount":{"displayText":"GetFrameCount","name":"GetFrameCount","rightLabel":"Global","type":"function","description":"Returns the engines current frame count","leftLabel":"int","snippet":"GetFrameCount()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetFrameCount"},"GetFrostyBoostAmount":{"displayText":"GetFrostyBoostAmount","name":"GetFrostyBoostAmount","rightLabel":"Global","type":"function","description":"No Description","leftLabel":"float","snippet":"GetFrostyBoostAmount(${1:int int_1},${2:int int_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetFrostyBoostAmount"},"GetFrostyPointsForRound":{"displayText":"GetFrostyPointsForRound","name":"GetFrostyPointsForRound","rightLabel":"Global","type":"function","description":"No Description","leftLabel":"int","snippet":"GetFrostyPointsForRound(${1:int int_1},${2:int int_2},${3:int int_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetFrostyPointsForRound"},"GetGoldFrostyBoostAmount":{"displayText":"GetGoldFrostyBoostAmount","name":"GetGoldFrostyBoostAmount","rightLabel":"Global","type":"function","description":"No Description","leftLabel":"float","snippet":"GetGoldFrostyBoostAmount(${1:int int_1},${2:int int_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetGoldFrostyBoostAmount"},"GetGoldFrostyPointsForRound":{"displayText":"GetGoldFrostyPointsForRound","name":"GetGoldFrostyPointsForRound","rightLabel":"Global","type":"function","description":"No Description","leftLabel":"int","snippet":"GetGoldFrostyPointsForRound(${1:int int_1},${2:int int_2},${3:int int_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetGoldFrostyPointsForRound"},"GetGroundHeight":{"displayText":"GetGroundHeight","name":"GetGroundHeight","rightLabel":"Global","type":"function","description":"No Description","leftLabel":"float","snippet":"GetGroundHeight(${1:Vector Vector_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetGroundHeight"},"GetGroundPosition":{"displayText":"GetGroundPosition","name":"GetGroundPosition","rightLabel":"Global","type":"function","description":"Returns the supplied position moved to the ground. Second parameter is an NPC for measuring movement collision hull offset.","leftLabel":"Vector","snippet":"GetGroundPosition(${1:Vector Vector_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetGroundPosition"},"GetItemCost":{"displayText":"GetItemCost","name":"GetItemCost","rightLabel":"Global","type":"function","description":"Get the cost of an item by name.","leftLabel":"int","snippet":"GetItemCost(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetItemCost"},"GetListenServerHost":{"displayText":"GetListenServerHost","name":"GetListenServerHost","rightLabel":"Global","type":"function","description":"Get the local player on a listen server.","leftLabel":"handle","snippet":"GetListenServerHost()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetListenServerHost"},"GetMapName":{"displayText":"GetMapName","name":"GetMapName","rightLabel":"Global","type":"function","description":"Get the name of the map.","leftLabel":"string","snippet":"GetMapName()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetMapName"},"GetMaxOutputDelay":{"displayText":"GetMaxOutputDelay","name":"GetMaxOutputDelay","rightLabel":"Global","type":"function","description":"Get the longest delay for all events attached to an output","leftLabel":"float","snippet":"GetMaxOutputDelay(${1:ehandle ehandle_1},${2:string string_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetMaxOutputDelay"},"GetPhysAngularVelocity":{"displayText":"GetPhysAngularVelocity","name":"GetPhysAngularVelocity","rightLabel":"Global","type":"function","description":"Get Angular Velocity for VPHYS or normal object. Returns a vector of the axis of rotation, multiplied by the degrees of rotation per second.","leftLabel":"Vector","snippet":"GetPhysAngularVelocity(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetPhysAngularVelocity"},"GetPhysVelocity":{"displayText":"GetPhysVelocity","name":"GetPhysVelocity","rightLabel":"Global","type":"function","description":"Get Velocity for VPHYS or normal object","leftLabel":"Vector","snippet":"GetPhysVelocity(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetPhysVelocity"},"GetSystemDate":{"displayText":"GetSystemDate","name":"GetSystemDate","rightLabel":"Global","type":"function","description":"Get the current real world date","leftLabel":"string","snippet":"GetSystemDate()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetSystemDate"},"GetSystemTime":{"displayText":"GetSystemTime","name":"GetSystemTime","rightLabel":"Global","type":"function","description":"Get the current real world time","leftLabel":"string","snippet":"GetSystemTime()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetSystemTime"},"GetTeamHeroKills":{"displayText":"GetTeamHeroKills","name":"GetTeamHeroKills","rightLabel":"Global","type":"function","description":"( int teamID )","leftLabel":"int","snippet":"GetTeamHeroKills(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetTeamHeroKills"},"GetTeamName":{"displayText":"GetTeamName","name":"GetTeamName","rightLabel":"Global","type":"function","description":"( int teamID )","leftLabel":"string","snippet":"GetTeamName(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetTeamName"},"GetTreeIdForEntityIndex":{"displayText":"GetTreeIdForEntityIndex","name":"GetTreeIdForEntityIndex","rightLabel":"Global","type":"function","description":"Given and entity index of a tree, get the tree id for use for use with with unit orders.","leftLabel":"int","snippet":"GetTreeIdForEntityIndex(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetTreeIdForEntityIndex"},"GetWorldMaxX":{"displayText":"GetWorldMaxX","name":"GetWorldMaxX","rightLabel":"Global","type":"function","description":"Gets the world's maximum X position.","leftLabel":"float","snippet":"GetWorldMaxX()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetWorldMaxX"},"GetWorldMaxY":{"displayText":"GetWorldMaxY","name":"GetWorldMaxY","rightLabel":"Global","type":"function","description":"Gets the world's maximum Y position.","leftLabel":"float","snippet":"GetWorldMaxY()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetWorldMaxY"},"GetWorldMinX":{"displayText":"GetWorldMinX","name":"GetWorldMinX","rightLabel":"Global","type":"function","description":"Gets the world's minimum X position.","leftLabel":"float","snippet":"GetWorldMinX()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetWorldMinX"},"GetWorldMinY":{"displayText":"GetWorldMinY","name":"GetWorldMinY","rightLabel":"Global","type":"function","description":"Gets the world's minimum Y position.","leftLabel":"float","snippet":"GetWorldMinY()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.GetWorldMinY"},"InitLogFile":{"displayText":"InitLogFile","name":"InitLogFile","rightLabel":"Global","type":"function","description":"If the given file doesn't exist, creates it with the given contents; does nothing if it exists","leftLabel":"void","snippet":"InitLogFile(${1:string string_1},${2:string string_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.InitLogFile"},"IsClient":{"displayText":"IsClient","name":"IsClient","rightLabel":"Global","type":"function","description":"Returns true if this is lua running from the client.dll.","leftLabel":"bool","snippet":"IsClient()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.IsClient"},"IsDedicatedServer":{"displayText":"IsDedicatedServer","name":"IsDedicatedServer","rightLabel":"Global","type":"function","description":"Returns true if this server is a dedicated server.","leftLabel":"bool","snippet":"IsDedicatedServer()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.IsDedicatedServer"},"IsInToolsMode":{"displayText":"IsInToolsMode","name":"IsInToolsMode","rightLabel":"Global","type":"function","description":"Returns true if this is lua running within tools mode.","leftLabel":"bool","snippet":"IsInToolsMode()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.IsInToolsMode"},"IsMarkedForDeletion":{"displayText":"IsMarkedForDeletion","name":"IsMarkedForDeletion","rightLabel":"Global","type":"function","description":"Returns true if the entity is valid and marked for deletion.","leftLabel":"bool","snippet":"IsMarkedForDeletion(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.IsMarkedForDeletion"},"IsServer":{"displayText":"IsServer","name":"IsServer","rightLabel":"Global","type":"function","description":"Returns true if this is lua running from the server.dll.","leftLabel":"bool","snippet":"IsServer()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.IsServer"},"IsValidEntity":{"displayText":"IsValidEntity","name":"IsValidEntity","rightLabel":"Global","type":"function","description":"Checks to see if the given hScript is a valid entity","leftLabel":"bool","snippet":"IsValidEntity(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.IsValidEntity"},"LimitPathingSearchDepth":{"displayText":"LimitPathingSearchDepth","name":"LimitPathingSearchDepth","rightLabel":"Global","type":"function","description":"Set the limit on the pathfinding search space.","leftLabel":"void","snippet":"LimitPathingSearchDepth(${1:float float_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.LimitPathingSearchDepth"},"LinkLuaModifier":{"displayText":"LinkLuaModifier","name":"LinkLuaModifier","rightLabel":"Global","type":"function","description":"Link a lua-defined modifier with the associated class ( className, fileName, LuaModifierType).","leftLabel":"void","snippet":"LinkLuaModifier(${1:string string_1},${2:string string_2},${3:int int_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.LinkLuaModifier"},"ListenToGameEvent":{"displayText":"ListenToGameEvent","name":"ListenToGameEvent","rightLabel":"Global","type":"function","description":"Register as a listener for a game event from script.","leftLabel":"int","snippet":"ListenToGameEvent(${1:string string_1},${2:handle handle_2},${3:handle handle_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ListenToGameEvent"},"LoadKeyValues":{"displayText":"LoadKeyValues","name":"LoadKeyValues","rightLabel":"Global","type":"function","description":"Creates a table from the specified keyvalues text file","leftLabel":"table","snippet":"LoadKeyValues(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.LoadKeyValues"},"LoadKeyValuesFromString":{"displayText":"LoadKeyValuesFromString","name":"LoadKeyValuesFromString","rightLabel":"Global","type":"function","description":"Creates a table from the specified keyvalues string","leftLabel":"table","snippet":"LoadKeyValuesFromString(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.LoadKeyValuesFromString"},"MakeStringToken":{"displayText":"MakeStringToken","name":"MakeStringToken","rightLabel":"Global","type":"function","description":"Checks to see if the given hScript is a valid entity","leftLabel":"int","snippet":"MakeStringToken(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.MakeStringToken"},"MinimapEvent":{"displayText":"MinimapEvent","name":"MinimapEvent","rightLabel":"Global","type":"function","description":"Start a minimap event. (nTeamID, hEntity, nXCoord, nYCoord, nEventType, nEventDuration).","leftLabel":"void","snippet":"MinimapEvent(${1:int int_1},${2:handle handle_2},${3:int int_3},${4:int int_4},${5:int int_5},${6:int int_6})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.MinimapEvent"},"Msg":{"displayText":"Msg","name":"Msg","rightLabel":"Global","type":"function","description":"Print a message","leftLabel":"void","snippet":"Msg(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.Msg"},"PauseGame":{"displayText":"PauseGame","name":"PauseGame","rightLabel":"Global","type":"function","description":"Pause or unpause the game.","leftLabel":"void","snippet":"PauseGame(${1:bool bool_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PauseGame"},"PlayerInstanceFromIndex":{"displayText":"PlayerInstanceFromIndex","name":"PlayerInstanceFromIndex","rightLabel":"Global","type":"function","description":"Get a script instance of a player by index.","leftLabel":"handle","snippet":"PlayerInstanceFromIndex(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PlayerInstanceFromIndex"},"PrecacheEntityFromTable":{"displayText":"PrecacheEntityFromTable","name":"PrecacheEntityFromTable","rightLabel":"Global","type":"function","description":"Precache an entity from KeyValues in table","leftLabel":"void","snippet":"PrecacheEntityFromTable(${1:string string_1},${2:handle handle_2},${3:handle handle_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheEntityFromTable"},"PrecacheEntityListFromTable":{"displayText":"PrecacheEntityListFromTable","name":"PrecacheEntityListFromTable","rightLabel":"Global","type":"function","description":"Precache a list of entity KeyValues tables","leftLabel":"void","snippet":"PrecacheEntityListFromTable(${1:handle handle_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheEntityListFromTable"},"PrecacheItemByNameAsync":{"displayText":"PrecacheItemByNameAsync","name":"PrecacheItemByNameAsync","rightLabel":"Global","type":"function","description":"Asynchronously precaches a DOTA item by its dota_npc_items.txt name, provides a callback when it's finished.","leftLabel":"void","snippet":"PrecacheItemByNameAsync(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheItemByNameAsync"},"PrecacheItemByNameSync":{"displayText":"PrecacheItemByNameSync","name":"PrecacheItemByNameSync","rightLabel":"Global","type":"function","description":"Precaches a DOTA item by its dota_npc_items.txt name","leftLabel":"void","snippet":"PrecacheItemByNameSync(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheItemByNameSync"},"PrecacheModel":{"displayText":"PrecacheModel","name":"PrecacheModel","rightLabel":"Global","type":"function","description":"( modelName, context ) - Manually precache a single model","leftLabel":"void","snippet":"PrecacheModel(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheModel"},"PrecacheResource":{"displayText":"PrecacheResource","name":"PrecacheResource","rightLabel":"Global","type":"function","description":"Manually precache a single resource","leftLabel":"void","snippet":"PrecacheResource(${1:string string_1},${2:string string_2},${3:handle handle_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheResource"},"PrecacheUnitByNameAsync":{"displayText":"PrecacheUnitByNameAsync","name":"PrecacheUnitByNameAsync","rightLabel":"Global","type":"function","description":"Asynchronously precaches a DOTA unit by its dota_npc_units.txt name, provides a callback when it's finished.","leftLabel":"void","snippet":"PrecacheUnitByNameAsync(${1:string string_1},${2:handle handle_2},${3:int int_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheUnitByNameAsync"},"PrecacheUnitByNameSync":{"displayText":"PrecacheUnitByNameSync","name":"PrecacheUnitByNameSync","rightLabel":"Global","type":"function","description":"Precaches a DOTA unit by its dota_npc_units.txt name","leftLabel":"void","snippet":"PrecacheUnitByNameSync(${1:string string_1},${2:handle handle_2},${3:int int_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheUnitByNameSync"},"PrecacheUnitFromTableAsync":{"displayText":"PrecacheUnitFromTableAsync","name":"PrecacheUnitFromTableAsync","rightLabel":"Global","type":"function","description":"Precaches a DOTA unit from a table of entity key values.","leftLabel":"void","snippet":"PrecacheUnitFromTableAsync(${1:handle handle_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheUnitFromTableAsync"},"PrecacheUnitFromTableSync":{"displayText":"PrecacheUnitFromTableSync","name":"PrecacheUnitFromTableSync","rightLabel":"Global","type":"function","description":"Precaches a DOTA unit from a table of entity key values.","leftLabel":"void","snippet":"PrecacheUnitFromTableSync(${1:handle handle_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrecacheUnitFromTableSync"},"PrintLinkedConsoleMessage":{"displayText":"PrintLinkedConsoleMessage","name":"PrintLinkedConsoleMessage","rightLabel":"Global","type":"function","description":"Print a console message with a linked console command","leftLabel":"void","snippet":"PrintLinkedConsoleMessage(${1:string string_1},${2:string string_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.PrintLinkedConsoleMessage"},"RandomFloat":{"displayText":"RandomFloat","name":"RandomFloat","rightLabel":"Global","type":"function","description":"Get a random float within a range","leftLabel":"float","snippet":"RandomFloat(${1:float float_1},${2:float float_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RandomFloat"},"RandomInt":{"displayText":"RandomInt","name":"RandomInt","rightLabel":"Global","type":"function","description":"Get a random int within a range","leftLabel":"int","snippet":"RandomInt(${1:int int_1},${2:int int_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RandomInt"},"RandomVector":{"displayText":"RandomVector","name":"RandomVector","rightLabel":"Global","type":"function","description":"Get a random 2D vector of the given length.","leftLabel":"Vector","snippet":"RandomVector(${1:float float_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RandomVector"},"RegisterSpawnGroupFilterProxy":{"displayText":"RegisterSpawnGroupFilterProxy","name":"RegisterSpawnGroupFilterProxy","rightLabel":"Global","type":"function","description":"Create a C proxy for a script-based spawn group filter","leftLabel":"void","snippet":"RegisterSpawnGroupFilterProxy(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RegisterSpawnGroupFilterProxy"},"ReloadMOTD":{"displayText":"ReloadMOTD","name":"ReloadMOTD","rightLabel":"Global","type":"function","description":"Reloads the MotD file","leftLabel":"void","snippet":"ReloadMOTD()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ReloadMOTD"},"RemoveSpawnGroupFilterProxy":{"displayText":"RemoveSpawnGroupFilterProxy","name":"RemoveSpawnGroupFilterProxy","rightLabel":"Global","type":"function","description":"Remove the C proxy for a script-based spawn group filter","leftLabel":"void","snippet":"RemoveSpawnGroupFilterProxy(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RemoveSpawnGroupFilterProxy"},"ResolveNPCPositions":{"displayText":"ResolveNPCPositions","name":"ResolveNPCPositions","rightLabel":"Global","type":"function","description":"Check and fix units that have been assigned a position inside collision radius of other NPCs.","leftLabel":"void","snippet":"ResolveNPCPositions(${1:Vector Vector_1},${2:float float_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ResolveNPCPositions"},"RollPercentage":{"displayText":"RollPercentage","name":"RollPercentage","rightLabel":"Global","type":"function","description":"(int nPct)","leftLabel":"bool","snippet":"RollPercentage(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RollPercentage"},"RotateOrientation":{"displayText":"RotateOrientation","name":"RotateOrientation","rightLabel":"Global","type":"function","description":"Rotate a QAngle by another QAngle.","leftLabel":"QAngle","snippet":"RotateOrientation(${1:QAngle QAngle_1},${2:QAngle QAngle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RotateOrientation"},"RotatePosition":{"displayText":"RotatePosition","name":"RotatePosition","rightLabel":"Global","type":"function","description":"Rotate a Vector around a point.","leftLabel":"Vector","snippet":"RotatePosition(${1:Vector Vector_1},${2:QAngle QAngle_2},${3:Vector Vector_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RotatePosition"},"RotateQuaternionByAxisAngle":{"displayText":"RotateQuaternionByAxisAngle","name":"RotateQuaternionByAxisAngle","rightLabel":"Global","type":"function","description":"(quaternion,vector,float) rotates a quaternion by the specified angle around the specified vector axis","leftLabel":"Quaternion","snippet":"RotateQuaternionByAxisAngle(${1:Quaternion Quaternion_1},${2:Vector Vector_2},${3:float float_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RotateQuaternionByAxisAngle"},"RotationDelta":{"displayText":"RotationDelta","name":"RotationDelta","rightLabel":"Global","type":"function","description":"Find the delta between two QAngles.","leftLabel":"QAngle","snippet":"RotationDelta(${1:QAngle QAngle_1},${2:QAngle QAngle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RotationDelta"},"RotationDeltaAsAngularVelocity":{"displayText":"RotationDeltaAsAngularVelocity","name":"RotationDeltaAsAngularVelocity","rightLabel":"Global","type":"function","description":"converts delta QAngle to an angular velocity Vector","leftLabel":"Vector","snippet":"RotationDeltaAsAngularVelocity(${1:QAngle QAngle_1},${2:QAngle QAngle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.RotationDeltaAsAngularVelocity"},"Say":{"displayText":"Say","name":"Say","rightLabel":"Global","type":"function","description":"Have Entity say string, and teamOnly or not","leftLabel":"void","snippet":"Say(${1:handle handle_1},${2:string string_2},${3:bool bool_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.Say"},"ScreenShake":{"displayText":"ScreenShake","name":"ScreenShake","rightLabel":"Global","type":"function","description":"Start a screenshake with the following parameters. vecCenter, flAmplitude, flFrequency, flDuration, flRadius, eCommand( SHAKE_START = 0, SHAKE_STOP = 1 ), bAirShake","leftLabel":"void","snippet":"ScreenShake(${1:Vector Vector_1},${2:float float_2},${3:float float_3},${4:float float_4},${5:float float_5},${6:int int_6},${7:bool bool_7})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ScreenShake"},"SendFrostivusTimeElapsedToGC":{"displayText":"SendFrostivusTimeElapsedToGC","name":"SendFrostivusTimeElapsedToGC","rightLabel":"Global","type":"function","description":"No Description","leftLabel":"void","snippet":"SendFrostivusTimeElapsedToGC()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SendFrostivusTimeElapsedToGC"},"SendFrostyPointsMessageToGC":{"displayText":"SendFrostyPointsMessageToGC","name":"SendFrostyPointsMessageToGC","rightLabel":"Global","type":"function","description":"No Description","leftLabel":"void","snippet":"SendFrostyPointsMessageToGC(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SendFrostyPointsMessageToGC"},"SendOverheadEventMessage":{"displayText":"SendOverheadEventMessage","name":"SendOverheadEventMessage","rightLabel":"Global","type":"function","description":"( DOTAPlayer sendToPlayer, int iMessageType, Entity targetEntity, int iValue, DOTAPlayer sourcePlayer ) - sendToPlayer and sourcePlayer can be nil - iMessageType is one of OVERHEAD_ALERT_*","leftLabel":"void","snippet":"SendOverheadEventMessage(${1:handle handle_1},${2:int int_2},${3:handle handle_3},${4:int int_4},${5:handle handle_5})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SendOverheadEventMessage"},"SendToConsole":{"displayText":"SendToConsole","name":"SendToConsole","rightLabel":"Global","type":"function","description":"Send a string to the console as a client command","leftLabel":"void","snippet":"SendToConsole(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SendToConsole"},"SendToServerConsole":{"displayText":"SendToServerConsole","name":"SendToServerConsole","rightLabel":"Global","type":"function","description":"Send a string to the console as a server command","leftLabel":"void","snippet":"SendToServerConsole(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SendToServerConsole"},"SetOpvarFloatAll":{"displayText":"SetOpvarFloatAll","name":"SetOpvarFloatAll","rightLabel":"Global","type":"function","description":"Sets an opvar value for all players","leftLabel":"void","snippet":"SetOpvarFloatAll(${1:string string_1},${2:string string_2},${3:string string_3},${4:float float_4})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SetOpvarFloatAll"},"SetOpvarFloatPlayer":{"displayText":"SetOpvarFloatPlayer","name":"SetOpvarFloatPlayer","rightLabel":"Global","type":"function","description":"Sets an opvar value for a single player","leftLabel":"void","snippet":"SetOpvarFloatPlayer(${1:string string_1},${2:string string_2},${3:string string_3},${4:float float_4},${5:handle handle_5})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SetOpvarFloatPlayer"},"SetPhysAngularVelocity":{"displayText":"SetPhysAngularVelocity","name":"SetPhysAngularVelocity","rightLabel":"Global","type":"function","description":"Set Angular Velocity for VPHYS or normal object, from a vector of the axis of rotation, multiplied by the degrees of rotation per second.","leftLabel":"void","snippet":"SetPhysAngularVelocity(${1:handle handle_1},${2:Vector Vector_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SetPhysAngularVelocity"},"SetQuestName":{"displayText":"SetQuestName","name":"SetQuestName","rightLabel":"Global","type":"function","description":"Set the current quest name.","leftLabel":"void","snippet":"SetQuestName(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SetQuestName"},"SetQuestPhase":{"displayText":"SetQuestPhase","name":"SetQuestPhase","rightLabel":"Global","type":"function","description":"Set the current quest phase.","leftLabel":"void","snippet":"SetQuestPhase(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SetQuestPhase"},"SetRenderingEnabled":{"displayText":"SetRenderingEnabled","name":"SetRenderingEnabled","rightLabel":"Global","type":"function","description":"Set rendering on/off for an ehandle","leftLabel":"void","snippet":"SetRenderingEnabled(${1:ehandle ehandle_1},${2:bool bool_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SetRenderingEnabled"},"SetTeamCustomHealthbarColor":{"displayText":"SetTeamCustomHealthbarColor","name":"SetTeamCustomHealthbarColor","rightLabel":"Global","type":"function","description":"( teamNumber, r, g, b )","leftLabel":"void","snippet":"SetTeamCustomHealthbarColor(${1:int int_1},${2:int int_2},${3:int int_3},${4:int int_4})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SetTeamCustomHealthbarColor"},"ShowCustomHeaderMessage":{"displayText":"ShowCustomHeaderMessage","name":"ShowCustomHeaderMessage","rightLabel":"Global","type":"function","description":"( const char *pszMessage, int nPlayerID, int nValue, float flTime ) - Supports localized strings - %s1 = PlayerName, %s2 = Value, %s3 = TeamName","leftLabel":"void","snippet":"ShowCustomHeaderMessage(${1:string string_1},${2:int int_2},${3:int int_3},${4:float float_4})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ShowCustomHeaderMessage"},"ShowGenericPopup":{"displayText":"ShowGenericPopup","name":"ShowGenericPopup","rightLabel":"Global","type":"function","description":"Show a generic popup dialog for all players.","leftLabel":"void","snippet":"ShowGenericPopup(${1:string string_1},${2:string string_2},${3:string string_3},${4:string string_4},${5:int int_5})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ShowGenericPopup"},"ShowGenericPopupToPlayer":{"displayText":"ShowGenericPopupToPlayer","name":"ShowGenericPopupToPlayer","rightLabel":"Global","type":"function","description":"Show a generic popup dialog to a specific player.","leftLabel":"void","snippet":"ShowGenericPopupToPlayer(${1:handle handle_1},${2:string string_2},${3:string string_3},${4:string string_4},${5:string string_5},${6:int int_6})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ShowGenericPopupToPlayer"},"ShowMessage":{"displayText":"ShowMessage","name":"ShowMessage","rightLabel":"Global","type":"function","description":"Print a hud message on all clients","leftLabel":"void","snippet":"ShowMessage(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.ShowMessage"},"SpawnEntityFromTableSynchronous":{"displayText":"SpawnEntityFromTableSynchronous","name":"SpawnEntityFromTableSynchronous","rightLabel":"Global","type":"function","description":"Synchronously spawns a single entity from a table","leftLabel":"handle","snippet":"SpawnEntityFromTableSynchronous(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SpawnEntityFromTableSynchronous"},"SpawnEntityGroupFromTable":{"displayText":"SpawnEntityGroupFromTable","name":"SpawnEntityGroupFromTable","rightLabel":"Global","type":"function","description":"Hierarchically spawn an entity group from a set of spawn tables.","leftLabel":"bool","snippet":"SpawnEntityGroupFromTable(${1:handle handle_1},${2:bool bool_2},${3:handle handle_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SpawnEntityGroupFromTable"},"SpawnEntityListFromTableAsynchronous":{"displayText":"SpawnEntityListFromTableAsynchronous","name":"SpawnEntityListFromTableAsynchronous","rightLabel":"Global","type":"function","description":"Asynchronously spawn an entity group from a list of spawn tables. A callback will be triggered when the spawning is complete","leftLabel":"int","snippet":"SpawnEntityListFromTableAsynchronous(${1:handle handle_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SpawnEntityListFromTableAsynchronous"},"SpawnEntityListFromTableSynchronous":{"displayText":"SpawnEntityListFromTableSynchronous","name":"SpawnEntityListFromTableSynchronous","rightLabel":"Global","type":"function","description":"Synchronously spawn an entity group from a list of spawn tables.","leftLabel":"handle","snippet":"SpawnEntityListFromTableSynchronous(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SpawnEntityListFromTableSynchronous"},"SplineQuaternions":{"displayText":"SplineQuaternions","name":"SplineQuaternions","rightLabel":"Global","type":"function","description":"(quaternion,quaternion,float) very basic interpolation of v0 to v1 over t on [0,1]","leftLabel":"Quaternion","snippet":"SplineQuaternions(${1:Quaternion Quaternion_1},${2:Quaternion Quaternion_2},${3:float float_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SplineQuaternions"},"SplineVectors":{"displayText":"SplineVectors","name":"SplineVectors","rightLabel":"Global","type":"function","description":"(vector,vector,float) very basic interpolation of v0 to v1 over t on [0,1]","leftLabel":"Vector","snippet":"SplineVectors(${1:Vector Vector_1},${2:Vector Vector_2},${3:float float_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.SplineVectors"},"StartSoundEvent":{"displayText":"StartSoundEvent","name":"StartSoundEvent","rightLabel":"Global","type":"function","description":"Start a sound event","leftLabel":"void","snippet":"StartSoundEvent(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StartSoundEvent"},"StartSoundEventFromPosition":{"displayText":"StartSoundEventFromPosition","name":"StartSoundEventFromPosition","rightLabel":"Global","type":"function","description":"Start a sound event from position","leftLabel":"void","snippet":"StartSoundEventFromPosition(${1:string string_1},${2:Vector Vector_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StartSoundEventFromPosition"},"StartSoundEventFromPositionReliable":{"displayText":"StartSoundEventFromPositionReliable","name":"StartSoundEventFromPositionReliable","rightLabel":"Global","type":"function","description":"Start a sound event from position with reliable delivery","leftLabel":"void","snippet":"StartSoundEventFromPositionReliable(${1:string string_1},${2:Vector Vector_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StartSoundEventFromPositionReliable"},"StartSoundEventFromPositionUnreliable":{"displayText":"StartSoundEventFromPositionUnreliable","name":"StartSoundEventFromPositionUnreliable","rightLabel":"Global","type":"function","description":"Start a sound event from position with optional delivery","leftLabel":"void","snippet":"StartSoundEventFromPositionUnreliable(${1:string string_1},${2:Vector Vector_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StartSoundEventFromPositionUnreliable"},"StartSoundEventReliable":{"displayText":"StartSoundEventReliable","name":"StartSoundEventReliable","rightLabel":"Global","type":"function","description":"Start a sound event with reliable delivery","leftLabel":"void","snippet":"StartSoundEventReliable(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StartSoundEventReliable"},"StartSoundEventUnreliable":{"displayText":"StartSoundEventUnreliable","name":"StartSoundEventUnreliable","rightLabel":"Global","type":"function","description":"Start a sound event with optional delivery","leftLabel":"void","snippet":"StartSoundEventUnreliable(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StartSoundEventUnreliable"},"StopEffect":{"displayText":"StopEffect","name":"StopEffect","rightLabel":"Global","type":"function","description":"Pass entity and effect name","leftLabel":"void","snippet":"StopEffect(${1:handle handle_1},${2:string string_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StopEffect"},"StopListeningToAllGameEvents":{"displayText":"StopListeningToAllGameEvents","name":"StopListeningToAllGameEvents","rightLabel":"Global","type":"function","description":"Stop listening to all game events within a specific context.","leftLabel":"void","snippet":"StopListeningToAllGameEvents(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StopListeningToAllGameEvents"},"StopListeningToGameEvent":{"displayText":"StopListeningToGameEvent","name":"StopListeningToGameEvent","rightLabel":"Global","type":"function","description":"Stop listening to a particular game event.","leftLabel":"bool","snippet":"StopListeningToGameEvent(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StopListeningToGameEvent"},"StopSoundEvent":{"displayText":"StopSoundEvent","name":"StopSoundEvent","rightLabel":"Global","type":"function","description":"Stops a sound event with optional delivery","leftLabel":"void","snippet":"StopSoundEvent(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StopSoundEvent"},"StopSoundOn":{"displayText":"StopSoundOn","name":"StopSoundOn","rightLabel":"Global","type":"function","description":"Stop named sound on Entity","leftLabel":"void","snippet":"StopSoundOn(${1:string string_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.StopSoundOn"},"Time":{"displayText":"Time","name":"Time","rightLabel":"Global","type":"function","description":"Get the current server time","leftLabel":"float","snippet":"Time()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.Time"},"TraceCollideable":{"displayText":"TraceCollideable","name":"TraceCollideable","rightLabel":"Global","type":"function","description":"Pass table - Inputs: start, end, ent, (optional mins, maxs) -- outputs: pos, fraction, hit, startsolid, normal","leftLabel":"bool","snippet":"TraceCollideable(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.TraceCollideable"},"TraceHull":{"displayText":"TraceHull","name":"TraceHull","rightLabel":"Global","type":"function","description":"Pass table - Inputs: start, end, min, max, mask, ignore  -- outputs: pos, fraction, hit, enthit, startsolid","leftLabel":"bool","snippet":"TraceHull(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.TraceHull"},"TraceLine":{"displayText":"TraceLine","name":"TraceLine","rightLabel":"Global","type":"function","description":"Pass table - Inputs: startpos, endpos, mask, ignore  -- outputs: pos, fraction, hit, enthit, startsolid","leftLabel":"bool","snippet":"TraceLine(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.TraceLine"},"UTIL_MessageText":{"displayText":"UTIL_MessageText","name":"UTIL_MessageText","rightLabel":"Global","type":"function","description":"Sends colored text to one client.","leftLabel":"void","snippet":"UTIL_MessageText(${1:int int_1},${2:string string_2},${3:int int_3},${4:int int_4},${5:int int_5},${6:int int_6})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UTIL_MessageText"},"UTIL_MessageTextAll":{"displayText":"UTIL_MessageTextAll","name":"UTIL_MessageTextAll","rightLabel":"Global","type":"function","description":"Sends colored text to all clients.","leftLabel":"void","snippet":"UTIL_MessageTextAll(${1:string string_1},${2:int int_2},${3:int int_3},${4:int int_4},${5:int int_5})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UTIL_MessageTextAll"},"UTIL_MessageTextAll_WithContext":{"displayText":"UTIL_MessageTextAll_WithContext","name":"UTIL_MessageTextAll_WithContext","rightLabel":"Global","type":"function","description":"Sends colored text to all clients. (Valid context keys: player_id, value, team_id)","leftLabel":"void","snippet":"UTIL_MessageTextAll_WithContext(${1:string string_1},${2:int int_2},${3:int int_3},${4:int int_4},${5:int int_5},${6:handle handle_6})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UTIL_MessageTextAll_WithContext"},"UTIL_MessageText_WithContext":{"displayText":"UTIL_MessageText_WithContext","name":"UTIL_MessageText_WithContext","rightLabel":"Global","type":"function","description":"Sends colored text to one client. (Valid context keys: player_id, value, team_id)","leftLabel":"void","snippet":"UTIL_MessageText_WithContext(${1:int int_1},${2:string string_2},${3:int int_3},${4:int int_4},${5:int int_5},${6:int int_6},${7:handle handle_7})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UTIL_MessageText_WithContext"},"UTIL_Remove":{"displayText":"UTIL_Remove","name":"UTIL_Remove","rightLabel":"Global","type":"function","description":"Removes the specified entity","leftLabel":"void","snippet":"UTIL_Remove(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UTIL_Remove"},"UTIL_RemoveImmediate":{"displayText":"UTIL_RemoveImmediate","name":"UTIL_RemoveImmediate","rightLabel":"Global","type":"function","description":"Immediately removes the specified entity","leftLabel":"void","snippet":"UTIL_RemoveImmediate(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UTIL_RemoveImmediate"},"UTIL_ResetMessageText":{"displayText":"UTIL_ResetMessageText","name":"UTIL_ResetMessageText","rightLabel":"Global","type":"function","description":"Clear all message text on one client.","leftLabel":"void","snippet":"UTIL_ResetMessageText(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UTIL_ResetMessageText"},"UTIL_ResetMessageTextAll":{"displayText":"UTIL_ResetMessageTextAll","name":"UTIL_ResetMessageTextAll","rightLabel":"Global","type":"function","description":"Clear all message text from all clients.","leftLabel":"void","snippet":"UTIL_ResetMessageTextAll()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UTIL_ResetMessageTextAll"},"UnitFilter":{"displayText":"UnitFilter","name":"UnitFilter","rightLabel":"Global","type":"function","description":"Check if a unit passes a set of filters. (hNPC, nTargetTeam, nTargetType, nTargetFlags, nTeam","leftLabel":"int","snippet":"UnitFilter(${1:handle handle_1},${2:int int_2},${3:int int_3},${4:int int_4},${5:int int_5})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UnitFilter"},"UnloadSpawnGroup":{"displayText":"UnloadSpawnGroup","name":"UnloadSpawnGroup","rightLabel":"Global","type":"function","description":"Unload a spawn group by name","leftLabel":"void","snippet":"UnloadSpawnGroup(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UnloadSpawnGroup"},"UnloadSpawnGroupByHandle":{"displayText":"UnloadSpawnGroupByHandle","name":"UnloadSpawnGroupByHandle","rightLabel":"Global","type":"function","description":"Unload a spawn group by handle","leftLabel":"void","snippet":"UnloadSpawnGroupByHandle(${1:int int_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UnloadSpawnGroupByHandle"},"UpdateEventPoints":{"displayText":"UpdateEventPoints","name":"UpdateEventPoints","rightLabel":"Global","type":"function","description":"No Description","leftLabel":"void","snippet":"UpdateEventPoints(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.UpdateEventPoints"},"VectorToAngles":{"displayText":"VectorToAngles","name":"VectorToAngles","rightLabel":"Global","type":"function","description":"Get Qangles (with no roll) for a Vector.","leftLabel":"QAngle","snippet":"VectorToAngles(${1:Vector Vector_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.VectorToAngles"},"Warning":{"displayText":"Warning","name":"Warning","rightLabel":"Global","type":"function","description":"Print a warning","leftLabel":"void","snippet":"Warning(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.Warning"},"cvar_getf":{"displayText":"cvar_getf","name":"cvar_getf","rightLabel":"Global","type":"function","description":"Gets the value of the given cvar, as a float.","leftLabel":"float","snippet":"cvar_getf(${1:string string_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.cvar_getf"},"cvar_setf":{"displayText":"cvar_setf","name":"cvar_setf","rightLabel":"Global","type":"function","description":"Sets the value of the given cvar, as a float.","leftLabel":"bool","snippet":"cvar_setf(${1:string string_1},${2:float float_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.cvar_setf"},"rr_AddDecisionRule":{"displayText":"rr_AddDecisionRule","name":"rr_AddDecisionRule","rightLabel":"Global","type":"function","description":"Add a rule to the decision database.","leftLabel":"bool","snippet":"rr_AddDecisionRule(${1:handle handle_1})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.rr_AddDecisionRule"},"rr_CommitAIResponse":{"displayText":"rr_CommitAIResponse","name":"rr_CommitAIResponse","rightLabel":"Global","type":"function","description":"Commit the result of QueryBestResponse back to the given entity to play. Call with params (entity, airesponse)","leftLabel":"bool","snippet":"rr_CommitAIResponse(${1:handle handle_1},${2:handle handle_2})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.rr_CommitAIResponse"},"rr_GetResponseTargets":{"displayText":"rr_GetResponseTargets","name":"rr_GetResponseTargets","rightLabel":"Global","type":"function","description":"Retrieve a table of all available expresser targets, in the form { name : handle, name: handle }.","leftLabel":"handle","snippet":"rr_GetResponseTargets()","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.rr_GetResponseTargets"},"rr_QueryBestResponse":{"displayText":"rr_QueryBestResponse","name":"rr_QueryBestResponse","rightLabel":"Global","type":"function","description":"Params: (entity, query) : tests 'query' against entity's response system and returns the best response found (or null if none found).","leftLabel":"bool","snippet":"rr_QueryBestResponse(${1:handle handle_1},${2:handle handle_2},${3:handle handle_3})","descriptionMoreURL":"https://developer.valvesoftware.com/wiki/Dota_2_Workshop_Tools/Scripting/API/Global.rr_QueryBestResponse"}}